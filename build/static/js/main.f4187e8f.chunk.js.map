{"version":3,"sources":["components/Users/User/User.css","containers/App.css","components/UI/Modal/Modal.css","components/UI/Backdrop/Backdrop.css","components/Chart/Result.css","components/Surveys/Survey/SurveyForm.css","components/HomePage/HomePage.css","components/Accounts/Account/Account.css","components/Surveys/SurveyBuilder/SurveyBuilder.css","components/Login/Login.css","components/HomePage/img/survey-01.gif","components/HomePage/img/survey-02.gif","components/HomePage/img/survey-03.gif","axios-survey.js","store/actions/surveyBuilderActions.js","store/actions/actionsTypes.js","store/actions/accountActions.js","store/actions/userActions.js","store/actions/surveysManagerActions.js","store/actions/accountsManagerActions.js","store/actions/surveyActions.js","store/actions/appActions.js","components/UI/Backdrop/Backdrop.js","hoc/Auxiliary/Auxiliary.js","components/UI/Modal/Modal.js","hoc/withErrorHandler/withErrorHandler.js","components/Login/AuthHandler.js","components/Login/Protected.js","components/Accounts/Account/Account.js","components/Users/User/User.js","components/HomePage/HomePage.js","components/Question/Question.js","components/Surveys/SurveyBuilder/NewQuestion.js","components/Login/CompanyOnly.js","components/Surveys/SurveyBuilder/SurveyBuilder.js","components/Surveys/SurveysManager/SurveysManager.js","components/Login/AdminOnly.js","components/Accounts/AccountsManager/AccountsManager.js","components/Users/UsersManager/UsersManager.js","store/actions/usersManagerActions.js","components/Registration/FormUserDetails.js","components/Registration/FormUserRegister.js","components/Registration/FormPersonalDetails.js","components/Registration/Confirm.js","components/Registration/Success.js","components/Registration/UserForm.js","components/Surveys/SurveysList/SurveysList.js","components/Chart/SurveyChart.js","components/Chart/Question.js","components/Chart/Result.js","components/Login/Login.js","components/Surveys/Survey/FormQuestions.js","components/Surveys/Survey/AnswerOpt.js","components/Surveys/Survey/SurveyForm.js","containers/Drawer.js","containers/Header.js","containers/App.js","serviceWorker.js","store/utility.js","store/reducers/surveyBuilderReducers.js","store/reducers/accountReducers.js","store/reducers/userReducers.js","store/reducers/appReducers.js","store/reducers/surveysManagerReducers.js","store/reducers/usersManagerReducers.js","store/reducers/accountsManagerReducers.js","store/reducers/surveyReducers.js","store/reducers/index.js","index.js","components/Surveys/SurveysManager/SurveysManager.css","components/Accounts/AccountsManager/AccountsManager.css","components/Users/UsersManager/UsersManager.css","components/Surveys/SurveysList/SurveysList.css"],"names":["module","exports","userComponent","buttonToolbar","Form","Label","Input","datePicker","formGroup","select","App","nav","link","header","list","Modal","Backdrop","result","survey_form","surveyAnswer","content","featureHero","featureHeading","featureBtn","featureLight","featureLightHeading","featureLightText","featureLightBtn","featureGray","featureDark","featureDarkHeading","featureDarkText","featureYellow","featureYellowHeading","featureYellowBtn","hiddenLgUp","account","pageHeader","form","label","input","button","surveyBuilder","group","buttonGroup","table","tableText","tableAction","tableId","subheader","showAnswers","fade","hideAnswers","slide-in","slide-out","wrapper","left","right","signin","logo","textInput","primaryBtn","secondaryBtn","or","links","bar","showcase","showcaseText","__webpack_require__","p","instance","axios","create","baseURL","setting","api","url","saveSurvey","survey","type","saveSurveyFailed","error","console","log","createAnswerFailed","saveAnswerFailed","deleteAnswerFailed","deleteQuestionFailed","saveQuestionFailed","fetchSurveyFailed","createQuestionFailed","createSurveyFailed","asyncFetchAccount","account_id","dispatch","get","concat","then","response","status","data","errno","sqlMessage","accountResponse","catch","fetchAccountFailed","createAccountFailed","asyncCreateAccount","id","maxId","editAccount","resetAccount","newAccount","routing","saveAccount","saveAccountFailed","fetchUser","user","asyncFetchUser","accountFK","resetUser","newUser","setUserAccountFK","accountId","setUserAccountFKFailed","asyncCreateUser","maxResponse","user_id","createUser","createUserFailed","saveUser","listSurveys","surveys","listSurveysFailed","asyncDeleteSurvey","delete","deleteSurvey","asyncListAccounts","accounts","listAccountsFailed","registerAnswerFailed","surveyList","surveyListFailed","getSurveyAndQuestionsFailed","asyncGetSurveyAndQuestions","survey_id","questionsResponse","questions","qCount","length","forEach","question","answerResponse","answers","getSurveyAndQuestions","logoutUser","loginUserFailed","userLoginFailed","fetchFirstNameFailed","backdrop","props","show","react_default","a","createElement","className","classes","onClick","clicked","auxiliary","children","modal","Auxiliary","Backdrop_Backdrop","modalClosed","style","transform","opacity","withErrorHandler","WrappedComponent","_Component","_class2","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","state","errorConfirmedHandler","setState","inherits","createClass","key","value","_this2","interceptors","request","use","req","res","Modal_Modal","message","Component","AuthHandler","login","password","fetch","method","body","JSON","stringify","setToken","token","Promise","resolve","loggedIn","getToken","isTokenExpired","tokenCheck","id_token","localStorage","getItem","decode","exp","Date","now","err","idToken","setItem","logout","removeItem","getData","isAdmin","isCompany","whenExpired","options","headers","Accept","Content-Type","objectSpread","_checkStatus","json","Error","statusText","Protected","ProtectedComponent","authHandler","Protection","loaded","onLogoutUser","history","push","Account","accountName","confirmPassword","passwordsMatch","expireDate","joinedDate","modifiedDate","isExpired","editing","unEditedState","onEditAccount","cancelEditing","unEditedAccount","onCancelEditAccount","formatMomentForDatabaseSaving","onSaveNewAccount","onSaveAccount","getDateMoment","dateString","constructor","name","newDate","slice","moment","getFormattedMoment","date","format","handleExpireDateChange","bind","assertThisInitialized","handleUsernameChange","handlePasswordChange","handleConfirmPasswordChange","setExpires","formatMoment","goBack","updateState","accountsManager","selectedAccount","onFetchAccount","app","nextProps","fetchSuccess","saveSuccess","nextState","nextContext","componentShouldUpdate","someProps","onResetAccount","el","target","withTime","dateMoment","PageHeader","Clearfix","FormGroup","ControlLabel","htmlFor","FormControl","defaultValue","disabled","onChange","react_datepicker_es","dropdownMode","showYearDropdown","showMonthDropdown","selected","openToDate","dateFormat","minDate","ButtonToolbar","Button","bsStyle","connect","onCreateAccount","onListAccounts","cancelEditAccount","put","asyncSaveAccount","post","asyncSaveNewAccount","onSetAccountId","User","firstname","lastname","email","birthdate","phone","streetAddress","postalCode","rewards","getMomentFromDateString","onSaveNewUser","onSaveUser","logState","handleBirthdateChange","handlePostalCodeChange","handleStreetAddressChange","handlePhoneChange","handleEmailChange","handleLastnameChange","handleFirstnameChange","handleAccountFKChange","handleAccountTypeChange","usersManager","selectedUser","onFetchUser","nextContent","onResetUser","accountType","maxDate","componentClass","readOnly","asyncSaveUser","asyncSaveNewUser","onCreateUser","HomePage","href","logged_in","src","require","alt","ButtonGroup","edit","newQuestion","evt","inputValue","save","cancel","CompanyOnly","CompanyComponent","ProtectionCompanyComponent","alert","replace","SurveyBuilder","title","answer","editingSurvey","editingQuestion","editingAnswer","newSurvey","newAnswer","inputId","updateInputValue","updateSurveyTitle","document","getElementById","onSetSurveyTitle","updateQuestionString","onSetQuestionString","updateAnswerString","onSetAnswerString","addNewQuestion","saveQuestion","editQuestion","cancelQuestion","deleteQuestion","saveAnswer","editAnswer","cancelAnswer","deleteAnswer","addNewAnswer","saveSurveyIdAndTitle","editSurvey","newSurveyBuilderSurvey","oldSurveyBuilderSurvey","oldSurvey","onFetchSurvey","questionA","questionB","onEditSurvey","owner","onSaveSurvey","answer_option","onAnswerSaved","onAnswerEdited","onAnswerCanceled","onAnswerDeleted","questionFK","onAnswerCreated","surveyFK","onQuestionCreated","editedQuestion","savedQuestion","onQuestionSaved","onQuestionCanceled","onQuestionEdited","onQuestionDeleted","onHideAnswers","onShowAnswers","_this3","Table","map","NewQuestion","Question_Question","fetchSurvey","asyncFetchSurvey","srvy","asyncSaveSurvey","asyncCreateQuestion","asyncSaveQuestion","question_id","asyncCreateAnswer","asyncSaveAnswer","asyncDeleteAnswer","setSurveyTitle","question_string","setQuestionString","answer_id","answer_string","setAnswerString","SurveysManager","addNewSurvey","onListSurveys","onSetSurveyId","onCreateNewSurvey","onDeleteSurvey","surveysManager","marginTop","btnPrimary","btnDanger","btn","asyncListSurveys","setSurveyId","AdminOnly","AdminComponent","ProtectionAdminComponent","AccountsManager","deleteAccount","createAccount","onSelectAccount","onDeleteAccount","accountManager","deleteAccountFailed","asyncDeleteAccount","selectAccount","UsersManager","editUser","deleteUser","onListUsers","onSelectUser","onDeleteUser","users","listUsers","asyncDeleteUser","user_kd","FormUserDetails","continue","e","preventDefault","nextStep","back","prevStep","_this$props","values","handleChange","MuiThemeProvider_default","Fragment","FormControl_default","styles","InputFirst","InputLabel_default","Input_default","InputLast","component","RadioGroup_default","aria-label","row","FormControlLabel_default","control","Radio_default","color","labelPlacement","RaisedButton_default","primary","margin","width","showPassword","isMatch","passwordConfirm","handlePasswordMatch","handleClickShowPassword","handlePaswordChange","_this$state","username","endAdornment","InputAdornment_default","position","IconButton_default","Visibility_default","VisibilityOff_default","FormHelperText_default","FormPersonalDetails","TextField_default","InputLabelProps","shrink","InputDate","marginBottom","firstName","lastName","onCreateNewAccount","onCreateNewUser","_this$props$values","List","primaryText","secondaryText","createNewAccount","asyncCreateNewAccount","asyncCreateNewUser","autHandler","setAccountFK","onSetUserAccountFK","onSetApp","Redirect","to","asyncSetUserAccountFK","setAppUserAccountIdName","UserForm","step","defineProperty","FormUserRegister","Registration_FormUserDetails","Registration_FormPersonalDetails","Confirm","Success","ListSurveys","takeTheSurvey","onGetSurveyAndQuestions","item","text","Edit_default","check","surveysList","textAlign","fontFamily","container","SurveyChart","makeChart","optionArray","answerArray","isThereChoice","questionId","isClicked","buttonText","number","display","urlNumbers","Axios","urlQuestion","urlOptions","i","urlAnswers","count","j","k","setOfData","index_esm","height","chartType","loader","Question","getQuestions","surveyId","numbers","_this4","Chart_SurveyChart","Result","Chart_Question","Login","handleSubmit","event","onUserLogin","onSubmit","autoComplete","autoFocus","NavLink","Route","path","showcaseContent","caseText","nameResponse","logindata","userType","asyncUserLogin","FormQuestions","_ref","fontWeight","fontSize","variant","AnswerOpt","Answer","handleRadioButtonChange","checked","assign","answerId","Options","option","newOption","answerElement","onSave","isAnswerSelected","answerOption","AnswerOption","ans","RadioAnswer","React","SurveyForm","val","onRegisterAnswer","filter","prevState","toConsumableArray","getSurvey","q","idx","undefined","Survey_FormQuestions","Survey_AnswerOpt","Button_default","backgroundColor","userAnswer","user_answer","userFK","asynRegisterAnswer","Drawer","toggleDrawer","side","open","drawerStyle","padding","textDecoration","sideListAdmin","items","core_List_default","Link","ListItem_default","ListItemText_default","sideListCompany","sideListClient","outline","Menu_default","SwipeableDrawer_default","anchor","onClose","onOpen","tabIndex","role","onKeyDown","isLogged","Header","showDropdown","anchorEl","currentTarget","closeDropdown","_handleLogout","btnStyle","marginLeft","toolbarStyle","marginRight","letterSpacing","textTransform","AppBar_default","flexDirection","boxShadow","containers_Drawer","Toolbar_default","aria-owns","aria-haspopup","core_Menu_default","Boolean","MenuItem_default","onLoginUser","_setInfo","containers_Header","Switch","SurveysList","background","withRouter","onFetchFirstname","comp","fetchFirstname","asyncFetchFirstName","user_name","loginUser","asyncLoginUser","window","location","hostname","match","updateObject","oldObject","updatedValues","initialState","surveyBuilderReducers","action","errorMessage","isArray","newAnswers","index","canceledIndex","splice","deletedIndex","accountReducers","acnt","useraccount","userReducers","user_data","loggged_in","appReducers","newApp","surveysManagerReducers","deleteIndex","usersManagerReducers","accountsManagerReducers","fetched","surveyReducers","answerSavedSuccessfully","fetchData","rootReducer","combineReducers","accounsManagerReducers","appReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","next","thunk","es","BrowserRouter","src_containers_App","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f4187e8f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userComponent\":\"User__userComponent__1019G\",\"buttonToolbar\":\"User__buttonToolbar__3z9P1\",\"Form\":\"User__Form__2oC5o\",\"Label\":\"User__Label__1QSR7\",\"Input\":\"User__Input__3CDRu\",\"datePicker\":\"User__datePicker__3So19\",\"formGroup\":\"User__formGroup__2hv_U\",\"select\":\"User__select__1edME\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__3t9oX\",\"nav\":\"App__nav__1IdiQ\",\"link\":\"App__link__xDC6h\",\"header\":\"App__header__GHg6o\",\"list\":\"App__list__XzT16\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal__Modal__cd320\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Backdrop\":\"Backdrop__Backdrop__eeZpu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"result\":\"Result__result__3_NEH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"survey_form\":\"SurveyForm__survey_form__1nPeu\",\"surveyAnswer\":\"SurveyForm__surveyAnswer__2plI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"HomePage__content__1nqXy\",\"featureHero\":\"HomePage__featureHero__3qz5E\",\"featureHeading\":\"HomePage__featureHeading__tBVFX\",\"featureBtn\":\"HomePage__featureBtn__1TOKX\",\"featureLight\":\"HomePage__featureLight__2Jc6p\",\"featureLightHeading\":\"HomePage__featureLightHeading__1aUDd\",\"featureLightText\":\"HomePage__featureLightText__1QOVA\",\"featureLightBtn\":\"HomePage__featureLightBtn__1DAtn\",\"featureGray\":\"HomePage__featureGray__1R36o\",\"featureDark\":\"HomePage__featureDark__3veY4\",\"featureDarkHeading\":\"HomePage__featureDarkHeading__nIgdK\",\"featureDarkText\":\"HomePage__featureDarkText__K4ATt\",\"featureYellow\":\"HomePage__featureYellow__1ZYbb\",\"featureYellowHeading\":\"HomePage__featureYellowHeading__n2Xuo\",\"featureYellowBtn\":\"HomePage__featureYellowBtn__3IVK-\",\"hiddenLgUp\":\"HomePage__hiddenLgUp__3Uyzl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"account\":\"Account__account__2UJXz\",\"pageHeader\":\"Account__pageHeader__1oslE\",\"form\":\"Account__form__wErAg\",\"label\":\"Account__label__3_qX1\",\"input\":\"Account__input__32v6k\",\"button\":\"Account__button__31Wup\",\"datePicker\":\"Account__datePicker__15e7j\",\"formGroup\":\"Account__formGroup__3srVc\",\"buttonToolbar\":\"Account__buttonToolbar__SxGDf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"surveyBuilder\":\"SurveyBuilder__surveyBuilder__lT3ge\",\"pageHeader\":\"SurveyBuilder__pageHeader__W452v\",\"form\":\"SurveyBuilder__form__26PA-\",\"label\":\"SurveyBuilder__label__trTlQ\",\"input\":\"SurveyBuilder__input__1mIEr\",\"group\":\"SurveyBuilder__group__2LTCe\",\"buttonGroup\":\"SurveyBuilder__buttonGroup__1yUXe\",\"table\":\"SurveyBuilder__table__15jaI\",\"tableText\":\"SurveyBuilder__tableText__3XNjB\",\"tableAction\":\"SurveyBuilder__tableAction__2fgRW\",\"tableId\":\"SurveyBuilder__tableId__2UL1C\",\"subheader\":\"SurveyBuilder__subheader__2YgFI\",\"showAnswers\":\"SurveyBuilder__showAnswers__P63dZ\",\"fade\":\"SurveyBuilder__fade__3YOdA\",\"hideAnswers\":\"SurveyBuilder__hideAnswers__2huU7\",\"slide-in\":\"SurveyBuilder__slide-in__CrHft\",\"slide-out\":\"SurveyBuilder__slide-out__2PAE-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Login__wrapper__3H7mc\",\"left\":\"Login__left__S7H-k\",\"right\":\"Login__right__3B1mF\",\"signin\":\"Login__signin__3MCmB\",\"logo\":\"Login__logo__3igpV\",\"textInput\":\"Login__textInput__3v9-q\",\"primaryBtn\":\"Login__primaryBtn__3jOyU\",\"secondaryBtn\":\"Login__secondaryBtn__JPPZD\",\"or\":\"Login__or__2KyqF\",\"links\":\"Login__links__1w9Zh\",\"bar\":\"Login__bar__lnbB4\",\"showcase\":\"Login__showcase__6hSiL\",\"showcaseText\":\"Login__showcaseText__3pCR-\"};","module.exports = __webpack_public_path__ + \"static/media/survey-01.6e3c54e1.gif\";","module.exports = __webpack_public_path__ + \"static/media/survey-02.93b2a10e.gif\";","module.exports = __webpack_public_path__ + \"static/media/survey-03.12122d83.gif\";","import axios from 'axios';\r\nimport setting from './assets/settings/setting';\r\n\r\nconst instance = axios.create({\r\n    baseURL: setting.api.url\r\n});\r\n\r\nexport default instance;","/*\r\n* surveyBuilderActions.js\r\n* */\r\nimport {\r\n    CREATE_QUESTION,\r\n    EDIT_QUESTION,\r\n    DELETE_QUESTION,\r\n    SAVE_QUESTION,\r\n    CANCEL_EDIT_QUESTION,\r\n    SHOW_ANSWERS,\r\n    HIDE_ANSWERS,\r\n    CREATE_SURVEY,\r\n    FETCH_SURVEY_FAILED,\r\n    FETCH_SURVEY,\r\n    SAVE_SURVEY,\r\n    EDIT_SURVEY_DATA,\r\n    CREATE_ANSWER,\r\n    SAVE_ANSWER,\r\n    EDIT_ANSWER,\r\n    DELETE_ANSWER,\r\n    CANCEL_EDIT_ANSWER,\r\n    CREATE_QUESTION_FAILED,\r\n    SAVE_SURVEY_FAILED,\r\n    CREATE_ANSWER_FAILED,\r\n    SAVE_ANSWER_FAILED,\r\n    DELETE_ANSWER_FAILED,\r\n    DELETE_QUESTION_FAILED,\r\n    SAVE_QUESTION_FAILED,\r\n    SET_SURVEY_ID,\r\n    CREATE_SURVEY_FAILED,\r\n    SET_SURVEY_TITLE,\r\n    SET_QUESTION_STRING, SET_ANSWER_STRING\r\n} from \"./actionsTypes\";\r\n\r\nimport axios from \"../../axios-survey\";\r\n\r\nexport const editSurvey = (survey) => {\r\n    return {type: EDIT_SURVEY_DATA, survey: survey};\r\n};\r\n\r\nexport const setSurveyTitle = (survey, title) => {\r\n    return {type: SET_SURVEY_TITLE, survey, title};\r\n};\r\n\r\nexport const setQuestionString = (question_id, question_string) => {\r\n    return {type: SET_QUESTION_STRING, id: question_id, question: question_string};\r\n};\r\n\r\nexport const setAnswerString = (answer_id, answer_string) => {\r\n    return {type: SET_ANSWER_STRING, id: answer_id, answer: answer_string};\r\n};\r\n\r\nconst saveSurvey = (survey) => {\r\n    return {type: SAVE_SURVEY, survey: survey};\r\n};\r\n\r\nconst saveSurveyFailed = (error) => {\r\n    console.log(\"saveSurveyFailed, error\", error);\r\n    return {type: SAVE_SURVEY_FAILED, error};\r\n};\r\n\r\nexport const asyncSaveSurvey = (survey, newSurvey) => {\r\n    return dispatch => {\r\n        if (newSurvey) {\r\n            axios.post(`/surveys`, survey)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        console.log(\"asyncSaveSurvey, POST sql error\", response.data.sqlMessage);\r\n                        dispatch(saveSurveyFailed(response.data.sqlMessage));\r\n                    } else {\r\n                        dispatch(saveSurvey(survey));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"asyncSaveSurvey, POST catch error\", error);\r\n                dispatch(saveSurveyFailed(error));\r\n            });\r\n        } else {\r\n            const srvy = {\r\n                title: survey.title,\r\n                owner: survey.owner\r\n            };\r\n            axios.put(`/surveys/${survey.id}`, srvy)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        console.log(\"asyncSaveSurvey, PUT sql error\", response.data.sqlMessage);\r\n                        dispatch(saveSurveyFailed(response.data.sqlMessage));\r\n                    } else {\r\n                        dispatch(saveSurvey(survey));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                console.log(\"asyncSaveSurvey, PUT catch error\", error);\r\n                dispatch(saveSurveyFailed(error));\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\nconst createAnswer = (answer) => {\r\n    return {type: CREATE_ANSWER, answer: answer}\r\n};\r\n\r\nconst createAnswerFailed = (error) => {\r\n    return {type: CREATE_ANSWER_FAILED, error};\r\n};\r\n\r\nexport const asyncCreateAnswer = (answer) => {\r\n    return dispatch => {\r\n        /*********** FETCH MAX ID *************/\r\n        axios.get(\"/answer_options/maxId\")\r\n        .then(maxResponse => {\r\n            if (maxResponse.status === 200) {\r\n                if (maxResponse.data.errno) {\r\n                    dispatch(createAnswerFailed(maxResponse.data.sqlMessage));\r\n                } else {\r\n                    answer.id = maxResponse.data[0].maxId + 1;\r\n                    /*********** POST ANSWER *************/\r\n                    axios.post(\"/answer_options\", answer)\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            if (response.data.errno) {\r\n                                dispatch(createAnswerFailed(response.data.sqlMessage));\r\n                            } else {\r\n                                dispatch(createAnswer(response.data));\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch(createAnswerFailed(error));\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(createAnswerFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\nconst saveAnswer = (answer) => {\r\n    return {type: SAVE_ANSWER, answer: answer}\r\n};\r\n\r\nconst saveAnswerFailed = (error) => {\r\n    return {type: SAVE_ANSWER_FAILED, error};\r\n};\r\n\r\nexport const asyncSaveAnswer = (answer) => {\r\n    return dispatch => {\r\n        axios.put(`/answer_options/${answer.id}`, answer)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(saveAnswerFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(saveAnswer(answer));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(saveAnswerFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const editAnswer = (answer) => {\r\n    return {type: EDIT_ANSWER, answer}\r\n};\r\n\r\nconst deleteAnswer = (answer) => {\r\n    return {type: DELETE_ANSWER, answer: answer}\r\n};\r\n\r\nconst deleteAnswerFailed = (error) => {\r\n    return {type: DELETE_ANSWER_FAILED, error};\r\n};\r\n\r\nexport const asyncDeleteAnswer = (answer) => {\r\n    return dispatch => {\r\n        axios.delete(`/answer_options/${answer.id}`)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(deleteAnswerFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(deleteAnswer(answer));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(deleteAnswerFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const cancelAnswer = (answer) => {\r\n    return {type: CANCEL_EDIT_ANSWER, answer: answer}\r\n};\r\n\r\nexport const editQuestion = (question) => {\r\n    return {type: EDIT_QUESTION, question};\r\n};\r\n\r\nconst deleteQuestion = (question_id) => {\r\n    return {type: DELETE_QUESTION, id: question_id}\r\n};\r\n\r\nconst deleteQuestionFailed = (error) => {\r\n    console.log(\"action, deleteQuestionFailed, error\", error);\r\n    return {type: DELETE_QUESTION_FAILED, error};\r\n};\r\n\r\nexport const asyncDeleteQuestion = (question_id) => {\r\n    return dispatch => {\r\n        axios.delete(`/questions/${question_id}`)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(deleteQuestionFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(deleteQuestion(question_id));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(deleteQuestionFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\nconst saveQuestion = (question, newQuestion) => {\r\n    return {type: SAVE_QUESTION, question, newQuestion}\r\n};\r\n\r\nconst saveQuestionFailed = (error) => {\r\n    return {type: SAVE_QUESTION_FAILED, error};\r\n};\r\n\r\nexport const asyncSaveQuestion = (question, newQuestion) => {\r\n    return dispatch => {\r\n        axios.put(`/questions/${question.id}`, question)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(saveQuestionFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(saveQuestion(question, newQuestion));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(saveQuestionFailed(error));\r\n        })\r\n    }\r\n};\r\n\r\nexport const cancelQuestion = (id, value) => {\r\n    return {type: CANCEL_EDIT_QUESTION, id: id, value: value}\r\n};\r\n\r\nexport const showAnswers = (question) => {\r\n    return {type: SHOW_ANSWERS, question: question}\r\n};\r\n\r\nexport const hideAnswers = (question) => {\r\n    return {type: HIDE_ANSWERS, question: question}\r\n};\r\n\r\nconst fetchSurvey = (survey) => {\r\n    return {type: FETCH_SURVEY, survey: survey}\r\n};\r\n\r\nexport const fetchSurveyFailed = (error) => {\r\n    return {type: FETCH_SURVEY_FAILED, error}\r\n};\r\n\r\nexport const asyncFetchSurvey = (survey_id) => {\r\n    return dispatch => {\r\n        /*********** FETCH SURVEY *************/\r\n        axios.get(`/surveys/${survey_id}`) //\r\n        .then(response => {\r\n            let survey = response.data[0];\r\n            /*********** FETCH QUESTIONS *************/\r\n            axios.get(`/surveys/${survey.id}/questions`)\r\n            .then(response => {\r\n                survey.questions = response.data;\r\n                survey.questions.forEach(question => {\r\n                    /*********** FETCH ANSWERS *************/\r\n                    axios.get(`questions/${question.id}/options`)\r\n                    .then(answerResponse => {\r\n                        question.answers = answerResponse.data;\r\n                    })//get answers\r\n                    .catch(error => {\r\n                        return dispatch(fetchSurveyFailed(error));\r\n                    });//catch answers\r\n                }); //for each question\r\n                dispatch(fetchSurvey(survey));\r\n            })//get questions then\r\n            .catch(error => {\r\n                dispatch(fetchSurveyFailed(error))\r\n            });//catch questions\r\n        })//get survey\r\n        .catch(error => {\r\n            dispatch(fetchSurveyFailed(error));\r\n        });//catch survey\r\n    }\r\n};//fetchQuestion\r\n\r\nconst createQuestion = (question) => {\r\n    return {type: CREATE_QUESTION, question: question};\r\n};\r\n\r\nconst createQuestionFailed = (error) => {\r\n    return {type: CREATE_QUESTION_FAILED, error};\r\n};\r\n\r\nexport const asyncCreateQuestion = (question) => {\r\n    return dispatch => {\r\n        /*********** FETCH MAX ID *************/\r\n        axios.get(\"questions/maxId\")\r\n        .then(maxResponse => {\r\n            if (maxResponse.status === 200) {\r\n                if (maxResponse.data.errno) {\r\n                    console.log(\"ERROR\", maxResponse.data.sqlMessage);\r\n                    dispatch(createQuestionFailed(maxResponse.data.sqlMessage))\r\n                } else {\r\n                    question.id = maxResponse.data[0].maxId + 1;\r\n                    /*********** POST QUESTION *************/\r\n                    axios.post(\"/questions\", question)\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            if (response.data.errno) {\r\n                                console.log(\"ERROR\", response.data.sqlMessage);\r\n                                dispatch(createQuestionFailed(response.data.sqlMessage))\r\n                            } else {\r\n                                dispatch(createQuestion(response.data));\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch(createQuestionFailed(error));\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(createQuestionFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const setSurveyId = (survey_id) => {\r\n    return {type: SET_SURVEY_ID, id: survey_id};\r\n};\r\n\r\nconst createSurvey = (survey_id) => {\r\n    return {type: CREATE_SURVEY, id: survey_id};\r\n};\r\n\r\nconst createSurveyFailed = (error) => {\r\n    return {type: CREATE_SURVEY_FAILED, error};\r\n};\r\n\r\nexport const asyncCreateNewSurvey = () => {\r\n    return dispatch => {\r\n        axios.get(\"/surveys/maxId\")\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(createSurveyFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(createSurvey(response.data[0].maxId + 1));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(createSurveyFailed(error));\r\n        });\r\n    }\r\n};","/*\r\n* appActions.js\r\n* */\r\n\r\n/**************** APP ACTIONS **************************/\r\nexport const FETCH_USER_FIRSTNAME = 'FETCH_USER_FIRSTNAME';\r\nexport const SET_ACCOUNT_ID = 'SET_ACCOUNT_ID';\r\nexport const SET_ACCOUNT_ID_NAME = 'SET_ACCOUNT_ID_NAME'; // set account's id and user's name\r\nexport const SET_DEFAULT_USER_ACCOUNT_ID  = 'SET_DEFAULT_USER_ACCOUNT_ID';\r\nexport const SET_DEFAULT_USER_ACCOUNT_ID_FAILED = 'SET_DEFAULT_USER_ACCOUNT_ID_FAILED';\r\nexport const FETCH_USER_FIRSTNAME_FAILED = 'FETCH_USER_FIRSTNAME_FAILED';\r\nexport const LOGIN_USER = 'LOGIN_USER'; //login with user id\r\nexport const LOGIN_USER_FAILED = 'LOGIN_USER_FAILED';\r\nexport const LOGOUT_USER = 'LOGOUT_USER';\r\nexport const USER_LOGIN = 'USER_LOGIN';//login with username and password\r\nexport const USER_LOGIN_FAILED = 'USER_LOGIN_FAILED';\r\n\r\n/**************** SURVEY ACTIONS **************************/\r\nexport const CREATE_SURVEY = 'CREATE_SURVEY';\r\nexport const FETCH_SURVEY = 'FETCH_SURVEY';\r\nexport const SET_SURVEY_ID = 'SET_SURVEY_ID';\r\nexport const EDIT_SURVEY_DATA = 'EDIT_SURVEY_DATA';\r\nexport const EDIT_SURVEY = 'EDIT_SURVEY';\r\nexport const SAVE_SURVEY = 'SAVE_SURVEY';\r\nexport const SAVE_NEW_SURVEY = 'SAVE_NEW_SURVEY';\r\nexport const DELETE_SURVEY = 'DELETE_SURVEY';\r\nexport const LIST_SURVEYS = 'LIST_SURVEYS';\r\nexport const SURVEY_LIST = 'SURVEY_LIST';\r\nexport const SURVEY_LIST_FAILED = 'SURVEY_LIST_FAILED';\r\nexport const CREATE_SURVEY_FAILED = 'CREATE_SURVEY_FAILED';\r\nexport const DELETE_SURVEY_FAILED = 'DELETE_SURVEY_FAILED';\r\nexport const SAVE_SURVEY_FAILED = 'SAVE_SURVEY_FAILED';\r\nexport const SAVE_SURVEY_RESULTS_FAILED = 'SAVE_SURVEY_RESULTS_FAILED';\r\nexport const FETCH_SURVEY_RESULTS_FAILED = 'FETCH_SURVEY_RESULTS_FAILED';\r\nexport const LIST_SURVEYS_FAILED = 'LIST_SURVEYS_FAILED';\r\nexport const FETCH_SURVEY_FAILED = 'FETCH_SURVEY_FAILED';\r\nexport const SAVE_SURVEY_RESULTS = 'SAVE_SURVEY_RESULTS';\r\nexport const FETCH_SURVEY_RESULTS = 'FETCH_SURVEY_RESULTS';\r\nexport const SET_SURVEY_TITLE = 'SET_SURVEY_TITLE';\r\nexport const SET_QUESTION_STRING = 'SET_QUESTION_STRING';\r\nexport const SET_ANSWER_STRING = 'SET_ANSWER_STRING';\r\nexport const GET_SURVEY_AND_QUESTIONS = 'GET_SURVEY_AND_QUESTIONS';\r\nexport const GET_SURVEY_AND_QUESTIONS_FAILED = 'GET_SURVEY_AND_QUESTIONS_FAILED';\r\n\r\n/**************** QUESTION ACTIONS **************************/\r\nexport const CREATE_QUESTION = 'CREATE_QUESTION';\r\nexport const ADD_QUESTION = 'ADD_QUESTION';\r\nexport const SAVE_QUESTION = 'SAVE_QUESTION';\r\nexport const CANCEL_EDIT_QUESTION = 'CANCEL_EDIT_QUESTION';\r\nexport const EDIT_QUESTION = 'EDIT_QUESTION';\r\nexport const DELETE_QUESTION = 'DELETE_QUESTION';\r\nexport const SHOW_ANSWERS = 'SHOW_ANSWERS';\r\nexport const HIDE_ANSWERS = 'HIDE_ANSWERS';\r\nexport const CREATE_QUESTION_FAILED = 'CREATE_QUESTION_FAILED';\r\nexport const ADD_QUESTION_FAILED = 'ADD_QUESTION_FAILED';\r\nexport const SAVE_QUESTION_FAILED = 'SAVE_QUESTION_FAILED';\r\nexport const DELETE_QUESTION_FAILED = 'DELETE_QUESTION_FAILED';\r\n\r\n/**************** ANSWER ACTIONS **************************/\r\nexport const CREATE_ANSWER = 'CREATE_ANSWER';\r\nexport const EDIT_ANSWER = 'EDIT_ANSWER';\r\nexport const DELETE_ANSWER = 'DELETE_ANSWER';\r\nexport const SAVE_ANSWER = 'SAVE_ANSWER';\r\nexport const CANCEL_EDIT_ANSWER = 'CANCEL_EDIT_ANSWER';\r\nexport const CREATE_ANSWER_FAILED = 'CREATE_ANSWER_FAILED';\r\nexport const EDIT_ANSWER_FAILED = 'EDIT_ANSWER_FAILED';\r\nexport const DELETE_ANSWER_FAILED = 'DELETE_ANSWER_FAILED';\r\nexport const SAVE_ANSWER_FAILED = 'SAVE_ANSWER_FAILED';\r\n\r\n/**************** USER ANSWER ACTIONS **************************/\r\nexport const REGISTER_ANSWER = 'REGISTER_ANSWER';\r\nexport const REGISTER_ANSWER_FAILED = 'REGISTER_ANSWER_FAILED';\r\n\r\n/**************** USER ACTIONS **************************/\r\nexport const FETCH_USER = 'FETCH_USER';\r\nexport const CREATE_USER = 'CREATE_USER';\r\nexport const EDIT_USER = 'EDIT_USER';\r\nexport const CANCEL_EDIT_USER = 'CANCEL_EDIT_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const LIST_USERS = 'LIST_USERS';\r\nexport const SAVE_USER = 'SAVE_USER';\r\nexport const RESET_USER = 'RESET_USER';\r\nexport const FETCH_USER_FAILED = 'FETCH_USER_FAILED';\r\nexport const CREATE_USER_FAILED = 'CREATE_USER_FAILED';\r\nexport const DELETE_USER_FAILED = 'DELETE_USER_FAILED';\r\nexport const LIST_USERS_FAILED = 'LIST_USERS_FAILED';\r\nexport const SAVE_USER_FAILED = 'SAVE_USER_FAILED';\r\nexport const SELECT_USER = 'SELECT_USER';\r\n\r\n/**************** ACCOUNT ACTIONS **************************/\r\nexport const FETCH_ACCOUNT = 'FETCH_ACCOUNT';\r\nexport const CREATE_ACCOUNT = 'CREATE_ACCOUNT';\r\nexport const CREATE_NEW_ACCOUNT = 'CREATE_NEW_ACCOUNT';\r\nexport const EDIT_ACCOUNT  = 'EDIT_ACCOUNT';\r\nexport const CANCEL_EDIT_ACCOUNT  = 'CANCEL_EDIT_ACCOUNT';\r\nexport const DELETE_ACCOUNT = 'DELETE_ACCOUNT';\r\nexport const LIST_ACCOUNTS = 'LIST_ACCOUNTS';\r\nexport const SAVE_ACCOUNT = 'SAVE_ACCOUNT';\r\nexport const RESET_ACCOUNT = 'RESET_ACCOUNT';\r\nexport const FETCH_ACCOUNT_FAILED = 'FETCH_ACCOUNT_FAILED';\r\nexport const CREATE_ACCOUNT_FAILED = 'CREATE_ACCOUNT_FAILED';\r\nexport const DELETE_ACCOUNT_FAILED = 'DELETE_ACCOUNT_FAILED';\r\nexport const LIST_ACCOUNTS_FAILED = 'LIST_ACCOUNTS_FAILED';\r\nexport const SAVE_ACCOUNT_FAILED = 'SAVE_ACCOUNT_FAILED';\r\nexport const SELECT_ACCOUNT = 'SELECT_ACCOUNT';\r\n","/*\r\n* accountActions.js\r\n* */\r\nimport {\r\n    FETCH_ACCOUNT,\r\n    FETCH_ACCOUNT_FAILED,\r\n    CREATE_ACCOUNT,\r\n    CREATE_ACCOUNT_FAILED,\r\n    EDIT_ACCOUNT,\r\n    RESET_ACCOUNT,\r\n    SAVE_ACCOUNT,\r\n    SAVE_ACCOUNT_FAILED,\r\n    CANCEL_EDIT_ACCOUNT,\r\n    SET_ACCOUNT_ID, CREATE_NEW_ACCOUNT\r\n} from \"./actionsTypes\";\r\n\r\nimport axios from \"../../axios-survey\";\r\n\r\nconst fetchAccount = (account) => {\r\n    return {type: FETCH_ACCOUNT, account: account}\r\n};\r\n\r\nexport const fetchAccountFailed = (error) => {\r\n    return {type: FETCH_ACCOUNT_FAILED, error}\r\n};\r\n\r\nexport const asyncFetchAccount = (account_id) => {\r\n    return dispatch => {\r\n        axios.get(`/accounts/${account_id}`)\r\n        .then(response => {\r\n            if (response.status === 200){\r\n                if (response.data.errno) {\r\n                    console.log(\"ERROR\", response.data.sqlMessage)\r\n                } else {\r\n                    const accountResponse = response.data[0];\r\n                    dispatch(fetchAccount(accountResponse));\r\n                }\r\n            }\r\n        })//then\r\n        .catch(error => {\r\n            console.log(\"asyncFetchAccount error: \", error);\r\n            dispatch(fetchAccountFailed(error));\r\n        })\r\n    }\r\n};\r\n\r\nexport const setAccountId = (account_id) => {\r\n    return {type: SET_ACCOUNT_ID}\r\n};\r\n\r\nconst createAccount = (id) => {\r\n    console.log(\"@@@ createAccount, account\", id);\r\n    return {type: CREATE_ACCOUNT, id}\r\n};\r\n\r\nexport const createAccountFailed = (error) => {\r\n    console.log(\"¡¡¡ createAccountFailed, error\", error);\r\n    return {type: CREATE_ACCOUNT_FAILED, error}\r\n};\r\n\r\nexport const asyncCreateAccount = () => {\r\n    return dispatch => {\r\n        axios.get(\"/accounts/maxId\")\r\n        .then(response => {\r\n            if (response.status === 200){\r\n                if (response.data.errno) {\r\n                    console.log(\"ERROR\", response.data.sqlMessage)\r\n                } else {\r\n                    dispatch(createAccount(response.data[0].maxId + 1));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"asyncCreateAccount error: \", error);\r\n            dispatch(createAccountFailed(error));\r\n        });\r\n\r\n    }\r\n};\r\n\r\nconst createNewAccount = (account) => {\r\n    return {type: CREATE_NEW_ACCOUNT, account};\r\n};\r\n\r\nexport const asyncCreateNewAccount = (account) => {\r\n    return dispatch => {\r\n        axios.get(\"/accounts/maxId\")\r\n        .then(maxResponse => {\r\n            if (maxResponse.status === 200){\r\n                if (maxResponse.data.errno) {\r\n                    console.log(\"asyncCreateNewAccount, ERROR\", maxResponse.data.sqlMessage)\r\n                } else {\r\n                    account.id = maxResponse.data[0].maxId + 1;\r\n                    axios.post(`/accounts/`, account)\r\n                    .then(response => {\r\n                        if (response.status === 200){\r\n                            if (response.data.errno) {\r\n                                console.log(\"ERROR\", response.data.sqlMessage)\r\n                            } else {\r\n                                account.saveSuccess = true;\r\n                                dispatch(createNewAccount(account));\r\n                            }\r\n                        }\r\n                    })\r\n\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"asyncCreateAccount maxID error: \", error);\r\n            dispatch(createAccountFailed(error));\r\n        });\r\n\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\nexport const editAccount = (account) => {\r\n    return {type: EDIT_ACCOUNT, account: account};\r\n};\r\n\r\nexport const cancelEditAccount = (account) => {\r\n    return {type: CANCEL_EDIT_ACCOUNT, account};\r\n};\r\n\r\nexport const resetAccount = (newAccount, routing) => {\r\n    return {type: RESET_ACCOUNT, newAccount, routing}\r\n};\r\n\r\nconst saveAccount = (account) => {\r\n    return {type: SAVE_ACCOUNT, account}\r\n};\r\n\r\nexport const saveAccountFailed = (error) => {\r\n    return {type: SAVE_ACCOUNT_FAILED, error}\r\n};\r\n\r\nexport const asyncSaveNewAccount = (account, account_id) => {\r\n    if (account_id) {\r\n        account.id = account_id;\r\n    }\r\n    return dispatch => {\r\n        axios.post(`/accounts/`, account)\r\n        .then(response => {\r\n            if (response.status === 200){\r\n                if (response.data.errno) {\r\n                    console.log(\"ERROR\", response.data.sqlMessage)\r\n                } else {\r\n                    account.saveSuccess = true;\r\n                    dispatch(saveAccount(account));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"asyncSaveNewAccount error: \", error);\r\n            dispatch(saveAccountFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\nexport const asyncSaveAccount = (account) => {\r\n    return dispatch => {\r\n        axios.put(`/accounts/${account.id}`, account)\r\n        .then(response => {\r\n            if (response.status === 200){\r\n                if (response.data.errno) {\r\n                    console.log(\"ERROR\", response.data.sqlMessage)\r\n                } else {\r\n                    account.saveSuccess = true;\r\n                    dispatch(saveAccount(account));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"asyncSaveAccount error: \", error);\r\n            dispatch(saveAccountFailed(error));\r\n        });\r\n    }\r\n};","/*\r\n* userActions.js\r\n* */\r\n\r\nimport {\r\n    CREATE_USER,\r\n    FETCH_USER,\r\n    SAVE_USER,\r\n    RESET_USER,\r\n    SET_DEFAULT_USER_ACCOUNT_ID, CREATE_USER_FAILED, SET_DEFAULT_USER_ACCOUNT_ID_FAILED\r\n} from \"./actionsTypes\";\r\n\r\nimport axios from \"../../axios-survey\";\r\n\r\nconst fetchUser = (user) => {\r\n    return {\r\n        type: FETCH_USER,\r\n        user: user\r\n    };\r\n};\r\n\r\nexport const asyncFetchUser = (user) => {\r\n    return dispatch => {\r\n        if (user.accountFK) {\r\n            const fetch = `/account/${user.accountFK}`;\r\n            axios.get(`/users/account/${user.accountFK}`)\r\n            .then(response => {\r\n                const user = response.data[0];\r\n                dispatch(fetchUser(user));\r\n            })\r\n            ;\r\n        } else if (user.id) {\r\n            axios.get(`/users/${user.id}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        console.log(\"ERROR\", response.data.sqlMessage);\r\n                    } else {\r\n                        dispatch(fetchUser(response.data[0]));\r\n                    }\r\n                }\r\n            })\r\n        }\r\n    }\r\n};\r\n\r\n\r\nexport const resetUser = (routing, newUser) => {\r\n    return {type: RESET_USER, routing, newUser};\r\n};\r\n\r\n\r\nexport const setUserAccountFK = (account_id) => {\r\n    return {type: SET_DEFAULT_USER_ACCOUNT_ID, accountId: account_id}\r\n};\r\n\r\nconst setUserAccountFKFailed = (error) => {\r\n    return {type: SET_DEFAULT_USER_ACCOUNT_ID_FAILED, error};\r\n};\r\n\r\nexport const asyncSetUserAccountFK = (user, account_id) => {\r\n    return dispatch => {\r\n        user.accountFK = account_id;\r\n        axios.put(`/users/${user.id}`, user)\r\n        .then(response => {\r\n            if(response.status === 200) {\r\n                if (response.data.errno) {\r\n                    console.log(\"userActions, asyncSetUserAccountFK, response ERROR\", response.data.sqlMessage);\r\n                    dispatch(setUserAccountFKFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(setUserAccountFK(account_id));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(\"!!!userActions, asyncSetUserAccountFK, axios put ERROR¡¡¡\", error);\r\n            dispatch(setUserAccountFKFailed(error))\r\n        })\r\n\r\n    }\r\n}\r\n\r\nconst createUser = (user_id) => {\r\n    return {type: CREATE_USER, id: user_id}\r\n};\r\n\r\nexport const asyncCreateUser = () => {\r\n    return dispatch => {\r\n        axios.get('/users/maxId')\r\n        .then(maxResponse => {\r\n            const user_id = maxResponse.data[0].maxId + 1;\r\n                dispatch(createUser(user_id));\r\n        })\r\n    }\r\n};\r\n\r\nconst createUserFailed = (error) => {\r\n    return {type: CREATE_USER_FAILED, error}\r\n};\r\n\r\nexport const asyncCreateNewUser = (user) => {\r\n    return dispatch => {\r\n        axios.get('/users/maxId')\r\n        .then(maxResponse => {\r\n            if (maxResponse.status === 200) {\r\n                if (maxResponse.data.errno) {\r\n                    console.log(\"ERROR\", maxResponse.data.sqlMessage)\r\n                    dispatch(createUserFailed(maxResponse.data.sqlMessage))\r\n                } else {\r\n                    user.id = maxResponse.data[0].maxId + 1;\r\n                    axios.post(`/users`, user)\r\n                    .then(response => {\r\n                        if (response.status === 200) {\r\n                            if (response.data.errno) {\r\n                                console.log(\"ERROR\",response.data.sqlMessage);\r\n                                dispatch(createUserFailed(response.data.sqlMessage))\r\n                            } else {\r\n                                dispatch(saveUser(user));\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch(createUserFailed(error))\r\n                    })\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(createUserFailed(error))\r\n        })\r\n    }\r\n};\r\n\r\nconst saveUser = (user) => {\r\n    return {type: SAVE_USER, user}\r\n};\r\n\r\nexport const asyncSaveUser = (user) => {\r\n    return dispatch => {\r\n        axios.put(`/users/${user.id}`, user)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.errno) {\r\n                    console.log(\"ERROR\",response);\r\n                } else {\r\n                    dispatch(saveUser(user));\r\n                }\r\n            }\r\n\r\n        })\r\n    }\r\n};\r\n\r\nexport const asyncSaveNewUser = (user, user_id) => {\r\n    if (user_id) {\r\n        user.id = user_id;\r\n    }\r\n    return dispatch => {\r\n        axios.post(\"/users\", user)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.errno) {\r\n                    console.log(\"ERROR\",response);\r\n                } else {\r\n                    dispatch(saveUser(user));\r\n                }\r\n            }\r\n        })\r\n    }\r\n};\r\n","import {\r\n    DELETE_SURVEY, DELETE_SURVEY_FAILED,\r\n    LIST_SURVEYS, LIST_SURVEYS_FAILED,\r\n} from \"./actionsTypes\";\r\nimport axios from \"../../axios-survey\";\r\n\r\nconst listSurveys = (surveys) => {\r\n    return {type: LIST_SURVEYS, surveys: surveys}\r\n};\r\n\r\nconst listSurveysFailed = (error) => {\r\n    return {type: LIST_SURVEYS_FAILED, error};\r\n};\r\n\r\nexport const asyncListSurveys = (user_id) => {\r\n    return dispatch => {\r\n        if (user_id > 0) {\r\n            axios.get(`/surveys/owner/${user_id}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        dispatch(listSurveysFailed(response.data.sqlMessage));\r\n                    } else {\r\n                        const surveys = response.data;\r\n                        dispatch(listSurveys(surveys));\r\n                    }\r\n                }\r\n            });\r\n        } else {\r\n            axios.get(\"/surveys\")\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        dispatch(listSurveysFailed(response.data.sqlMessage));\r\n                    } else {\r\n                        const surveys = response.data;\r\n                        dispatch(listSurveys(surveys));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nconst deleteSurvey = (survey) => {\r\n    return {type: DELETE_SURVEY, survey: survey};\r\n};\r\n\r\nconst deleteSurveyFailed = (error) => {\r\n    console.log(\"deleteSurveyFailed, error\", error);\r\n    return {type: DELETE_SURVEY_FAILED, error};\r\n};\r\n\r\nexport const asyncDeleteSurvey = (survey) => {\r\n    return dispatch => {\r\n        axios.delete(`/surveys/${survey.id}`)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(deleteSurveyFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(deleteSurvey(survey));\r\n                }\r\n            }\r\n        })\r\n    }\r\n};\r\n","/*\r\n* accountsManagerActions.js\r\n* */\r\nimport {\r\n    LIST_ACCOUNTS,\r\n    LIST_ACCOUNTS_FAILED,\r\n    DELETE_ACCOUNT,\r\n    DELETE_ACCOUNT_FAILED, SELECT_ACCOUNT\r\n} from \"./actionsTypes\";\r\nimport axios from \"../../axios-survey\";\r\n\r\nconst listSurveys = (accounts) => {\r\n    return {type: LIST_ACCOUNTS, surveys: accounts}\r\n};\r\n\r\nexport const listAccountsFailed = (error) => {\r\n    return {type: LIST_ACCOUNTS_FAILED, error}\r\n};\r\n\r\nexport const asyncListAccounts = () => {\r\n    return dispatch => {\r\n        axios.get(\"/accounts\")\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.errno) {\r\n                    console.log(\"ERROR\", response.data.sqlMessage);\r\n                } else {\r\n                    const accounts = response.data;\r\n                    dispatch(listSurveys(accounts));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(listAccountsFailed(error))\r\n        });\r\n    }\r\n};\r\n\r\n\r\nexport const selectAccount = (account_id) => {\r\n    return {type: SELECT_ACCOUNT, id: account_id}\r\n};\r\n\r\nconst deleteAccount = (account_id) => {\r\n    return {type: DELETE_ACCOUNT, accountId: account_id};\r\n};\r\n\r\nexport const deleteAccountFailed = (error) => {\r\n    return {type: DELETE_ACCOUNT_FAILED, error}\r\n};\r\n\r\nexport const asyncDeleteAccount = (account_id) => {\r\n    return dispatch => {\r\n        axios.delete(`/accounts/${account_id}`)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    console.log(\"asyncDeleteAccount, ERROR\", response.data.sqlMessage);\r\n                } else {\r\n                    dispatch(deleteAccount(account_id));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(deleteAccountFailed(error))\r\n        });\r\n    }\r\n};","/*\r\n* surveyActions.js\r\n* */\r\nimport {\r\n\r\n} from \"./actionsTypes\";\r\n\r\nimport axios from \"../../axios-survey\";\r\nimport {SURVEY_LIST, SURVEY_LIST_FAILED} from \"./actionsTypes\";\r\nimport {GET_SURVEY_AND_QUESTIONS} from \"./actionsTypes\";\r\nimport {GET_SURVEY_AND_QUESTIONS_FAILED} from \"./actionsTypes\";\r\nimport {SET_SURVEY_ID} from \"./actionsTypes\";\r\nimport {REGISTER_ANSWER_FAILED} from \"./actionsTypes\";\r\nimport {REGISTER_ANSWER} from \"./actionsTypes\";\r\n\r\nconst registerAnswer = (answer) => {\r\n    return {type: REGISTER_ANSWER, answer};\r\n};\r\n\r\nconst registerAnswerFailed = (error) => {\r\n    return {type: REGISTER_ANSWER_FAILED, error};\r\n};\r\n\r\nexport const asynRegisterAnswer = (answer, question, user_id) => {\r\n    const userAnswer = {\r\n        user_answer: answer,\r\n        userFK: user_id,\r\n        question: question\r\n    };\r\n    return dispatch => {\r\n        axios.post(\"/answers\", userAnswer)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(registerAnswerFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(registerAnswer(userAnswer));\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(registerAnswerFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\nconst surveyList = (surveys) => {\r\n    return {type: SURVEY_LIST, surveys: surveys}\r\n};\r\n\r\nconst surveyListFailed = (error) => {\r\n    console(\"surveyListFailed, error\", error);\r\n    return {type: SURVEY_LIST_FAILED, error};\r\n};\r\n\r\nexport const asyncSurveyList = (user_id) => {\r\n    return dispatch => {\r\n        if (user_id > 0) {\r\n            axios.get(`/surveys/owner/${user_id}`)\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        console.log(\"asyncSurveyList, ERROR\", response.data.sqlMessage);\r\n                        dispatch(surveyListFailed(response.data.sqlMessage));\r\n                    } else {\r\n                        const surveys = response.data;\r\n                        dispatch(surveyList(surveys));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(surveyListFailed(error));\r\n            });\r\n        } else {\r\n            axios.get(\"/surveys\")\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        console.log(\"asyncSurveyList, ERROR\", response.data.sqlMessage);\r\n                        dispatch(surveyListFailed(response.data.sqlMessage));\r\n                    } else {\r\n                        const surveys = response.data;\r\n                        dispatch(surveyList(surveys));\r\n                    }\r\n                }\r\n            })\r\n            .catch(error => {\r\n                dispatch(surveyListFailed(error));\r\n            });\r\n        }\r\n    }\r\n};\r\n\r\nexport const setSurveyId = (survey_id) => {\r\n    return {type: SET_SURVEY_ID, survey_id}\r\n};\r\n\r\nconst getSurveyAndQuestions = (survey) => {\r\n    return {type: GET_SURVEY_AND_QUESTIONS, survey: survey}\r\n};\r\n\r\nexport const getSurveyAndQuestionsFailed = (error) => {\r\n    return {type: GET_SURVEY_AND_QUESTIONS_FAILED, error}\r\n};\r\n\r\nexport const asyncGetSurveyAndQuestions = (survey_id) => {\r\n    return dispatch => {\r\n            /*********** FETCH ALL SURVEYS *************/\r\n            axios.get(`/surveys/${survey_id}`) //\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.errno) {\r\n                        dispatch(getSurveyAndQuestionsFailed(response.data.sqlMessage));\r\n                    } else {\r\n                        let survey = response.data[0];\r\n                        /*********** FETCH QUESTIONS *************/\r\n                        axios.get(`/surveys/${survey.id}/questions`)\r\n                        .then(questionsResponse => {\r\n                            if (questionsResponse.status === 200) {\r\n                                if (questionsResponse.data.errno) {\r\n                                    dispatch(getSurveyAndQuestionsFailed(questionsResponse.data.sqlMessage));\r\n                                } else {\r\n                                    survey.questions = questionsResponse.data;\r\n                                    let qCount = survey.questions.length;\r\n\r\n                                    survey.questions.forEach(question => {\r\n                                        /*********** FETCH ANSWERS *************/\r\n                                        axios.get(`questions/${question.id}/options`)\r\n                                        .then(answerResponse => {\r\n                                            if (answerResponse.status === 200) {\r\n                                                if (answerResponse.data.errno) {\r\n                                                    qCount--;\r\n                                                    dispatch(getSurveyAndQuestionsFailed(answerResponse.data.sqlMessage));\r\n                                                } else {\r\n                                                    qCount--;\r\n                                                    question.answers = answerResponse.data;\r\n                                                }\r\n                                            }\r\n                                            if (qCount === 0) {\r\n                                                dispatch(getSurveyAndQuestions(survey));\r\n                                            }\r\n                                        })//get answers\r\n                                        .catch(error => {\r\n                                            dispatch(getSurveyAndQuestionsFailed(error));\r\n                                        });//catch answers\r\n                                    }); //for each question\r\n                                }\r\n                            }\r\n                        })//get questions then\r\n                        .catch(error => {\r\n                            dispatch(getSurveyAndQuestionsFailed(error))\r\n                        });//catch questions\r\n                    }\r\n                }\r\n            })//get survey\r\n            .catch(error => {\r\n                dispatch(getSurveyAndQuestionsFailed(error));\r\n            });//catch survey\r\n        }//dispatch\r\n};//asyncGetSurveyAndQuestions\r\n","import {\r\n    FETCH_USER_FIRSTNAME,\r\n    FETCH_USER_FIRSTNAME_FAILED, LOGIN_USER,\r\n    LOGIN_USER_FAILED, LOGOUT_USER,\r\n    SET_ACCOUNT_ID_NAME, USER_LOGIN, USER_LOGIN_FAILED\r\n} from \"./actionsTypes\";\r\n\r\nimport axios from \"../../axios-survey\";\r\nimport decode from 'jwt-decode';\r\n\r\nexport const logoutUser = () => {\r\n    return {type: LOGOUT_USER}\r\n};\r\n\r\nconst loginUser = (account_id, user_id, user_name) => {\r\n    return {type: LOGIN_USER, account_id, user_id, user_name}\r\n};\r\n\r\nconst loginUserFailed = (error) => {\r\n    return {type: LOGIN_USER_FAILED, error};\r\n};\r\n\r\nexport const asyncLoginUser = (user_id) => {\r\n    let account_id = null;\r\n    let user_name = null;\r\n    return dispatch => {\r\n        axios.get(`/users/${user_id}/account`)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(loginUserFailed(response.data.sqlMessage));\r\n                } else {\r\n                    account_id = response.data[0].account_id;\r\n                    axios.get(`/users/firstname/${account_id}`)\r\n                    .then(nameResponse => {\r\n                        if (response.status === 200) {\r\n                            if (response.data.errno) {\r\n                                console.log(\"ERROR\", nameResponse.data.sqlMessage);\r\n                                dispatch(loginUserFailed(nameResponse.data.sqlMessage));\r\n                            } else {\r\n                                user_name = nameResponse.data[0].firstname;\r\n                                dispatch(loginUser(account_id, user_id, user_name));\r\n                            }\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        dispatch(loginUserFailed(error));\r\n                    });\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            dispatch(loginUserFailed(error));\r\n        });\r\n    }\r\n};\r\n\r\nconst userLogin = (logindata) => {\r\n    return {type: USER_LOGIN, data: logindata, userType: logindata.type};\r\n};\r\n\r\nconst userLoginFailed = (error) => {\r\n    console.log(\"user login failed, error\", error);\r\n    return {type: USER_LOGIN_FAILED, error};\r\n};\r\n\r\n\r\nexport const asyncUserLogin = (account, password) => {\r\n    const login = {account: account, password: password};\r\n    return dispatch => {\r\n        axios.post(\"/login\", login)\r\n        .then(response => {\r\n            if (response && response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(userLoginFailed(response.data.sqlMessage))\r\n                } else if (response.data.err && response.data.message) {\r\n                    dispatch(userLoginFailed(response.data.message));\r\n                } else {\r\n                    if (response.data.status) {\r\n                        const data = decode(response.data.token);\r\n                        axios.get(`/users/firstname/${data.owner}`)\r\n                        .then(nameResponse => {\r\n                            if (nameResponse.status === 200) {\r\n                                if (nameResponse.data.errno) {\r\n                                    dispatch(fetchFirstNameFailed(nameResponse.data.sqlMessage));\r\n                                } else {\r\n                                    data.firstname = nameResponse.data[0].firstname;\r\n                                    dispatch(userLogin(data));\r\n                                }\r\n                            }\r\n                        })\r\n                        .catch(error => {\r\n                            fetchFirstNameFailed(error);\r\n                        });\r\n                    } else {\r\n                        dispatch(userLoginFailed(response.data.status));\r\n                    }\r\n                }\r\n            }\r\n        })\r\n    }\r\n};\r\n\r\nexport const setAppUserAccountIdName = (account, user) => {\r\n    return {type: SET_ACCOUNT_ID_NAME, account: account, user: user}\r\n};\r\n\r\nconst fetchFirstname = (firstname, account_id) => {\r\n    return {type: FETCH_USER_FIRSTNAME, firstname: firstname, account_id: account_id}\r\n};\r\n\r\nconst fetchFirstNameFailed = (error) => {\r\n    return {type: FETCH_USER_FIRSTNAME_FAILED, error};\r\n}\r\n\r\nexport const asyncFetchFirstName = (account_id) => {\r\n    const comp = `/users/firstname/${account_id}`;\r\n    return dispatch => {\r\n        axios.get(comp)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(fetchFirstNameFailed(response.data.sqlMessage));\r\n                } else {\r\n                    const firstname = response && response.data && response.data[0] && response.data[0].firstname;\r\n                    dispatch(fetchFirstname(firstname, account_id));\r\n                }\r\n            }\r\n\r\n        })\r\n        .catch(error => {\r\n            fetchFirstNameFailed(error);\r\n        });\r\n    }\r\n};\r\n","import React from 'react';\r\n\r\nimport classes from \"./Backdrop.css\";\r\n\r\nconst backdrop = (props) => (\r\n    props.show ?\r\n        <div className={classes.Backdrop}\r\n            onClick={props.clicked}>\r\n        </div>\r\n        : null\r\n);\r\n\r\nexport default backdrop;","const auxiliary = (props) => props.children;\r\n\r\nexport default auxiliary;","import React from 'react';\r\n\r\nimport classes from \"./Modal.css\";\r\n\r\nimport Backdrop from \"../Backdrop/Backdrop\";\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\n\r\nconst modal = (props) => (\r\n    <Aux>\r\n        <Backdrop show={props.show}\r\n                clicked={props.modalClosed}/>\r\n        <div className={classes.Modal}\r\n             style={{\r\n                 transform: props.show ? 'translateY(0)' : 'translateY(-100vh)',\r\n                 opacity: props.show ? '1' : '0'\r\n             }}>\r\n            {props.children}\r\n        </div>\r\n    </Aux>\r\n);\r\n\r\nexport default modal;","import React, {Component} from 'react';\r\n\r\nimport Modal from \"../../components/UI/Modal/Modal\";\r\nimport Aux from \"../Auxiliary/Auxiliary\";\r\n\r\nconst withErrorHandler = (WrappedComponent, axios) => {\r\n\r\n    return class extends Component {\r\n        state = {\r\n            error: null\r\n        };\r\n\r\n        componentDidMount() {\r\n            axios.interceptors.request.use(req => {\r\n                this.setState({error: null});\r\n                return req;\r\n            });\r\n            axios.interceptors.response.use(res => res, error => {\r\n                this.setState({error: error})\r\n            });\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({error: null})\r\n        };\r\n\r\n        render() {\r\n            return (\r\n                <Aux>\r\n                    <Modal\r\n                        show={this.state.error}\r\n                        modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Aux>\r\n            )\r\n        };\r\n    }\r\n};\r\n\r\n\r\nexport default withErrorHandler;\r\n","import decode from 'jwt-decode';\r\nimport setting from '../../assets/settings/setting';\r\n\r\nexport default class AuthHandler {\r\n  login = (account, password) => {\r\n    // Get a token from api server using the fetch api\r\n    //Intead of axios, fetch has been used for experiencing difference betweem axios\r\n    return this.fetch(setting.api.url + '/login', {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        account,\r\n        password\r\n      })\r\n    }).then(res => {\r\n        if(res.status){\r\n            this.setToken(res.token); // Save the token in localStorage\r\n        }\r\n        console.log(Promise.resolve(res));\r\n        return Promise.resolve(res);\r\n    });\r\n  };\r\n  loggedIn = () => {\r\n    // Checks if there is a saved token and it's still valid\r\n    const token = this.getToken(); // Getting token from localstorage\r\n\r\n    /**New thing i am learning here if token is not defined then giving null\r\n     * and !null return true and !!null return false so with this comparison i can check\r\n     * token validation with short expression unlike else specific checking token is null or \"undefined\"\r\n     */\r\n    return !!token && !this.isTokenExpired(token); // checking token expired or not and is there token or not\r\n  };\r\n\r\n  tokenCheck = () =>{\r\n    const id_token = localStorage.getItem('id_token');\r\n    if(id_token === \"undefined\" || id_token === null){\r\n      return false;\r\n    }\r\n    else{\r\n      return true;\r\n    }\r\n  };\r\n\r\n  isTokenExpired = token => {\r\n    try {\r\n      const decoded = decode(token);\r\n      // Checking if token is expired.\r\n      if (decoded.exp < Date.now() / 1000) {\r\n        return true;\r\n      } else return false;\r\n    } catch (err) {\r\n      console.log('expired check failed! Line 50: AuthHandler.js');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  setToken = idToken => {\r\n        // Saves user token to localStorage\r\n        localStorage.setItem('id_token', idToken);\r\n  };\r\n  logout = () => {\r\n    // Clear user token and profile data from localStorage\r\n    localStorage.removeItem('id_token');\r\n    localStorage.removeItem('sec');\r\n  };\r\n\r\n    getToken = () => {\r\n        // Retrieves the user token from localStorage\r\n        return localStorage.getItem('id_token');\r\n    };\r\n\r\n    logout = () => {\r\n        console.log(\"AuthaHandler, logout\");\r\n        // Clear user token and profile data from localStorage\r\n        localStorage.removeItem('id_token');\r\n    };\r\n\r\n    getData = () => {\r\n        /* Get payload information in frontside with using jwt-decode*/\r\n        const data = decode(this.getToken());\r\n        return data;\r\n    };\r\n\r\n    isAdmin = () => {\r\n        const data = this.getData();\r\n        if (data.type === 'admin') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    isCompany = () => {\r\n        const data = this.getData();\r\n        /**For now admin can have all the access so\r\n         * even is company methods return true even it's admin\r\n         */\r\n        if (data.type === 'company' || data.type === 'admin') {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    };\r\n\r\n    whenExpired = () => {\r\n        const now = Date.now() / 1000;\r\n        const exp = this.getData().exp - now;\r\n        return exp;\r\n    };\r\n\r\n    //Here is for the experiencing fetch\r\n    //there is also solution with axios post methods in own private extra javascript files\r\n    fetch = (url, options) => {\r\n        // performs api calls sending the required authentication headers\r\n        const headers = {\r\n            Accept: 'application/json',\r\n            'Content-Type': 'application/json'\r\n        };\r\n        // Setting Authorization header\r\n        // Authorization: 'Bearer ' xxxxxxx.xxxxxxxx.xxxxxx\r\n        //Here i use bearer schema, seems based on web searching many people recommend to use it\r\n        //There is another options also like basic, diagest and so on\r\n        if (this.loggedIn()) {\r\n            headers['Authorization'] = 'Bearer ' + this.getToken();\r\n        }\r\n\r\n        return fetch(url, {\r\n            headers,\r\n            ...options\r\n        })\r\n        .then(this._checkStatus)\r\n        .then(response => response.json());\r\n    };\r\n\r\n    _checkStatus = response => {\r\n        // raises an error in case response status is not a success\r\n        if (response.status >= 200 && response.status < 300) {\r\n            // Success status lies between 200 to 300\r\n            return response;\r\n        } else {\r\n            var error = new Error(response.statusText);\r\n            error.response = response;\r\n            throw error;\r\n        }\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport AuthHandler from './AuthHandler';\r\n\r\n/* A higher order component (HOC) is frequently written as a function that returns a class. */\r\nexport default function Protected(ProtectedComponent) {\r\n  const authHandler = new AuthHandler();\r\n\r\n  return class Protection extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loaded: false\r\n      };\r\n    }\r\n\r\n    /* In the componentDidmount, \r\n    perfomring couple of important tasks in order to verify the current users authentication status\r\n    prior to granting them enterance into the component. */\r\n    componentDidMount() {\r\n      // if user is not logged in then redirect to somewhere, normally to login page\r\n      if (!authHandler.loggedIn() || !authHandler.tokenCheck()) {\r\n        this.props.history.push('/login');\r\n      } else {\r\n        try {\r\n          this.setState({\r\n            loaded: true\r\n          });\r\n        } catch (err) {\r\n          /* if there's an error it will print it out and log the user out for security reasons. */\r\n          console.log(err);\r\n          authHandler.logout();\r\n            this.props.onLogoutUser();\r\n          this.props.history.push('/login');\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.loaded) {\r\n        return <ProtectedComponent history={this.props.history} />;\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n","/*\r\n * Account.js\r\n *\r\n */\r\n\r\nimport React, {Component} from 'react';\r\nimport {\r\n    FormControl,\r\n    FormGroup,\r\n    ControlLabel,\r\n    PageHeader,\r\n    Button,\r\n    ButtonToolbar,\r\n    Clearfix\r\n} from 'react-bootstrap';\r\nimport {connect} from 'react-redux';\r\n\r\nimport classes from './Account.css';\r\nimport axios from '../../../axios-survey';\r\nimport {\r\n    asyncFetchAccount,\r\n    asyncCreateAccount,\r\n    asyncListAccounts,\r\n    editAccount,\r\n    cancelEditAccount,\r\n    asyncSaveAccount,\r\n    asyncSaveNewAccount,\r\n    setAccountId,\r\n    resetAccount,\r\n    logoutUser\r\n} from '../../../store/actions/index';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\n\r\nimport DatePicker from 'react-datepicker';\r\nimport moment from 'moment';\r\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\r\nimport Protected from '../../Login/Protected';\r\nimport AuthHandler from '../../Login/AuthHandler';\r\n\r\nclass Account extends Component {\r\n    AuthHandler = new AuthHandler();\r\n    state = {\r\n        id: '',\r\n        accountName: '',\r\n        password: '',\r\n        confirmPassword: '',\r\n        passwordsMatch: true,\r\n        expireDate: null,\r\n        joinedDate: null,\r\n        modifiedDate: null,\r\n        isExpired: null,\r\n        editing: false,\r\n        newAccount: false,\r\n        routing: false,\r\n        unEditedState: {\r\n            id: '',\r\n            accountName: '',\r\n            password: '',\r\n            expireDate: null,\r\n            joinedDate: null,\r\n            modifiedDate: null\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleExpireDateChange = this.handleExpireDateChange.bind(this);\r\n        this.getDateMoment = this.getDateMoment.bind(this);\r\n        this.handleUsernameChange = this.handleUsernameChange.bind(this);\r\n        this.handlePasswordChange = this.handlePasswordChange.bind(this);\r\n        this.handleConfirmPasswordChange = this.handleConfirmPasswordChange.bind(\r\n            this\r\n        );\r\n        this.setExpires = this.setExpires.bind(this);\r\n        this.getFormattedMoment = this.getFormattedMoment.bind(this);\r\n        this.formatMoment = this.formatMoment.bind(this);\r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.cancelEditing = this.cancelEditing.bind(this);\r\n        this.goBack = this.goBack.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n        this.formatMomentForDatabaseSaving = this.formatMomentForDatabaseSaving.bind(\r\n            this\r\n        );\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.accountsManager.selectedAccount) {\r\n            this.setState({editing: false, id: this.props.accountsManager.selectedAccount});\r\n            this.props.onFetchAccount(this.props.accountsManager.selectedAccount);\r\n        } else if (this.props.app.account_id) {\r\n            this.setState({editing: false, id: this.props.app.account_id});\r\n            this.props.onFetchAccount(this.props.app.account_id);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n      if (!this.props.account.newAccount && this.props.account.fetchSuccess) {\r\n        if (!this.props.account.id && this.props.app.account_id) {\r\n        } else if (this.props.account.id) {\r\n        }\r\n      }\r\n      if (nextProps.account) {\r\n        if (nextProps.account.id) {\r\n          this.updateState(nextProps);\r\n        }\r\n        if (nextProps.account.newAccount) {\r\n          this.setState({ newAccount: true });\r\n        }\r\n        if (nextProps.account.saveSuccess) {\r\n          this.setState({ editing: false });\r\n        }\r\n        if (nextProps.account.editing) {\r\n          this.setState({ editing: nextProps.account.editing });\r\n        }\r\n      }\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.account !== this.props.account || nextProps.account.componentShouldUpdate) {\r\n            nextProps.account.componentShouldUpdate = false;\r\n            return true;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    updateState(someProps) {\r\n        this.setState({\r\n            id: someProps.account.id,\r\n            accountName: someProps.account.account,\r\n            password: '',\r\n            confirmPassword: '',\r\n            joinedDate: someProps.account.newAccount\r\n                ? moment()\r\n                : someProps.account.joinedDate, //this.getDateMoment(someProps.account.joinedDate),\r\n            expireDate: someProps.account.expireDate, //this.getDateMoment(someProps.account.expireDate),\r\n            modifiedDate: someProps.account.newAccount\r\n                ? moment()\r\n                : someProps.account.modifiedDate, //this.getDateMoment(someProps.account.modifiedDate),\r\n            unEditedState: {\r\n                id: someProps.account.id,\r\n                accountName: someProps.account.account,\r\n                password: someProps.account.password,\r\n                joinedDate: someProps.account.newAccount\r\n                    ? moment()\r\n                    : someProps.account.joinedDate, //this.getDateMoment(someProps.account.joinedDate),\r\n                expireDate: someProps.account.expireDate, //this.getDateMoment(someProps.account.expireDate),\r\n                modifiedDate: someProps.account.newAccount\r\n                    ? moment()\r\n                    : someProps.account.modifiedDate //this.getDateMoment(someProps.account.modifiedDate),\r\n            },\r\n            isExpired: someProps.account.isExpired,\r\n            routing: someProps.account.routing,\r\n            editing: someProps.account.editing,\r\n            newAccount: someProps.account.newAccount\r\n        });\r\n    }\r\n\r\n    goBack() {\r\n        this.props.onResetAccount();\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    editAccount = account => {\r\n        this.props.onEditAccount(account);\r\n    };\r\n\r\n    cancelEditing = account => {\r\n        const unEditedAccount = this.state.unEditedState;\r\n        unEditedAccount.account = this.state.unEditedState.accountName;\r\n        this.props.onCancelEditAccount(unEditedAccount);\r\n    };\r\n\r\n    saveAccount = account => {\r\n        const saveAccount = {\r\n            id: this.state.id,\r\n            account: this.state.accountName,\r\n            password: this.state.password,\r\n            isExpired: this.state.isExpired,\r\n            joinedDate: this.state.joinedDate\r\n                ? this.formatMomentForDatabaseSaving(this.state.joinedDate)\r\n                : null,\r\n            expireDate: this.state.expireDate\r\n                ? this.formatMomentForDatabaseSaving(this.state.expireDate)\r\n                : null,\r\n            modifiedDate: this.state.modifiedDate\r\n                ? this.formatMomentForDatabaseSaving(this.state.modifiedDate)\r\n                : null\r\n        };\r\n        if (this.state.newAccount) {\r\n            this.props.onSaveNewAccount(saveAccount);\r\n        } else {\r\n            this.props.onSaveAccount(saveAccount);\r\n        }\r\n    };\r\n\r\n    setExpires(expireDate) {\r\n        this.setState({expireDate: this.getDateMoment(expireDate)});\r\n    }\r\n\r\n    handleUsernameChange(el) {\r\n        this.setState({accountName: el.target.value, editing: true});\r\n        if (\r\n            (this.state.confirmPassword &&\r\n                this.state.password &&\r\n                this.state.confirmPassword === this.state.password) ||\r\n            (!this.state.password && !this.state.confirmPassword)\r\n        ) {\r\n            this.setState({passwordsMatch: true});\r\n        } else {\r\n            this.setState({passwordsMatch: false});\r\n        }\r\n    }\r\n\r\n    handlePasswordChange(el) {\r\n        this.setState({password: el.target.value, editing: true});\r\n        if (\r\n            (this.state.confirmPassword &&\r\n                this.state.password &&\r\n                this.state.confirmPassword === this.state.password) ||\r\n            (!this.state.password && !this.state.confirmPassword)\r\n        ) {\r\n            this.setState({passwordsMatch: true});\r\n        } else {\r\n            this.setState({passwordsMatch: false});\r\n        }\r\n    }\r\n\r\n    handleConfirmPasswordChange(el) {\r\n        this.setState({confirmPassword: el.target.value, editing: true});\r\n        if (\r\n            (this.state.confirmPassword &&\r\n                this.state.password &&\r\n                this.state.confirmPassword === this.state.password) ||\r\n            (!this.state.password && !this.state.confirmPassword)\r\n        ) {\r\n            this.setState({passwordsMatch: true});\r\n        } else {\r\n            this.setState({passwordsMatch: false});\r\n        }\r\n    }\r\n\r\n    handleExpireDateChange(date) {\r\n        this.setState({\r\n            editing: true,\r\n            expireDate: date\r\n        });\r\n        if (\r\n            (this.state.confirmPassword &&\r\n                this.state.password &&\r\n                this.state.confirmPassword === this.state.password) ||\r\n            (!this.state.password && !this.state.confirmPassword)\r\n        ) {\r\n            this.setState({passwordsMatch: true});\r\n        } else {\r\n            this.setState({passwordsMatch: false});\r\n        }\r\n    }\r\n\r\n    getDateMoment = dateString => {\r\n        if (dateString) {\r\n            if (dateString.constructor.name == 'String') {\r\n                const year = dateString.slice(0, 4);\r\n                const month = dateString.slice(5, 7);\r\n                const day = dateString.slice(8, 10);\r\n                const hour = dateString.slice(11, 13);\r\n                const min = dateString.slice(14, 16);\r\n                const sec = dateString.slice(17, 19);\r\n                const newDate =\r\n                    year + '-' + month + '-' + day + ' ' + hour + ':' + min + ':' + sec;\r\n                return moment(newDate);\r\n            }\r\n            return dateString;\r\n        }\r\n        return null;\r\n    };\r\n\r\n    getFormattedMoment = date => {\r\n        return this.getDateMoment(date)\r\n            ? this.getDateMoment(date).format('DD.M.YYYY')\r\n            : null;\r\n    };\r\n\r\n    formatMoment(dateString, withTime) {\r\n        let dateMoment = dateString;\r\n        if (dateString && dateString.constructor.name == 'String') {\r\n            dateMoment = this.getDateMoment(dateString);\r\n        }\r\n        if (withTime) {\r\n            return dateMoment ? dateMoment.format('DD.M.YYYY h:mm:ss') : null;\r\n        } else if (dateMoment) {\r\n            return dateMoment.format('DD.M.YYYY');\r\n        }\r\n    }\r\n\r\n    formatMomentForDatabaseSaving(dateMoment) {\r\n        if (dateMoment && dateMoment.constructor.name == 'String') {\r\n            dateMoment = this.getDateMoment(dateMoment);\r\n        }\r\n        if (dateMoment && dateMoment.constructor.name == 'Moment') {\r\n            return dateMoment.format('YYYY-MM-DD hh:mm:ss');\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.account}>\r\n                <PageHeader className={classes.pageHeader}>Account</PageHeader>\r\n                <Clearfix/>\r\n                <form className={classes.form}>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.label} htmlFor=\"id\">\r\n                            ID\r\n                        </ControlLabel>\r\n                        <FormControl\r\n                            className={classes.input}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            defaultValue={this.props.account.id}\r\n                            disabled={true}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.label} htmlFor=\"username\">\r\n                            Username\r\n                        </ControlLabel>\r\n                        <FormControl\r\n                            className={classes.input}\r\n                            type=\"text\"\r\n                            name=\"username\"\r\n                            id=\"username\"\r\n                            defaultValue={this.state.accountName}\r\n                            disabled={!this.state.editing}\r\n                            onChange={this.handleUsernameChange}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.label} htmlFor=\"password\">\r\n                            Password\r\n                        </ControlLabel>\r\n                        <FormControl\r\n                            className={classes.input}\r\n                            type=\"password\"\r\n                            name=\"password\"\r\n                            id=\"password\"\r\n                            defaultValue={this.state.password}\r\n                            disabled={!this.state.editing}\r\n                            onChange={this.handlePasswordChange}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.label} htmlFor=\"confirmPassword\">\r\n                            Confirm Password\r\n                        </ControlLabel>\r\n                        <FormControl\r\n                            className={classes.input}\r\n                            type=\"password\"\r\n                            name=\"confirmPassword\"\r\n                            id=\"confirmPassword\"\r\n                            defaultValue=\"\"\r\n                            disabled={!this.state.editing}\r\n                            onChange={this.handleConfirmPasswordChange}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.label} htmlFor=\"joined\">\r\n                            Joined Date\r\n                        </ControlLabel>\r\n                        <FormControl\r\n                            className={classes.input}\r\n                            disabled=\"disabled\"\r\n                            name=\"joined\"\r\n                            id=\"joined\"\r\n                            defaultValue={this.formatMoment(this.state.joinedDate)}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup className={classes.formGroup}>\r\n                        <ControlLabel className={classes.label} htmlFor=\"expires\">\r\n                            Account Expires\r\n                        </ControlLabel>\r\n                        <DatePicker //https://github.com/Hacker0x01/react-datepicker/blob/master/docs/datepicker.md\r\n                            //https://reactdatepicker.com\r\n                            disabled={!this.state.editing}\r\n                            id=\"expires\"\r\n                            className={classes.datePicker}\r\n                            dropdownMode=\"select\"\r\n                            showYearDropdown\r\n                            showMonthDropdown\r\n                            selected={this.getDateMoment(this.state.expireDate)}\r\n                            value={this.formatMoment(this.state.expireDate)}\r\n                            openToDate={this.getDateMoment(this.state.expireDate)}\r\n                            dateFormat=\"D.M.YYYY\"\r\n                            minDate={moment()}\r\n                            onChange={this.handleExpireDateChange}\r\n                        />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.label} htmlFor=\"lastEdited\">\r\n                            Account Last Edited\r\n                        </ControlLabel>\r\n                        <FormControl\r\n                            className={classes.input}\r\n                            disabled=\"disabled\"\r\n                            type=\"text\"\r\n                            name=\"lastEdited\"\r\n                            id=\"lastEdited\"\r\n                            defaultValue={this.formatMoment(this.state.modifiedDate, true)}\r\n                        />\r\n                    </FormGroup>\r\n\r\n                    <ButtonToolbar className={classes.buttonToolbar}>\r\n                        <Button\r\n                            disabled={this.state.editing}\r\n                            bsStyle=\"primary\"\r\n                            onClick={this.editAccount}\r\n                        >\r\n                            Edit\r\n                        </Button>\r\n                        <Button\r\n                            disabled={!this.state.editing}\r\n                            bsStyle=\"success\"\r\n                            onClick={this.saveAccount}\r\n                        >\r\n                            Save Account\r\n                        </Button>\r\n                        <Button disabled={!this.state.editing} onClick={this.cancelEditing}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            disabled={this.state.editing}\r\n                            bsStyle=\"info\"\r\n                            onClick={this.goBack}\r\n                        >\r\n                            Go Back\r\n                        </Button>\r\n                    </ButtonToolbar>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n        account: state.account,\r\n        accountsManager: state.accountsManager\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchAccount: account_id => dispatch(asyncFetchAccount(account_id)),\r\n        onCreateAccount: account => dispatch(asyncCreateAccount(account)),\r\n        onListAccounts: () => dispatch(asyncListAccounts()),\r\n        onEditAccount: account => dispatch(editAccount(account)),\r\n        onCancelEditAccount: account => dispatch(cancelEditAccount(account)),\r\n        onSaveAccount: account => dispatch(asyncSaveAccount(account)),\r\n        onSaveNewAccount: account => dispatch(asyncSaveNewAccount(account)),\r\n        onSetAccountId: account_id => dispatch(setAccountId(account_id)),\r\n        onResetAccount: () => dispatch(resetAccount()),\r\n        onLogoutUser: () => dispatch(logoutUser())\r\n    };\r\n};\r\n\r\nexport default Protected(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(withErrorHandler(Account, axios))\r\n);\r\n","/*\r\n* User.js\r\n*\r\n*/\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport axios from '../../../axios-survey';\r\n\r\nimport {FormControl, FormGroup, ControlLabel, PageHeader, Button, ButtonToolbar} from 'react-bootstrap';\r\n\r\nimport classes from \"./User.css\";\r\nimport moment from 'moment';\r\n\r\nimport {\r\n    asyncFetchUser,\r\n    asyncSaveUser,\r\n    asyncSaveNewUser,\r\n    asyncCreateUser,\r\n    resetUser,\r\n} from \"../../../store/actions\";\r\n\r\nimport DatePicker from \"react-datepicker/es\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Protected from \"../../Login/Protected\";\r\n\r\nclass User extends Component {\r\n\r\n    state = {\r\n        id: null,\r\n        firstname: \"\",\r\n        lastname: \"\",\r\n        accountFK: null,\r\n        type: \"\",\r\n        email: \"\",\r\n        birthdate: \"\",\r\n        phone: \"\",\r\n        streetAddress: \"\",\r\n        postalCode: \"\",\r\n        rewards: \"\",\r\n        modifiedDate: \"\",\r\n        editing: false,\r\n        newUser: false,\r\n        unEditedState: {\r\n            id: null,\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            accountFK: null,\r\n            type: \"\",\r\n            email: \"\",\r\n            birthdate: null,\r\n            phone: \"\",\r\n            streetAddress: \"\",\r\n            postalCode: \"\",\r\n            rewards: \"\",\r\n            modifiedDate: null\r\n        }\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.saveUser = this.saveUser.bind(this);\r\n        this.goBack = this.goBack.bind(this);\r\n        this.cancelEditing = this.cancelEditing.bind(this);\r\n        this.getMomentFromDateString = this.getMomentFromDateString.bind(this);\r\n        this.getFormattedMoment = this.getFormattedMoment.bind(this);\r\n        this.logState = this.logState.bind(this);\r\n        this.handleBirthdateChange = this.handleBirthdateChange.bind(this);\r\n        this.handlePostalCodeChange = this.handlePostalCodeChange.bind(this);\r\n        this.handleStreetAddressChange = this.handleStreetAddressChange.bind(this);\r\n        this.handlePhoneChange = this.handlePhoneChange.bind(this);\r\n        this.handleEmailChange = this.handleEmailChange.bind(this);\r\n        this.handleLastnameChange = this.handleLastnameChange.bind(this);\r\n        this.handleFirstnameChange = this.handleFirstnameChange.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n        this.handleAccountFKChange = this.handleAccountFKChange.bind(this);\r\n        this.handleAccountTypeChange = this.handleAccountTypeChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.usersManager.selectedUser) {\r\n            const user = {id: this.props.usersManager.selectedUser};\r\n            this.props.onFetchUser(user);\r\n\r\n        } else if (this.props.app.account_id) {\r\n            const user = {accountFK: this.props.app.account_id};\r\n            this.props.onFetchUser(user);\r\n        } else {\r\n            this.goBack();\r\n        }\r\n        if (this.props.user) {\r\n            this.updateState(this.props);\r\n            if (this.props.user.newUser) {\r\n                this.setState({newUser: true});\r\n            }\r\n        }\r\n    }\r\n\r\n    updateState(someProps) {\r\n        this.setState({\r\n            id: someProps.user.id,\r\n            firstname: someProps.user.firstname,\r\n            lastname: someProps.user.lastname,\r\n            accountFK: someProps.user.accountFK,\r\n            type: someProps.user.type,\r\n            email: someProps.user.email,\r\n            birthdate: this.getMomentFromDateString(someProps.user.birthdate),\r\n            phone: someProps.user.phone,\r\n            streetAddress: someProps.user.streetAddress,\r\n            postalCode: someProps.user.postalCode,\r\n            rewards: someProps.user.rewards,\r\n            modifiedDate: this.getMomentFromDateString(someProps.user.modifiedDate),\r\n            unEditedState: {\r\n                id: someProps.user.id,\r\n                firstname: someProps.user.firstname,\r\n                lastname: someProps.user.lastname,\r\n                accountFK: someProps.user.accountFK,\r\n                type: someProps.user.type,\r\n                email: someProps.user.email,\r\n                birthdate: this.getMomentFromDateString(someProps.user.birthdate),\r\n                phone: someProps.user.phone,\r\n                streetAddress: someProps.user.streetAddress,\r\n                postalCode: someProps.user.postalCode,\r\n                rewards: someProps.user.rewards,\r\n                modifiedDate: this.getMomentFromDateString(someProps.user.modifiedDate)\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContent) {\r\n        this.updateState(nextProps);\r\n        if (nextProps.user.modifiedDate) {\r\n            if (nextProps.user.newUser) {\r\n                this.setState({newUser: true});\r\n            }\r\n        }\r\n        if (nextProps.user.saveSuccess) {\r\n            this.setState({\r\n                saveSuccess: false,\r\n                editing: false,\r\n                newUser: false\r\n            })\r\n        }\r\n    }\r\n\r\n    getMomentFromDateString = (dateString, withTime) => {\r\n        if (dateString) {\r\n            const year = dateString.slice(0, 4);\r\n            const month = dateString.slice(5, 7);\r\n            const day = dateString.slice(8, 10);\r\n            const hour = dateString.slice(11, 13);\r\n            const min = dateString.slice(14, 16);\r\n            const sec = dateString.slice(17, 19);\r\n            const newDate = year + \"-\" + month + \"-\" + day + ' ' + hour + ':' + min + ':' + sec;\r\n            return moment(newDate);\r\n        }\r\n        return null;\r\n    };\r\n\r\n    getFormattedMoment = (dateString, withTime) => {\r\n        if (dateString && withTime) {\r\n            return this.getMomentFromDateString(dateString).format(\"D.M.YYYY h.mm.ss\");\r\n        } else if (dateString) {\r\n            return this.getMomentFromDateString(dateString).format(\"D.M.YYYY\");\r\n        }\r\n    };\r\n\r\n    cancelEditing = () => {\r\n        this.setState({\r\n            id: this.state.unEditedState.id,\r\n            firstname: this.state.unEditedState.firstname,\r\n            lastname: this.state.unEditedState.lastname,\r\n            accountFK: this.state.unEditedState.accountFK,\r\n            type: this.state.unEditedState.type,\r\n            email: this.state.unEditedState.email,\r\n            birthdate: this.state.unEditedState.birthdate,\r\n            phone: this.state.unEditedState.phone,\r\n            streetAddress: this.state.unEditedState.streetAddress,\r\n            postalCode: this.state.unEditedState.postalCode,\r\n            rewards: this.state.unEditedState.rewards,\r\n            modifiedDate: this.state.unEditedState.modifiedDate,\r\n            editing: false\r\n        });\r\n\r\n    };\r\n\r\n\r\n    saveUser = () => {\r\n        const saveUser = {\r\n            id: this.state.id,\r\n            firstname: this.state.firstname,\r\n            lastname: this.state.lastname,\r\n            accountFK: this.state.accountFK,\r\n            type: this.state.type,\r\n            email: this.state.email,\r\n            birthdate: this.state.birthdate ? this.state.birthdate.format(\"YYYY-MM-DD\") : null,\r\n            phone: this.state.phone,\r\n            streetAddress: this.state.streetAddress,\r\n            postalCode: this.state.postalCode,\r\n            rewards: !this.state.rewards ? 0 : this.state.rewards,\r\n            modifiedDate: moment().format(\"YYYY-MM-DD HH:mm:ss\")\r\n        };\r\n        if (this.state.newUser) {\r\n            this.props.onSaveNewUser(saveUser);\r\n        } else {\r\n            this.props.onSaveUser(saveUser);\r\n        }\r\n    };\r\n\r\n    goBack() {\r\n        this.props.onResetUser();\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    handleFirstnameChange(el) {\r\n        this.setState({firstname: el.target.value, editing: true});\r\n    }\r\n\r\n    handleLastnameChange(el) {\r\n        this.setState({lastname: el.target.value, editing: true});\r\n    }\r\n\r\n    handleEmailChange(el) {\r\n        this.setState({email: el.target.value, editing: true});\r\n    }\r\n\r\n    handlePhoneChange(el) {\r\n        this.setState({phone: el.target.value, editing: true});\r\n    }\r\n\r\n    handleStreetAddressChange(el) {\r\n        this.setState({streetAddress: el.target.value, editing: true});\r\n    }\r\n\r\n    handlePostalCodeChange(el) {\r\n        this.setState({postalCode: el.target.value, editing: true});\r\n    }\r\n\r\n    handleBirthdateChange(date) {\r\n        if (date) {\r\n            this.setState({birthdate: date, editing: true});\r\n        }\r\n    }\r\n\r\n    handleAccountFKChange(el) {\r\n        if (el && el.target && el.target.value) {\r\n            const accountFK = el.target.value;\r\n            this.setState({accountFK: accountFK, editing: true})\r\n        }\r\n    }\r\n\r\n    handleAccountTypeChange(el) {\r\n        if (el && el.target && el.target.value) {\r\n            const accountType = el.target.value;\r\n            if (accountType !== \"notSelected\") {\r\n                this.setState({type: accountType, editing: true});\r\n            } else if (accountType === \"notSelected\") {\r\n                this.setState({type: null});\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const formatMoment = (moment, withTime) => {\r\n            if (withTime) {\r\n                return moment ? moment.format(\"DD.M.YYYY h:mm\") : null;\r\n            } else if (moment) {\r\n                return moment.format(\"DD.M.YYYY\");\r\n            }\r\n        };\r\n\r\n        return (\r\n            <div className={classes.userComponent}>\r\n                <PageHeader>Personal Data</PageHeader>\r\n\r\n                <hr/>\r\n                <form className={classes.Form}>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"id\">First Name</ControlLabel>\r\n                        <FormControl className={classes.Input} disabled={true}\r\n                                     type=\"text\" name=\"id\" id=\"id\"\r\n                                     defaultValue={this.state.id}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"firstname\">First Name</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"text\" name=\"firstname\" id=\"firstname\"\r\n                                     onChange={this.handleFirstnameChange}\r\n                                     defaultValue={this.state.firstname}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"lastname\">Last Name</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"text\" name=\"lastname\" id=\"lastname\"\r\n                                     onChange={this.handleLastnameChange}\r\n                                     defaultValue={this.state.lastname}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"email\">Email</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"text\" name=\"email\" id=\"email\"\r\n                                     onChange={this.handleEmailChange}\r\n                                     defaultValue={this.state.email}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"email\">Email</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"text\" name=\"email\" id=\"email\"\r\n                                     onChange={this.handleEmailChange}\r\n                                     defaultValue={this.state.email}/>\r\n                    </FormGroup>\r\n                    <FormGroup className={classes.formGroup}>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"dateofbirth\">Date of Birth</ControlLabel>\r\n                        <DatePicker  //https://github.com/Hacker0x01/react-datepicker/blob/master/docs/datepicker.md\r\n                            //https://reactdatepicker.com\r\n                            id=\"dateofbirth\" className={classes.datePicker}\r\n                            dropdownMode=\"select\" showYearDropdown showMonthDropdown\r\n                            selected={this.state.birthdate}\r\n                            value={formatMoment(this.state.birthdate)}\r\n                            openToDate={this.state.birthdate}\r\n                            dateFormat=\"D.M.YYYY\" maxDate={moment()}\r\n                            onChange={this.handleBirthdateChange}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"phone\">Phone</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"text\" name=\"phone\" id=\"phone\"\r\n                                     onChange={this.handlePhoneChange}\r\n                                     defaultValue={this.state.phone}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"streetAddress\">Street Address</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"text\" name=\"streetAddress\" id=\"streetAddress\"\r\n                                     onChange={this.handleStreetAddressChange}\r\n                                     defaultValue={this.state.streetAddress}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"postalCode\">Postal Code</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"text\" name=\"postalCode\" id=\"postalCode\"\r\n                                     onChange={this.handlePostalCodeChange}\r\n                                     defaultValue={this.state.postalCode}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"rewards\">Account ID</ControlLabel>\r\n                        <FormControl className={classes.Input}\r\n                                     type=\"number\" name=\"rewards\" id=\"rewards\"\r\n                                     onChange={this.handleAccountFKChange}\r\n                                     value={this.state.accountFK}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"rewards\">User Account Type</ControlLabel>\r\n                        <FormControl componentClass=\"select\" className={classes.select}\r\n                                     name=\"accountType\" id=\"accountType\"\r\n                                     onChange={this.handleAccountTypeChange}>\r\n                            <option  value=\"notSelected\">Select...</option>\r\n                            <option selected={this.state.type === \"client\"?\"selected\":false} value=\"client\">Client</option>\r\n                            <option selected={this.state.type === \"company\"?\"selected\":false} value=\"company\">Company</option>\r\n                            <option selected={this.state.type === \"admin\"?\"selected\":false} value=\"admin\">Admin</option>\r\n                        </FormControl>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"rewards\">Rewards</ControlLabel>\r\n                        <FormControl className={classes.Input} readOnly={true}\r\n                                     type=\"number\" name=\"rewards\" id=\"rewards\"\r\n                                     value={this.state.rewards}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <ControlLabel className={classes.Label} htmlFor=\"lastEdited\">Account Last Edited</ControlLabel>\r\n                        <FormControl className={classes.Input} readOnly={true}\r\n                                     type=\"text\" name=\"lastEdited\" id=\"lastEdited\"\r\n                                     value={formatMoment(this.state.modifiedDate, true)}/>\r\n                    </FormGroup>\r\n                    <ButtonToolbar className={classes.buttonToolbar}>\r\n\r\n                        <Button disabled={!this.state.editing} bsStyle=\"success\" onClick={this.saveUser}>\r\n                            Save User</Button>\r\n                        <Button disabled={!this.state.editing} onClick={this.cancelEditing}>\r\n                            Cancel</Button>\r\n                        <Button disabled={this.state.editing} bsStyle=\"info\" onClick={this.goBack}>Go Back</Button>\r\n                    </ButtonToolbar>\r\n                </form>\r\n            </div>\r\n        );\r\n    }//render\r\n}//class\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n        usersManager: state.usersManager\r\n    }\r\n};\r\n\r\nconst mapDispatchToProp = (dispatch) => {\r\n    return {\r\n        onFetchUser: (id) => dispatch(asyncFetchUser(id)),\r\n        onSaveUser: (user) => dispatch(asyncSaveUser(user)),\r\n        onSaveNewUser: (user) => dispatch(asyncSaveNewUser(user)),\r\n        onCreateUser: (user) => dispatch(asyncCreateUser(user)),\r\n        onResetUser: () => dispatch(resetUser())\r\n    }\r\n};\r\n\r\nexport default Protected(connect(mapStateToProps, mapDispatchToProp)(withErrorHandler(User, axios)));\r\n","\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport classes from \"./HomePage.css\";\r\n\r\nclass HomePage extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div className={classes.content}>\r\n                <div className={classes.featureHero}> \r\n                    <div className=\"container\"> \r\n                        <h1 className={classes.featureHeading}>\r\n                            Survey is <span> a feedback </span> \r\n                            for education\r\n                        </h1>\r\n                        <a className={classes.featureBtn} href=\"/login\">{!this.props.app.logged_in ? \"Sign In\" : \"Get Started\"}</a>\r\n                        <div> Current Version: <strong> v0.10.0 </strong></div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.featureLight}> \r\n                    <div className=\"container\"> \r\n                    \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12 col-md-7\">\r\n                            <h2 className={classes.featureLightHeading}> Survey Better </h2>\r\n                            <p className={classes.featureLightText}> Don't have fun in finding idea? Survey identifies exactly the need for your work and what to improve, give a try. </p>\r\n                            <a className={classes.featureLightBtn} href=\"/survey\">Learn More</a>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <img className=\"img-fluid rounded\" src={require('./img/survey-01.gif')} alt=\"\"/>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.featureGray}> \r\n                    <div className=\"container\"> \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12 col-md-7 order-md-1\">\r\n                            <h2 className={classes.featureLightHeading}> Survey Smarter </h2>\r\n                            <p className={classes.featureLightText}> It's difficult to create smart tools for educators. Survey understands your work and make it convenient to use, encouraging smarter creation of ideas  . </p>\r\n                            <a className={classes.featureLightBtn} href=\"/survey\">Learn More</a>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <img className=\"img-fluid rounded\" src={require('./img/survey-02.gif')} alt=\"\"/>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.featureDark}> \r\n                    <div className=\"container\"> \r\n                        <div className=\"row\">\r\n                        <div className=\"col-12 col-md-7\">\r\n                            <h2 className={classes.featureDarkHeading}> Survey Confidently </h2>\r\n                            <p className={classes.featureDarkText}> Learning the majority of opinions can be overwhelming. Survey helps you do so calmly, focus on what you need to do and not be afraid of overloading. </p>\r\n                            <a className={classes.featureBtn} href=\"/survey\">Learn More</a>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-5\">\r\n                            <img className=\"img-fluid rounded\" src={require('./img/survey-03.gif')} alt=\"\"/>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className={classes.featureYellow}> \r\n                    <div className=\"container\"> \r\n                        <div className=\"row\">\r\n                        <h2 className={classes.featureYellowHeading}>Ready Get Going? </h2>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                        <div className=\"col-12 col-md-6\">\r\n                            <a className={classes.featureYellowBtn} href=\"/survey\">Get Started</a>\r\n                        </div>\r\n                        <div className=\"col-12 col-md-6 d-none d-md-block\">\r\n                            <a className={classes.featureYellowBtn} href=\"/survey\">Learn More</a>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    console.log(\"HomePage, mapStateToProps, state\", state);\r\n    return {\r\n        app: state.app\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps)(HomePage);\r\n","/*\r\n* Question.js\r\n* */\r\n\r\nimport React from 'react';\r\nimport {Button,\r\n    ButtonGroup,\r\n} from 'react-bootstrap';\r\n\r\nconst question = (props) => {\r\n\r\n    return (\r\n        <tr>\r\n            <td>{props.question.id}</td>\r\n            <td>{props.question.question}</td>\r\n            <td>\r\n                <ButtonGroup>\r\n                    <Button bsStyle=\"primary\" onClick={() => props.edit(props.question)}>Edit</Button>\r\n                    <Button bsStyle=\"danger\" onClick={() => props.delete(props.question.id)}>Delete</Button>\r\n                    <Button bsStyle=\"info\" onClick={() => props.answers(props.question)}>Answers</Button>\r\n                </ButtonGroup>\r\n            </td>\r\n        </tr>\r\n    )\r\n};\r\nexport default question;","\r\n\r\nimport React from 'react';\r\nimport {Button, ButtonGroup} from \"react-bootstrap\";\r\nimport classes from \"./SurveyBuilder.css\";\r\n\r\n\r\nconst newQuestion = props => {\r\n    return (\r\n        <tr key={props.id}>\r\n            <td className={classes.tableId}>{props.id}</td>\r\n            <td>\r\n                <textarea\r\n                    onChange={evt => props.onChange(evt)}\r\n                    value={props.inputValue}\r\n                    id={props.id}/>\r\n            </td>\r\n            {/**/}\r\n            <td>\r\n                <ButtonGroup>\r\n                    <Button bsStyle=\"success\" onClick={() => props.save(props.question)}>Save</Button>\r\n                    <Button bsStyle=\"default\" onClick={() => props.cancel(props.id, props.inputValue)}>Cancel</Button>\r\n                </ButtonGroup>\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default newQuestion;\r\n","import React, { Component } from 'react';\r\nimport AuthHandler from '../Login/AuthHandler';\r\n\r\n/* A higher order component (HOC) is frequently written as a function that returns a class. */\r\nexport default function CompanyOnly(CompanyComponent) {\r\n\r\n  return class ProtectionCompanyComponent extends Component {\r\n    AuthHandler = new AuthHandler();\r\n      state = {\r\n          loaded: false,\r\n          isCompany: false\r\n      }\r\n\r\n\r\n    componentDidMount() {\r\n      if (!this.AuthHandler.loggedIn()) {\r\n        this.props.history.replace('/login');\r\n      } else {\r\n        if (this.AuthHandler.isCompany()) {\r\n          try {\r\n            this.setState({\r\n              loaded: true,\r\n              isCompany: true\r\n            });\r\n          } catch (err) {\r\n            /* if there's an error it will print it out and log the user out for security reasons. */\r\n            console.log(err);\r\n            this.AuthHandler.logout();\r\n              this.props.onLogoutUser();\r\n            this.props.history.push('/login');\r\n          }\r\n        } else {\r\n          alert('Only Company User can see this features!');\r\n          /**In here if user type is not company then it will redirect to login page and logged out automatically */\r\n          this.AuthHandler.logout();\r\n            this.props.onLogoutUser();\r\n          this.props.history.push('/login');\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.loaded) {\r\n        if (this.state.isCompany) {\r\n          return <CompanyComponent history={this.props.history} />;\r\n        } else {\r\n          return null;\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}","/*\r\n* SurveyBuilder.js\r\n*\r\n*/\r\n\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport axios from '../../../axios-survey';\r\n\r\nimport Aux from \"../../../hoc/Auxiliary/Auxiliary\";\r\n\r\nimport {\r\n    Table, FormControl, FormGroup, ControlLabel, PageHeader, Button,\r\n    ButtonGroup, Clearfix\r\n} from 'react-bootstrap';\r\n\r\nimport classes from \"./SurveyBuilder.css\";\r\n\r\nimport {\r\n    asyncCreateQuestion,\r\n    cancelQuestion,\r\n    asyncDeleteQuestion,\r\n    editQuestion,\r\n    showAnswers,\r\n    hideAnswers,\r\n    asyncCreateAnswer,\r\n    asyncSaveAnswer,\r\n    editAnswer,\r\n    cancelAnswer,\r\n    asyncDeleteAnswer,\r\n    asyncSaveQuestion,\r\n    asyncFetchSurvey,\r\n    asyncSaveSurvey,\r\n    editSurvey,\r\n    setSurveyTitle,\r\n    setQuestionString,\r\n    setAnswerString,\r\n    logoutUser\r\n} from \"../../../store/actions\";\r\n\r\nimport Question from \"../../Question/Question\";\r\nimport NewQuestion from \"./NewQuestion\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport CompanyOnly from \"../../Login/CompanyOnly\";\r\n\r\n\r\nclass SurveyBuilder extends Component {\r\n    state = {\r\n        id: null,\r\n        title: \"\",\r\n        questions: null,\r\n        answer: null,\r\n        editingSurvey: false,\r\n        editingQuestion: false,\r\n        editingAnswer: false,\r\n        newSurvey: false,\r\n        newQuestion: false,\r\n        newAnswer: false,\r\n        inputValue: \"\",\r\n        inputId: -1\r\n    };\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.updateInputValue = this.updateInputValue.bind(this);\r\n        this.addNewQuestion = this.addNewQuestion.bind(this);\r\n        this.saveQuestion = this.saveQuestion.bind(this);\r\n        this.editQuestion = this.editQuestion.bind(this);\r\n        this.cancelQuestion = this.cancelQuestion.bind(this);\r\n        this.deleteQuestion = this.deleteQuestion.bind(this);\r\n        this.showAnswers = this.showAnswers.bind(this);\r\n        this.saveAnswer = this.saveAnswer.bind(this);\r\n        this.editAnswer = this.editAnswer.bind(this);\r\n        this.cancelAnswer = this.cancelAnswer.bind(this);\r\n        this.deleteAnswer = this.deleteAnswer.bind(this);\r\n        this.addNewAnswer = this.addNewAnswer.bind(this);\r\n        this.saveSurveyIdAndTitle = this.saveSurveyIdAndTitle.bind(this);\r\n        this.updateSurveyTitle = this.updateSurveyTitle.bind(this);\r\n        this.updateQuestionString = this.updateQuestionString.bind(this);\r\n        this.updateAnswerString = this.updateAnswerString.bind(this);\r\n        this.editSurvey = this.editSurvey.bind(this);\r\n        this.updateState = this.updateState.bind(this);\r\n        this.goBack = this.goBack.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        const newSurveyBuilderSurvey = this.props.surveyBuilder && this.props.surveyBuilder.survey && this.props.surveyBuilder.survey.newSurvey;\r\n        const newSurvey = this.props.survey && this.props.survey.id && this.props.survey.newSurvey;\r\n        const oldSurveyBuilderSurvey = this.props.surveyBuilder && this.props.surveyBuilder.survey && this.props.surveyBuilder.survey.id && !this.props.surveyBuilder.survey.newSurvey;\r\n        const oldSurvey = this.props.survey && this.props.survey.id && !this.props.survey.newSurvey;\r\n        if (newSurveyBuilderSurvey) {\r\n            this.updateState(this.props.surveyBuilder.survey);\r\n        } else if (newSurvey) {\r\n            this.updateState(this.props.survey);\r\n        } else if (oldSurveyBuilderSurvey) {\r\n            this.props.onFetchSurvey(this.props.surveyBuilder.survey.id);\r\n        } else if (oldSurvey) {\r\n            this.props.onFetchSurvey(this.props.survey.id);\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.survey && nextProps.survey.saveSuccess) {\r\n            this.setState({\r\n                saveSuccess: nextProps.saveSuccess,\r\n                editingSurvey: nextProps.editingSurvey\r\n            })\r\n        }\r\n        this.updateState(nextProps);\r\n    }\r\n\r\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\r\n        if (nextProps.survey !== this.props.survey) {\r\n            return true;\r\n        }\r\n        if (nextProps.survey && this.props.survey &&\r\n            nextProps.survey.title !== this.props.survey.title) {\r\n            return true;\r\n        }\r\n        if (nextProps.survey && this.props.survey &&\r\n            nextProps.survey.editingSurvey !== this.props.editingSurvey) {\r\n            return true;\r\n        }\r\n        if (nextProps.survey && this.props.survey &&\r\n            nextProps.survey.saveSuccess !== this.props.saveSuccess) {\r\n            return true;\r\n        }\r\n        //Check if questions are different\r\n        if (nextProps.survey && this.props.survey &&\r\n            nextProps.survey.questions !== this.props.survey.questions) {\r\n            return true;\r\n        }\r\n        //Check if answers are different\r\n        if (nextProps.survey && nextProps.survey.questions &&\r\n            this.props.survey && this.props.survey.questions) {\r\n            nextProps.survey.questions.forEach(questionA => {\r\n                this.props.survey.questions.forEach(questionB => {\r\n                    if (questionA.id === questionB.id) {\r\n                        if (questionA.answers !== questionB.answers) {\r\n                            return true;\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n        return true;\r\n    }\r\n\r\n    updateState(someProps) {\r\n        if (someProps.survey) {\r\n            const questions = {...someProps.survey.questions};\r\n            this.setState({\r\n                id: someProps.survey.id,\r\n                title: someProps.survey.title,\r\n                questions: questions,\r\n                newSurvey: someProps.survey.newSurvey\r\n            });\r\n        }\r\n    }\r\n\r\n    goBack() {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    editSurvey() {\r\n        this.setState({\r\n            id: this.props.survey.id,\r\n            title: this.props.survey.title,\r\n            editingSurvey: true\r\n        });\r\n        const survey = {\r\n            id: this.props.survey.id,\r\n            title: this.props.survey.title,\r\n            questions: this.props.survey.questions,\r\n            newSurvey: this.state.newSurvey\r\n        };\r\n        this.props.onEditSurvey(survey);\r\n    };\r\n\r\n\r\n    saveSurveyIdAndTitle() {\r\n        const surveyId = this.state.id;\r\n        const surveyTitle = this.state.title;\r\n        const saveSurvey = {\r\n            id: surveyId,\r\n            title: surveyTitle,\r\n            owner: this.props.app.user_id\r\n        };\r\n        if (this.state.newSurvey) {\r\n            this.props.onSaveSurvey(saveSurvey, true);\r\n        } else {\r\n            this.props.onSaveSurvey(saveSurvey, false);\r\n        }\r\n    };\r\n\r\n    updateInputValue = (evt) => {\r\n        this.setState({\r\n            inputValue: evt.target.value,\r\n            inputId: +evt.target.id\r\n        });\r\n    };\r\n\r\n    updateSurveyTitle = (evt) => {\r\n        const title = document.getElementById(\"title\").value;\r\n\r\n        this.props.onSetSurveyTitle(this.props.survey, title);\r\n    };\r\n\r\n    updateQuestionString = (evt) => {\r\n        this.setState({\r\n            inputValue: evt.target.value,\r\n            inputId: +evt.target.id\r\n        });\r\n        this.props.onSetQuestionString(this.state.inputId, this.state.inputValue);\r\n    };\r\n\r\n    updateAnswerString = (evt) => {\r\n        this.setState({\r\n            inputValue: evt.target.value,\r\n            inputId: +evt.target.id\r\n        });\r\n        this.props.onSetAnswerString(this.state.inputId, this.state.inputValue);\r\n    };\r\n\r\n    saveAnswer(answer) {\r\n        answer.answer_option = this.state.inputValue;\r\n        this.props.onAnswerSaved(answer);\r\n        this.setState({editingAnswer: false, newAnswer: false, answer: answer});\r\n        this.setState({inputId: -1, inputValue: \"\"});\r\n    }\r\n\r\n    editAnswer(answer) {\r\n        this.setState({answer: answer, inputValue: answer.answer_option});\r\n\r\n        this.props.onAnswerEdited(answer);\r\n        this.setState({editingAnswer: true, newAnswer: false});\r\n    }\r\n\r\n    cancelAnswer(answer) {\r\n        this.props.onAnswerCanceled(answer);\r\n        this.setState({editingAnswer: false, newAnswer: false, answer: answer});\r\n    }\r\n\r\n    deleteAnswer(answer) {\r\n        this.setState({editingAnswer: false, newAnswer: false, answer: null});\r\n        this.props.onAnswerDeleted(answer);\r\n\r\n    }\r\n\r\n    addNewAnswer(question) {\r\n        this.setState({newAnswer: true, editingAnswer: true});\r\n        const newAnswer = {\r\n            id: null,\r\n            answer_option: \"\",\r\n            questionFK: question.id,\r\n        };\r\n        this.props.onAnswerCreated(newAnswer)\r\n    }\r\n\r\n    addNewQuestion() {\r\n        this.setState({\r\n            newQuestion: true,\r\n            editingQuestion: true,\r\n        });\r\n        const question = {\r\n            id: null,\r\n            question: \"\",\r\n            surveyFK: this.props.survey ? this.props.survey.id : null\r\n        };\r\n        this.props.onQuestionCreated(question);\r\n    }\r\n\r\n    saveQuestion(editedQuestion) {\r\n        let savedQuestion = null;\r\n        if (editedQuestion) {\r\n            editedQuestion.question = this.state.inputValue;\r\n            savedQuestion = editedQuestion;\r\n        } else {\r\n            savedQuestion = {\r\n                id: this.state.inputId,\r\n                question: this.state.inputValue,\r\n                surveyFK: this.props.survey.id\r\n            };\r\n        }\r\n        const newQuestion = this.state.newQuestion;\r\n        this.props.onQuestionSaved(savedQuestion, newQuestion);\r\n        this.setState({inputId: -1, inputValue: \"\"});\r\n\r\n    };\r\n\r\n    cancelQuestion(id, value) {\r\n        this.props.onQuestionCanceled(id, value);\r\n        this.setState({inputId: -1, inputValue: \"\"})\r\n    };\r\n\r\n    editQuestion(question) {\r\n        this.setState({\r\n            inputId: question.id,\r\n            inputValue: question.question,\r\n            newQuestion: false\r\n        });\r\n        this.props.onQuestionEdited(question);\r\n    };\r\n\r\n\r\n    deleteQuestion(id) {\r\n        this.props.onQuestionDeleted(id);\r\n    };\r\n\r\n    showAnswers(question) {\r\n        this.setState({question: question});\r\n        if (question.showAnswers) {\r\n            this.props.onHideAnswers(question);\r\n        } else {\r\n            this.props.onShowAnswers(question);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.surveyBuilder}>\r\n                <PageHeader className={classes.pageHeader}>Survey Builder</PageHeader>\r\n                <br/>\r\n                <Clearfix/>\r\n                <form className={classes.form}>\r\n                    <br/>\r\n                    <Clearfix/>\r\n                    <FormGroup className={classes.group}>\r\n                        <ControlLabel className={classes.label} htmlFor=\"id\">Survey ID</ControlLabel>\r\n                        <FormControl className={classes.input}\r\n                                     type=\"text\" name=\"id\" id=\"id\" disabled={true}\r\n                            //onChange={props.updateId}\r\n                                     value={this.state.id}/>\r\n                    </FormGroup><br/>\r\n                    <Clearfix/>\r\n                    <FormGroup className={classes.group}>\r\n                        <ControlLabel className={classes.label} htmlFor=\"title\">Survey Name</ControlLabel>\r\n                        <FormControl className={classes.input}\r\n                                     disabled={!this.state.editingSurvey}\r\n                                     type=\"text\" name=\"title\" id=\"title\"\r\n                                     onChange={() => this.updateSurveyTitle(this.state.title)}\r\n                                     value={this.state.title}/>\r\n                    </FormGroup>\r\n                    <Clearfix/>\r\n                    <ButtonGroup>\r\n                        <Button onClick={this.editSurvey}\r\n                                disabled={this.state.editingSurvey}\r\n                                bsStyle=\"primary\">Edit</Button>\r\n                        <Button onClick={this.saveSurveyIdAndTitle}\r\n                                disabled={!this.state.editingSurvey}\r\n                                bsStyle=\"success\">Save</Button>\r\n                    </ButtonGroup>\r\n                </form>\r\n                <Clearfix/>\r\n                <br/>\r\n                <br/>\r\n                <h2 className={classes.subheader}>Questions</h2>\r\n                <br/>\r\n                <Table className={classes.table}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th className={classes.tableId}>ID</th>\r\n                        <th>Question</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {!(this.props && this.props.survey && this.props.survey.questions) ? null :\r\n                        this.props.survey.questions.map(question => {\r\n                            if (question.editing) {\r\n                                return (\r\n                                    <Aux key=\"newQuestion\">\r\n                                        <NewQuestion\r\n                                            key={question.id}\r\n                                            id={question.id}\r\n                                            question={question}\r\n                                            inputValue={this.state.inputValue}\r\n                                            onChange={this.updateQuestionString}\r\n                                            save={this.saveQuestion}\r\n                                            cancel={this.cancelQuestion}/>\r\n                                        {!question.answers ? null : question.answers.map(answer => {\r\n                                            return (\r\n                                                <tr key={answer.answer_option}>\r\n                                                    <td>&nbsp;&nbsp;</td>\r\n                                                    <td>&ndash;</td>\r\n                                                    <td>{answer.answer_option}</td>\r\n                                                </tr>\r\n                                            )\r\n                                        })}\r\n\r\n                                    </Aux>\r\n\r\n                                );\r\n                            } else {\r\n                                return (\r\n                                    <Aux key={question.id}>\r\n                                        <Question\r\n                                            key={question.id}\r\n                                            question={question}\r\n                                            edit={this.editQuestion}\r\n                                            delete={this.deleteQuestion}\r\n                                            answers={this.showAnswers}\r\n                                        />\r\n\r\n                                        {question.answers && question.answers.map(answer => {\r\n\r\n                                            if (answer.editing) {\r\n                                                return (\r\n                                                    <Aux>\r\n                                                        <tr key={answer.id}>\r\n                                                            <td>{answer.id}</td>\r\n                                                            <td>\r\n                                                                <textarea\r\n                                                                    onChange={evt => this.updateAnswerString(evt)}\r\n                                                                    value={this.state.inputValue}\r\n                                                                    id={answer.id}/>\r\n                                                            </td>\r\n                                                            <td>\r\n                                                                <ButtonGroup>\r\n                                                                    <Button bsStyle=\"success\"\r\n                                                                            onClick={() => this.saveAnswer(answer)}>\r\n                                                                        Save</Button>\r\n                                                                    <Button bsStyle=\"default\"\r\n                                                                            onClick={() => this.cancelAnswer(answer)}>\r\n                                                                        Cancel</Button>\r\n                                                                </ButtonGroup>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </Aux>\r\n                                                );\r\n                                            } else {\r\n                                                return (\r\n                                                    <Aux>\r\n                                                        <tr key={answer.id}\r\n                                                            className={question.showAnswers ? classes.showAnswers : classes.hideAnswers}>\r\n                                                            <td>{answer.id}</td>\r\n                                                            <td>{answer.answer_option}</td>\r\n                                                            <td>\r\n                                                                <ButtonGroup>\r\n                                                                    <Button onClick={() => this.editAnswer(answer)}\r\n                                                                            bsStyle=\"success\">Edit</Button>\r\n                                                                    <Button onClick={() => this.deleteAnswer(answer)}\r\n                                                                            bsStyle=\"danger\">Delete</Button>\r\n                                                                </ButtonGroup>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    </Aux>\r\n                                                )\r\n                                            }\r\n                                        })}\r\n                                        {!question.showAnswers ? null :\r\n                                            <Aux>\r\n                                                <tr key=\"addAnswer\"\r\n                                                    className={question.showAnswers ? classes.showAnswers : classes.hideAnswers}>\r\n                                                    <td></td>\r\n                                                    <td><Button onClick={() => this.addNewAnswer(question)}\r\n                                                                bsStyle=\"primary\">Add Answer</Button></td>\r\n                                                    <td></td>\r\n                                                </tr>\r\n                                            </Aux>\r\n                                        }\r\n                                    </Aux>\r\n                                );\r\n                            }\r\n                        })}\r\n                    </tbody>\r\n                </Table>\r\n\r\n                <Button onClick={this.addNewQuestion} bsStyle=\"success\">Add a Question</Button>\r\n\r\n\r\n                <Button bsStyle=\"info\" onClick={this.goBack}>Go Back</Button>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        survey: state.surveyBuilder.survey,\r\n        user: state.user,\r\n        account: state.account,\r\n        app: state.app,\r\n        error: state.surveyBuilder.error\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onFetchSurvey: (survey_id) => dispatch(asyncFetchSurvey(survey_id)),\r\n        onSaveSurvey: (survey, newSurvey) => dispatch(asyncSaveSurvey(survey, newSurvey)),\r\n        onEditSurvey: (survey) => dispatch(editSurvey(survey)),\r\n        onQuestionCreated: (question) => dispatch(asyncCreateQuestion(question)),\r\n        onQuestionEdited: (id, value) => dispatch(editQuestion(id, value)),\r\n        onQuestionSaved: (question) => dispatch(asyncSaveQuestion(question)),\r\n        onQuestionCanceled: (id, value) => dispatch(cancelQuestion(id, value)),\r\n        onQuestionDeleted: (id) => dispatch(asyncDeleteQuestion(id)),\r\n        onShowAnswers: (question) => dispatch(showAnswers(question)),\r\n        onHideAnswers: (question) => dispatch(hideAnswers(question)),\r\n        onAnswerCreated: (answer) => dispatch(asyncCreateAnswer(answer)),\r\n        onAnswerEdited: (answer) => dispatch(editAnswer(answer)),\r\n        onAnswerSaved: (answer) => dispatch(asyncSaveAnswer(answer)),\r\n        onAnswerCanceled: (answer) => dispatch(cancelAnswer(answer)),\r\n        onAnswerDeleted: (answer) => dispatch(asyncDeleteAnswer(answer)),\r\n        onSetSurveyTitle: (survey, title) => dispatch(setSurveyTitle(survey, title)),\r\n        onSetQuestionString: (question_id, question_string) => dispatch(setQuestionString(question_id, question_string)),\r\n        onSetAnswerString: (answer_id, answer_string) => dispatch(setAnswerString(answer_id, answer_string)),\r\n        onLogoutUser: () => dispatch(logoutUser())\r\n    }\r\n};\r\n\r\nexport default CompanyOnly(connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(SurveyBuilder, axios)));","import React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport axios from '../../../axios-survey';\r\n\r\nimport {asyncListSurveys, setSurveyId, asyncDeleteSurvey, asyncCreateNewSurvey, logoutUser} from \"../../../store/actions\";\r\n\r\nimport { Table, Button, ButtonGroup,} from 'react-bootstrap';\r\n\r\nimport classes from \"./SurveysManager.css\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport CompanyOnly from \"../../Login/CompanyOnly\";\r\nclass SurveysManager extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.editSurvey = this.editSurvey.bind(this);\r\n        this.addNewSurvey =this.addNewSurvey.bind(this);\r\n        this.deleteSurvey = this.deleteSurvey.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        if (this.props.app && this.props.app.type && this.props.app.type === \"company\") {\r\n            this.props.onListSurveys(this.props.app.user_id);\r\n        } else {\r\n            this.props.onListSurveys();\r\n        }\r\n    }\r\n\r\n    editSurvey(survey) {\r\n        this.props.onSetSurveyId(survey.id);\r\n        this.props.history.push(\"/surveybuilder\");\r\n    }\r\n\r\n    addNewSurvey() {\r\n        this.props.onCreateNewSurvey();\r\n        this.props.history.push(\"/surveybuilder\");\r\n    }\r\n\r\n    deleteSurvey(survey) {\r\n        this.props.onDeleteSurvey(survey);\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n\r\n        return (\r\n            <div className={classes.surveysManager}>\r\n                <h1 style={{marginTop:'6rem'}}>Surveys Manager</h1>\r\n                <Table className={classes.table}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Title</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.surveysManager.surveys && this.props.surveysManager.surveys.map(survey => {\r\n                        return (\r\n                            <tr key={survey.id}>\r\n                                <td>{survey.id}</td>\r\n                                <td>{survey.title}</td>\r\n                                <td>\r\n                                    <ButtonGroup>\r\n                                        <Button onClick={() => this.editSurvey(survey)} className={classes.btnPrimary} bsStyle=\"primary btn-sm\">Edit</Button>\r\n                                        <Button onClick={() => this.deleteSurvey(survey)} className={classes.btnDanger} bsStyle=\"danger btn-sm\">Delete</Button>\r\n                                    </ButtonGroup>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n                <Button onClick={this.addNewSurvey} className={classes.btn}>Add New Survey</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        surveysManager: state.surveysManager,\r\n        app: state.app\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onListSurveys: (user_id) => dispatch(asyncListSurveys(user_id)),\r\n        onCreateNewSurvey: () => dispatch(asyncCreateNewSurvey()),\r\n        onSetSurveyId: (survey_id) => dispatch(setSurveyId(survey_id)),\r\n        onDeleteSurvey: (survey) => dispatch(asyncDeleteSurvey(survey)),\r\n        onLogoutUser: () => dispatch(logoutUser)\r\n    }\r\n};\r\n\r\nexport default CompanyOnly(connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(SurveysManager, axios)));","import React, { Component } from 'react';\r\nimport AuthHandler from './AuthHandler';\r\n\r\n/* A higher order component (HOC) is frequently written as a function that returns a class. */\r\nexport default function AdminOnly(AdminComponent) {\r\n  return class ProtectionAdminComponent extends Component {\r\n    AuthHandler = new AuthHandler();\r\n    constructor() {\r\n      super();\r\n      this.state = {\r\n        loaded: false,\r\n        isAdmin: false\r\n      };\r\n    }\r\n\r\n    componentDidMount() {\r\n      if (!this.AuthHandler.loggedIn()) {\r\n        this.props.history.replace('/login');\r\n      } else {\r\n        if (this.AuthHandler.isAdmin()) {\r\n          try {\r\n            this.setState({\r\n              loaded: true,\r\n              isAdmin: true\r\n            });\r\n          } catch (err) {\r\n            /* if there's an error it will print it out and log the user out for security reasons. */\r\n            console.log(err);\r\n            AuthHandler.logout();\r\n              this.props.onLogoutUser();\r\n            this.props.history.push('/login');\r\n          }\r\n        } else {\r\n          alert('Only Admin User can do! Please contact the admin');\r\n          /**In here if user type is not admin then it will redirect to login page and logged out automatically */\r\n          this.AuthHandler.logout();\r\n            this.props.onLogoutUser();\r\n          this.props.history.push('/login');\r\n        }\r\n      }\r\n    }\r\n\r\n    render() {\r\n      if (this.state.loaded) {\r\n        if (this.state.isAdmin) {\r\n          return <AdminComponent history={this.props.history} />;\r\n        } else {\r\n          return null;\r\n        }\r\n      } else {\r\n        return null;\r\n      }\r\n    }\r\n  };\r\n}\r\n","/*\r\n * AccountsManager.js\r\n * */\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport {\r\n    asyncListAccounts,\r\n    editAccount,\r\n    asyncFetchAccount,\r\n    asyncDeleteAccount,\r\n    asyncCreateAccount,\r\n    resetAccount,\r\n    setAccountId,\r\n    selectAccount\r\n} from '../../../store/actions';\r\n\r\nimport axios from '../../../axios-survey';\r\n\r\nimport {\r\n    Table,\r\n    // FormControl, FormGroup, ControlLabel, PageHeader,\r\n    Button,\r\n    // ButtonToolbar,\r\n    ButtonGroup\r\n    //Alert\r\n} from 'react-bootstrap';\r\n\r\nimport classes from './AccountsManager.css';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler/withErrorHandler';\r\nimport AdminOnly from '../../Login/AdminOnly';\r\n\r\nclass AccountsManager extends Component {\r\n    state = {};\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.editAccount = this.editAccount.bind(this);\r\n        this.deleteAccount = this.deleteAccount.bind(this);\r\n        this.createAccount = this.createAccount.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.onListAccounts();\r\n    }\r\n\r\n    createAccount() {\r\n        this.props.onCreateAccount();\r\n        this.props.history.push('/account');\r\n    }\r\n\r\n    editAccount(account) {\r\n        this.props.onResetAccount();\r\n        this.props.onSelectAccount(account.id);\r\n        this.props.history.push('/account');\r\n    }\r\n\r\n    deleteAccount(account) {\r\n        this.props.onDeleteAccount(account.id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.accountManager}>\r\n                <h1>Accounts Manager</h1>\r\n                <Table className={classes.table}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>Title</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.accountsManager.accounts &&\r\n                    this.props.accountsManager.accounts.map(account => {\r\n                        return (\r\n                            <tr key={account.id}>\r\n                                <td>{account.id}</td>\r\n                                <td>{account.account}</td>\r\n                                <td>\r\n                                    <ButtonGroup>\r\n                                        <Button\r\n                                            onClick={() => this.editAccount(account)}\r\n                                            className={classes.btnPrimary} \r\n                                            bsStyle=\"primary btn-sm\">\r\n                                            Edit</Button>\r\n                                        <Button\r\n                                            onClick={() => this.deleteAccount(account)}\r\n                                            className={classes.btnDanger} \r\n                                            bsStyle=\"danger btn-sm\">\r\n                                            Delete</Button>\r\n                                    </ButtonGroup>\r\n                                </td>\r\n                            </tr>\r\n                        );\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n                <Button onClick={this.createAccount} className={classes.btn}>Add New Account</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        accountsManager: state.accountsManager,\r\n        app: state.app\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onListAccounts: () => dispatch(asyncListAccounts()),\r\n        onEditAccount: account_id => dispatch(editAccount(account_id)),\r\n        onDeleteAccount: account_id => dispatch(asyncDeleteAccount(account_id)),\r\n        onCreateAccount: () => dispatch(asyncCreateAccount()),\r\n        onResetAccount: () => dispatch(resetAccount()),\r\n        onFetchAccount: account_id => dispatch(asyncFetchAccount(account_id)),\r\n        onSetAccountId: (account_id) => dispatch(setAccountId(account_id)),\r\n        onSelectAccount: (account_id) => dispatch(selectAccount(account_id))\r\n    };\r\n};\r\n\r\nexport default AdminOnly(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(withErrorHandler(AccountsManager, axios))\r\n);\r\n","/*\r\n* UsersManager.js\r\n*/\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport axios from '../../../axios-survey';\r\nimport {\r\n    asyncListUsers,\r\n    asyncCreateUser,\r\n    asyncFetchUser,\r\n    resetUser,\r\n    asyncDeleteUser,\r\n    selectUser,\r\n    logoutUser\r\n} from \"../../../store/actions\";\r\nimport { Table,Button, ButtonGroup,} from 'react-bootstrap';\r\n\r\nimport classes from \"./UsersManager.css\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport AdminOnly from \"../../Login/AdminOnly\";\r\n\r\n\r\nclass UsersManager extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.createUser = this.createUser.bind(this);\r\n        this.editUser = this.editUser.bind(this);\r\n        this.deleteUser = this.deleteUser.bind(this);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.props.onListUsers();\r\n\r\n    }\r\n\r\n    createUser() {\r\n        this.props.onResetUser(true, true);\r\n        this.props.onCreateUser();\r\n        this.props.history.push(\"/user\");\r\n    }\r\n\r\n    editUser(user) {\r\n        this.props.onResetUser(true, false);\r\n        this.props.onSelectUser(user.id);\r\n        this.props.history.push(\"/user\");\r\n    }\r\n\r\n    deleteUser(user_id) {\r\n        this.props.onDeleteUser(user_id);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className={classes.usersManager}>\r\n                <h1>Users Manager</h1>\r\n                <Table className={classes.table}>\r\n                    <thead>\r\n                    <tr>\r\n                        <th>ID</th>\r\n                        <th>First Name</th>\r\n                        <th>Last Name</th>\r\n                        <th>Action</th>\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {this.props.usersManager.users && this.props.usersManager.users.map(user => {\r\n                        return (\r\n                            <tr key={user.id}>\r\n                                <td>{user.id}</td>\r\n                                <td>{user.firstname}</td>\r\n                                <td>{user.lastname}</td>\r\n                                <td>\r\n                                    <ButtonGroup>\r\n                                        <Button onClick={() => this.editUser(user)} className={classes.btnPrimary} bsStyle=\"primary btn-sm\">Edit</Button>\r\n                                        <Button onClick={() =>this.deleteUser(user.id)} className={classes.btnDanger} bsStyle=\"danger btn-sm\">Delete</Button>\r\n                                    </ButtonGroup>\r\n                                </td>\r\n                            </tr>\r\n                        )\r\n                    })}\r\n                    </tbody>\r\n                </Table>\r\n                <Button onClick={this.createUser} className={classes.btn}>Add New User</Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        usersManager: state.usersManager\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onListUsers: () => dispatch(asyncListUsers()),\r\n        onCreateUser: () => dispatch(asyncCreateUser()),\r\n        onFetchUser: (user) => dispatch(asyncFetchUser(user)),\r\n        onResetUser: (routing, newUser) => dispatch(resetUser(routing, newUser)),\r\n        onDeleteUser: (user_id) => dispatch(asyncDeleteUser(user_id)),\r\n        onSelectUser: (user_kd) => dispatch(selectUser(user_kd)),\r\n        onLogoutUser: () => dispatch(logoutUser())\r\n    }\r\n};\r\n\r\nexport default AdminOnly(connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(UsersManager, axios)));\r\n","import {\r\n    DELETE_USER, DELETE_USER_FAILED,\r\n    LIST_USERS, LIST_USERS_FAILED, SELECT_USER\r\n} from \"./actionsTypes\";\r\nimport axios from \"../../axios-survey\";\r\n\r\nconst listUsers = (users) => {\r\n    return {type: LIST_USERS, users: users}\r\n};\r\n\r\nconst listUsersFailed = (error) => {\r\n    return {type: LIST_USERS_FAILED, error};\r\n};\r\n\r\nexport const asyncListUsers = () => {\r\n    return dispatch => {\r\n        axios.get(\"/users\")\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    dispatch(listUsersFailed(response.data.sqlMessage));\r\n                } else {\r\n                    const users = response.data;\r\n                    dispatch(listUsers(users));\r\n                }\r\n            }\r\n        });\r\n    }\r\n};\r\n\r\nexport const selectUser = (user_id) => {\r\n    return {type: SELECT_USER, id: user_id};\r\n};\r\n\r\nconst deleteUser = (user_id) => {\r\n    return {type: DELETE_USER, id: user_id}\r\n};\r\n\r\nconst deleteUserFailed = (error) => {\r\n    return {type: DELETE_USER_FAILED, error};\r\n};\r\n\r\nexport const asyncDeleteUser = (user_id) => {\r\n    return dispatch => {\r\n        axios.delete(`/users/${user_id}`)\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                if (response.data.errno) {\r\n                    console.log(\"ERROR\",response.data.sqlMessage);\r\n                    dispatch(deleteUserFailed(response.data.sqlMessage));\r\n                } else {\r\n                    dispatch(deleteUser(user_id));\r\n                }\r\n            }\r\n        })\r\n    }\r\n};\r\n","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\n\r\n\r\nexport class FormUserDetails extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          \r\n          <FormControl style={styles.InputFirst}>\r\n          <InputLabel htmlFor=\"adornment-firstname\">Enter Your First Name</InputLabel>\r\n          <Input\r\n            type='text'\r\n            defaultValue={values.firstname}\r\n            onChange={handleChange('firstName')}\r\n          />\r\n          \r\n          </FormControl>\r\n          <br />\r\n          <FormControl style={styles.Input}>\r\n          <InputLabel htmlFor=\"adornment-lastname\">Enter Your Last Name</InputLabel>\r\n          <Input\r\n            type='text'\r\n            defaultValue={values.lastname}\r\n            onChange={handleChange('lastName')}\r\n          />\r\n          </FormControl>\r\n          <br />\r\n          \r\n          <FormControl style={styles.InputLast}>\r\n          <InputLabel htmlFor=\"adornment-email\">Enter Your Email</InputLabel>\r\n          <Input\r\n            type='email'\r\n            defaultValue={values.email}\r\n            onChange={handleChange('email')}\r\n          />\r\n          </FormControl>\r\n\r\n          <br/>\r\n          <FormControl component=\"fieldset\">\r\n          <InputLabel style={{marginTop:\"3rem\"}} htmlFor=\"adornment-email\">Select Your Service Type</InputLabel>\r\n            <RadioGroup\r\n              aria-label=\"position\"\r\n              name=\"position\"\r\n              value={values.type}\r\n              onChange={handleChange('type')}\r\n              style={{marginTop:\"6rem\"}}\r\n              row\r\n            >\r\n          <FormControlLabel\r\n                value={\"Customer\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={\"Customer\"}\r\n                labelPlacement=\"top\"\r\n            />\r\n          <FormControlLabel\r\n                value={\"Company\"}\r\n                control={<Radio color=\"primary\" />}\r\n                label={\"Company\"}\r\n                labelPlacement=\"top\"\r\n            />\r\n            </RadioGroup>\r\n            </FormControl>\r\n              <br />\r\n\r\n          <br />\r\n\r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n          <RaisedButton\r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  },\r\n  InputFirst:{\r\n    width: 256,\r\n    marginTop:75\r\n  },\r\n  Input:{\r\n    width: 256,\r\n    margin:25\r\n  },\r\n  InputLast:{\r\n    width: 256,\r\n  }\r\n};\r\n\r\n\r\nexport default FormUserDetails;","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\n\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\n\r\n\r\nexport class FormUserDetails extends Component {\r\n    state = {\r\n        showPassword: false,\r\n        isMatch: true,\r\n        password:''\r\n      };  \r\n    \r\n  continue = e => {\r\n    e.preventDefault();\r\n    if(this.props.values.passwordConfirm !== this.props.values.password){\r\n      this.setState({isMatch: false})\r\n    }else{\r\n      this.props.nextStep();\r\n    }\r\n    \r\n  };\r\n\r\n  handlePasswordMatch = (password, passwordConfirm) => {\r\n    if( password !== passwordConfirm){\r\n      this.setState({isMatch:false})\r\n    }else{\r\n      this.props.nextStep();\r\n    }\r\n  }\r\n\r\n  handleClickShowPassword = () => {\r\n    this.setState(state => ({ showPassword: !state.showPassword }));\r\n  };\r\n\r\n  handlePaswordChange = e => {\r\n    this.setState({password: e.target.values})\r\n  }\r\n\r\n  render() {\r\n    const {isMatch, showPassword } = this.state;\r\n    const { values, handleChange} = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n\r\n          <FormControl style={styles.InputFirst}>\r\n          <InputLabel htmlFor=\"adornment-username\">Enter Your Username</InputLabel>\r\n          <Input\r\n            type='text'\r\n            defaultValue={values.username}\r\n            onChange={handleChange('username')}\r\n          />\r\n          </FormControl>\r\n          <br />\r\n\r\n          <FormControl error={isMatch ? false : true} style={styles.Input}>\r\n          <InputLabel htmlFor=\"adornment-password\">Password</InputLabel>\r\n          <Input\r\n            type={showPassword ? 'text' : 'password'}\r\n            defaultValue={values.password}\r\n            onChange={handleChange('password')}\r\n            endAdornment={\r\n              <InputAdornment position=\"end\">\r\n                <IconButton\r\n                  aria-label=\"Toggle password visibility\"\r\n                  onClick={this.handleClickShowPassword}\r\n                >\r\n                  {showPassword ? <Visibility /> : <VisibilityOff />}\r\n                </IconButton>\r\n              </InputAdornment>\r\n            }\r\n          />\r\n          {isMatch ? null : <FormHelperText id=\"component-error-text\">Password is not Match</FormHelperText> }\r\n          </FormControl>\r\n          <br />\r\n\r\n          <FormControl error={isMatch ? false : true} style={styles.InputLast}>\r\n          <InputLabel htmlFor=\"adornment-password\">Confirm Your Password</InputLabel>\r\n          <Input\r\n            type='password'\r\n            defaultValue={values.passwordConfirm}\r\n            onChange={handleChange('passwordConfirm')}\r\n          />\r\n          {isMatch ? null : <FormHelperText id=\"component-error-text\">Password is not Match</FormHelperText> }\r\n          </FormControl>\r\n          <br />\r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  },\r\n  InputFirst:{\r\n    width: 256,\r\n    marginTop:75\r\n  },\r\n  Input:{\r\n    width: 256,\r\n    margin:25\r\n  },\r\n  InputLast:{\r\n    width: 256,\r\n  }\r\n};\r\n\r\nexport default FormUserDetails;","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\n\r\nimport TextDate from '@material-ui/core/TextField';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\n\r\nexport class FormPersonalDetails extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n    this.props.nextStep();\r\n  };\r\n\r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { values, handleChange } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n\r\n          <FormControl style={styles.InputFirst}>\r\n          <InputLabel htmlFor=\"adornment-phone\">Enter Your Phone</InputLabel>\r\n          <Input\r\n            type='text'\r\n            defaultValue={values.phone}\r\n            onChange={handleChange('phone')}\r\n          />\r\n          </FormControl>\r\n          <br />\r\n\r\n          <TextDate\r\n          id=\"date\"\r\n          label=\"Birthdate\"\r\n          type=\"date\"\r\n          onChange={handleChange('birthdate')}\r\n          defaultValue={values.birthdate}\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n          style={styles.InputDate}\r\n        />\r\n        <br />\r\n\r\n          <FormControl style={styles.Input}>\r\n          <InputLabel htmlFor=\"adornment-streetAddress\">Enter Your Street Address</InputLabel>\r\n          <Input\r\n            type='text'\r\n            defaultValue={values.streetAddress}\r\n            onChange={handleChange('streetAddress')}\r\n          />\r\n          </FormControl>\r\n          <br />\r\n          \r\n          <FormControl style={styles.InputLast}>\r\n          <InputLabel htmlFor=\"adornment-postalCode\">Enter Your Postal Code</InputLabel>\r\n          <Input\r\n            type='text'\r\n            defaultValue={values.postalCode}\r\n            onChange={handleChange('postalCode')}\r\n          />\r\n          </FormControl>\r\n          <br />\r\n          \r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n          <RaisedButton\r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  },\r\n  InputFirst:{\r\n    width: 256,\r\n    marginTop:75,\r\n    marginBottom:15\r\n  },\r\n  InputDate:{\r\n    width: 256,\r\n    marginTop: \"15px\",\r\n    marginBottom: \"10px\"\r\n  },\r\n  Input:{\r\n    width: 256,\r\n    marginTop: \"15px\",\r\n    marginBottom: \"25px\"\r\n  },\r\n  InputLast:{\r\n    width: 256,\r\n  },\r\n};\r\n\r\nexport default FormPersonalDetails;","import React, { Component } from 'react';\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport {List, ListItem} from 'material-ui/List';\r\nimport RaisedButton from 'material-ui/RaisedButton';\r\nimport moment from \"moment\";\r\n\r\nimport axios from \"../../axios-survey\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    asyncCreateNewAccount,\r\n    asyncCreateNewUser\r\n} from \"../../store/actions\";\r\n\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nexport class FormUserDetails extends Component {\r\n  continue = e => {\r\n    e.preventDefault();\r\n    const newAccount = {\r\n        id: this.props.account.id,\r\n        account: this.props.values.username,\r\n        password: this.props.values.password,\r\n        expireDate: null,\r\n        joinedDate: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n        modifiedDate: moment().format(\"YYYY-MM-DD hh:mm:ss\")\r\n\r\n    };\r\n    const newUser = {\r\n        id: null,\r\n        firstname: this.props.values.firstName,\r\n        lastname: this.props.values.lastName,\r\n        accountFK: null,\r\n        email: this.props.values.email,\r\n        birthdate: this.props.values.birthdate,\r\n        phone: this.props.values.phone,\r\n        streetAddress: this.props.values.streetAddress,\r\n        postalCode: this.props.values.postalCode,\r\n        rewards: 0,\r\n        modifiedDate: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n        type: \"admin\"\r\n    };\r\n\r\n    // PROCESS FORM //\r\n    this.props.onCreateNewAccount(newAccount);\r\n    this.props.onCreateNewUser(newUser);\r\n\r\n    this.props.nextStep();\r\n  };\r\n  \r\n  back = e => {\r\n    e.preventDefault();\r\n    this.props.prevStep();\r\n  };\r\n\r\n  render() {\r\n    const { values: {username, firstName, lastName, email, birthdate, phone, streetAddress, postalCode } } = this.props;\r\n    return (\r\n      <MuiThemeProvider>\r\n        <React.Fragment>\r\n          <List>\r\n            <ListItem \r\n                style={{marginTop:75}}\r\n                primaryText=\"Username\"\r\n                secondaryText={ username}\r\n            />\r\n            <ListItem \r\n                primaryText=\"First name\"\r\n                secondaryText={ firstName}\r\n            />\r\n            <ListItem \r\n                primaryText=\"Last name\"\r\n                secondaryText={ lastName }\r\n            />\r\n            <ListItem \r\n                primaryText=\"Email\"\r\n                secondaryText={ email }\r\n            />\r\n            <ListItem \r\n                primaryText=\"Date Of Birth\"\r\n                secondaryText={ birthdate }\r\n            />\r\n            <ListItem \r\n                primaryText=\"Phone\"\r\n                secondaryText={ phone }\r\n            />\r\n            <ListItem \r\n                primaryText=\"Street Address\"\r\n                secondaryText={ streetAddress }\r\n            />\r\n            <ListItem \r\n                primaryText=\"Postal Code\"\r\n                secondaryText={ postalCode }\r\n            />\r\n          </List>\r\n          <br/>\r\n          <RaisedButton\r\n            label=\"Continue\"\r\n            primary={true}\r\n            style={styles.button}\r\n            onClick={this.continue}\r\n          />\r\n          <RaisedButton\r\n            label=\"Back\"\r\n            primary={false}\r\n            style={styles.button}\r\n            onClick={this.back}\r\n          />\r\n        </React.Fragment>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  button: {\r\n    margin: 15\r\n  }\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n        account: state.account\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onCreateNewAccount: (account) => dispatch(asyncCreateNewAccount(account)),\r\n        onCreateNewUser: (user) => dispatch(asyncCreateNewUser(user))\r\n    }\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(FormUserDetails, axios));","import React, {Component} from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\r\nimport {asyncSetUserAccountFK, setAppUserAccountIdName} from \"../../store/actions\"\r\nimport connect from \"react-redux/es/connect/connect\";\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\nimport axios from \"../../axios-survey\";\r\nimport AuthHandler from \"../Login/AuthHandler\";\r\n\r\nexport class FormUserDetails extends Component {\r\n\r\n    autHandler = new AuthHandler();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.setAccountFK = this.setAccountFK.bind(this);\r\n\r\n    }\r\n\r\n\r\n    setAccountFK(user, account) {\r\n        this.props.onSetUserAccountFK(user, account.id);\r\n        this.props.onSetApp(account, user);\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps, nextContext) {\r\n        const loggedInUndefined = (nextProps.app.logged_in === \"undefined\" &&\r\n                                    nextProps.app.loggedIn === \"undefined\");\r\n        const loggedIn = !loggedInUndefined && (nextProps.app.loggedIn || nextProps.app.logged_in);\r\n\r\n        if (nextProps.user && nextProps.user.saveSuccess &&\r\n            nextProps.account && nextProps.account.saveSuccess &&\r\n            !loggedIn) {\r\n            this.setAccountFK(nextProps.user, nextProps.account);\r\n        }\r\n        if (loggedIn && nextProps.user.accountFK && this.props && this.props.history) {\r\n            this.autHandler.login(nextProps.account.account, nextProps.account.password);\r\n            this.props.history.replace(\"/home\");\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <MuiThemeProvider>\r\n                <React.Fragment>\r\n                    {!this.props.app.loggedIn ? null :\r\n                        <Redirect to=\"/home\"/>\r\n                    }\r\n                </React.Fragment>\r\n            </MuiThemeProvider>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n        account: state.account\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onSetUserAccountFK: (user, account_id) => dispatch(asyncSetUserAccountFK(user, account_id)),\r\n        onSetApp: (account, user) => dispatch(setAppUserAccountIdName(account, user))\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(FormUserDetails, axios));\r\n","import React, { Component } from 'react'\r\n\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nimport FormUserDetails from './FormUserDetails';\r\nimport FormUserRegister from './FormUserRegister';\r\nimport FormPersonalDetails from './FormPersonalDetails';\r\nimport Confirm from './Confirm';\r\nimport Success from './Success';\r\n\r\nimport axios from \"../../axios-survey\";\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    asyncCreateAccount,\r\n} from \"../../store/actions\";\r\n\r\nimport withErrorHandler from \"../../hoc/withErrorHandler/withErrorHandler\";\r\n\r\nexport class UserForm extends Component {\r\n  state={\r\n    step: 1,\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    birthdate: '',\r\n    phone: '',\r\n    streetAddress: '',\r\n    postalCode: '', \r\n    username:'',\r\n    password:'',\r\n    passwordConfirm:'',\r\n    type:''\r\n  };\r\n  \r\n  // Proceed to next step\r\n  nextStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step + 1\r\n    });\r\n  };\r\n\r\n  // Go back to prev step\r\n  prevStep = () => {\r\n    const { step } = this.state;\r\n    this.setState({\r\n      step: step - 1\r\n    });\r\n  };\r\n\r\n  // Handle fields change\r\n  handleChange = input => e => {\r\n    this.setState({ [input]: e.target.value });\r\n  };\r\n    \r\n  render() {\r\n      const { step } = this.state;\r\n      const { firstName, lastName, email, birthdate, phone, streetAddress, postalCode, username, password, passwordConfirm, type } = this.state;\r\n      const values = { firstName, lastName, email, birthdate, phone, streetAddress, postalCode, username, password, passwordConfirm,type };\r\n    switch(step) {\r\n      case 1:\r\n        return (\r\n            <FormUserRegister\r\n            nextStep={this.nextStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );  \r\n      case 2:\r\n        return (\r\n            <FormUserDetails\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n          />\r\n        );\r\n        case 3:\r\n        return (\r\n          <FormPersonalDetails\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            handleChange={this.handleChange}\r\n            values={values}\r\n            />\r\n        );\r\n      case 4:\r\n        return (\r\n          <Confirm\r\n            nextStep={this.nextStep}\r\n            prevStep={this.prevStep}\r\n            values={values}\r\n            />\r\n        );\r\n      case 5:\r\n        return (<Success />);\r\n\r\n        default:\r\n        return (\r\n            <Redirect to=\"/homepage\"/>\r\n\r\n        );\r\n    }\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        app: state.app,\r\n        user: state.user,\r\n        account: state.account\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onCreateAccount: (account) => dispatch(asyncCreateAccount(account)),\r\n    }\r\n};\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(UserForm, axios));\r\n","/*\r\n* SurveysList.js\r\n*/\r\nimport React, {Component} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport axios from '../../../axios-survey';\r\nimport {\r\n    asyncSurveyList,\r\n    asyncGetSurveyAndQuestions,\r\n    logoutUser\r\n} from \"../../../store/actions\";\r\n\r\nimport classes from \"./SurveysList.css\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Protected from \"../../Login/Protected\";\r\nimport Edit from '@material-ui/icons/Edit';\r\n\r\nclass ListSurveys extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.takeTheSurvey = this.takeTheSurvey.bind(this);\r\n    }\r\n    \r\n    componentDidMount() {\r\n\r\n        this.props.onListSurveys();\r\n    }\r\n\r\n    takeTheSurvey(survey_id) {\r\n        this.props.onGetSurveyAndQuestions(survey_id);\r\n        this.props.history.replace(\"/survey\");\r\n    }\r\n\r\n    render() {\r\n        const surveys = this.props.survey.surveys && this.props.survey.surveys.map(survey => {\r\n            return (\r\n                    <div onClick={() =>this.takeTheSurvey(survey.id)} className={classes.item}>\r\n                        <div className={classes.text}>{`${survey.id}. ${survey.title}`}</div>\r\n                        <Edit className={classes.check}/>\r\n                    </div>\r\n               \r\n            );\r\n        } )\r\n\r\n        return (\r\n            <div className={classes.surveysList}>\r\n                <h1 style={{textAlign:\" center\", fontFamily: \"Raleway\", color: \"#34495e\"}}>List of Available Surveys</h1>\r\n                <div className={classes.container}> {surveys} </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        survey: state.survey\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onListSurveys: () => dispatch(asyncSurveyList()),\r\n        onGetSurveyAndQuestions: (survey_id) => dispatch(asyncGetSurveyAndQuestions(survey_id)),\r\n        onLogoutUser: () => dispatch(logoutUser())\r\n    }\r\n};\r\n\r\nexport default Protected(connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ListSurveys, axios)));\r\n","import React, { Component } from 'react';\r\nimport { Chart } from 'react-google-charts';\r\nimport Axios from 'axios';\r\nimport setting from '../../assets/settings/setting';\r\n\r\nclass SurveyChart extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.makeChart = this.makeChart.bind(this);\r\n    this.state = {\r\n      optionArray: [],\r\n      answerArray: [],\r\n      question: [],\r\n      values: [],\r\n      data: [],\r\n      isThereChoice: '',\r\n      type: [],\r\n      questionId: this.props.questionId,\r\n      isClicked: false,\r\n      buttonText: 'Show Chart',\r\n      number: ''\r\n    };\r\n  }\r\n\r\n  makeChart() {\r\n    // First doing some css btn change and hiding/showing contents\r\n    if (this.state.isClicked) {\r\n      document.getElementById('chart' + this.state.questionId).style.display =\r\n        'none';\r\n      document.getElementById('number' + this.state.questionId).style.display =\r\n        'none';\r\n      document.getElementById('Cbtn' + this.state.questionId).className =\r\n        'btn btn-success';\r\n      this.setState({ isClicked: false });\r\n      this.setState({ buttonText: 'Show Chart' });\r\n    } else {\r\n      document.getElementById('Cbtn' + this.state.questionId).className =\r\n        'btn btn-warning';\r\n      document.getElementById('chart' + this.state.questionId).style.display =\r\n        'block';\r\n      document.getElementById('number' + this.state.questionId).style.display =\r\n        'block';\r\n      this.setState({ isClicked: true });\r\n      this.setState({ buttonText: 'Hide Chart' });\r\n    }\r\n\r\n    /**Here getting data(number) to show number of people who answered question based on question id*/\r\n    var urlNumbers =\r\n      setting.api.url + '/answers/question/count/' + this.state.questionId;\r\n    Axios.get(urlNumbers).then(res => {\r\n      this.setState({ number: res.data[0].number });\r\n    });\r\n\r\n    /**Here getting question information based on question id */\r\n    var urlQuestion =\r\n      setting.api.url + '/questions/' + this.state.questionId;\r\n    Axios.get(urlQuestion).then(res => {\r\n      this.setState({ question: res.data[0].question });\r\n    });\r\n\r\n    //Here some ways of converting object to array i could have used\r\n    //Methods1\r\n    //   for (const key of Object.keys(this.state)) {\r\n    //     console.log(key, this.state[key]);\r\n    //   }\r\n\r\n    //Methods2\r\n    //   for (var key in res.data) {\r\n    //     arr.push(res.data[key]);\r\n    //   }\r\n\r\n    //Methods3\r\n    //   var arr = Object.values(res.data);\r\n\r\n    /**Because following two requests required to handle objects for the sorting so in here\r\n     * easiest or familiar loop basic, for loop is used\r\n     */\r\n\r\n    /**Here getting answer options based on question id */\r\n    var urlOptions =\r\n      setting.api.url + '/answer_options/question/' + this.state.questionId;\r\n    Axios.get(urlOptions).then(res => {\r\n      var optionArray = [];\r\n\r\n      for (var i = 0; i < res.data.length; i++) {\r\n        optionArray.push(res.data[i].answer);\r\n      }\r\n      if (optionArray.length === 0) {\r\n        /**In here if there were no any answer option, it means question is subjective which is not having multiple choice\r\n         * and in that case, chart 'WordTree' is almost only available type to use\r\n         */\r\n        this.setState({ isThereChoice: false });\r\n        this.setState({ type: ['WordTree'] });\r\n      } else {\r\n        /**In here, when question having multiple choices */\r\n        this.setState({ isThereChoice: true });\r\n        this.setState({ optionArray: optionArray });\r\n        this.setState({\r\n          type: ['PieChart', 'Bar', 'ScatterChart', 'BarChart']\r\n        });\r\n      }\r\n    });\r\n\r\n    /**until so far question, answer options have been defined in the state array so\r\n     * following request would get people(?), client's answer so it will compare with answer options\r\n     * then showing chart features\r\n     */\r\n\r\n    /**Here getting clients answers for the question based on question id */\r\n\r\n    var urlAnswers =\r\n      setting.api.url + '/answers/question/' + this.state.questionId;\r\n    Axios.get(urlAnswers).then(res => {\r\n      var answerArray = [];\r\n\r\n      for (var i = 0; i < res.data.length; i++) {\r\n        answerArray.push(res.data[i].answer);\r\n      }\r\n      this.setState({ answerArray: answerArray });\r\n      var values = [];\r\n      if (this.state.isThereChoice === true) {\r\n        /**In here if question is having multiple choices then it would compare answer options and\r\n         * clients answer so whenever it matches it would count then give it to values\r\n         */\r\n        for (var i = 0; i < this.state.optionArray.length; i++) {\r\n          var count = 0;\r\n          for (var j = 0; j < this.state.answerArray.length; j++) {\r\n            if (this.state.optionArray[i] === this.state.answerArray[j]) {\r\n              count++;\r\n            }\r\n          }\r\n          values.push(count);\r\n        }\r\n        this.setState({ values: values });\r\n\r\n        /**From here based on question/chart type, google react chart option is decided column title and values */\r\n        var data = [['Answer Option', 'Number of Answers']];\r\n\r\n        for (var k = 0; k < this.state.optionArray.length; k++) {\r\n          var setOfData = [this.state.optionArray[k], this.state.values[k]];\r\n          data.push(setOfData);\r\n        }\r\n      } else {\r\n        var data = [['Phrases']];\r\n        for (var i = 0; i < answerArray.length; i++) {\r\n          data.push([answerArray[i]]);\r\n        }\r\n      }\r\n      this.setState({ data: data });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"text-left\">\r\n        <button\r\n          className=\"btn btn-success\"\r\n          id={'Cbtn' + this.state.questionId}\r\n          onClick={this.makeChart}\r\n        >\r\n          {this.state.buttonText}\r\n        </button>\r\n        <br />\r\n        <div id={'number' + this.state.questionId} style={{ display: 'none' }}>\r\n          Number of people who participated in this question:{' '}\r\n          {this.state.number}\r\n        </div>\r\n        <div id={'chart' + this.state.questionId}>\r\n          {this.state.type.map(type => (\r\n            <td>\r\n              <Chart\r\n                width={'600px'}\r\n                height={'300px'}\r\n                chartType={type}\r\n                loader={<div>Loading Chart</div>}\r\n                data={this.state.data}\r\n                options={{ title: this.state.question }}\r\n              />\r\n            </td>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SurveyChart;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport SurveyChart from './SurveyChart';\r\nimport setting from '../../assets/settings/setting';\r\nclass Question extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.getQuestions = this.getQuestions.bind(this);\r\n    this.state = {\r\n      questions: [],\r\n      isClicked: false,\r\n      buttonText: 'Show Question',\r\n      surveyId: this.props.survey,\r\n      numbers: ''\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    axios\r\n      .get(setting.api.url+'/answers/survey/count/' + this.props.survey)\r\n      .then(res => {\r\n        const numbers = res.data[0].number;\r\n        this.setState({ numbers: numbers });\r\n      });\r\n  }\r\n  getQuestions() {\r\n    if (this.state.isClicked) {\r\n      document.getElementById('survey' + this.state.surveyId).style.display =\r\n        'none';\r\n      document.getElementById('Qbtn' + this.state.surveyId).className =\r\n        'btn btn-primary';\r\n      this.setState({ isClicked: false });\r\n      this.setState({ buttonText: 'Show Questions' });\r\n    } else {\r\n      document.getElementById('Qbtn' + this.state.surveyId).className =\r\n        'btn btn-warning';\r\n      document.getElementById('survey' + this.state.surveyId).style.display =\r\n        'block';\r\n      this.setState({ isClicked: true });\r\n      this.setState({ buttonText: 'Hide Questions' });\r\n    }\r\n    axios\r\n      .get(setting.api.url + '/surveys/' + this.props.survey + '/questions')\r\n      .then(res => {\r\n        const questions = res.data;\r\n        this.setState({ questions });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row justify-content-center\">\r\n          <button\r\n            className=\"btn btn-primary\"\r\n            onClick={this.getQuestions}\r\n            id={'Qbtn' + this.state.surveyId}\r\n          >\r\n            {this.state.buttonText}\r\n          </button>\r\n        </div>\r\n        <br />\r\n        <table className=\"table table-bordered table-condensed\">\r\n          <tr>\r\n            <td>\r\n              <div\r\n                id={'numberText' + this.state.surveyId}\r\n                className=\"text-left text-monospace\"\r\n              >\r\n                <b>\r\n                  Number of people who participated this survey:{' '}\r\n                  {this.state.numbers}\r\n                </b>\r\n              </div>\r\n              <br />\r\n              <div id={'survey' + this.state.surveyId}>\r\n                {this.state.questions.map(question => (\r\n                  <table key={question.id}>\r\n                    <tr>\r\n                      <th className=\"text-left\">{question.question}</th>\r\n                    </tr>\r\n                    <tr>\r\n                      <td>\r\n                        <SurveyChart\r\n                          questionId={question.id}\r\n                          survey={this.props.survey}\r\n                        />\r\n                      </td>\r\n                    </tr>\r\n                  </table>\r\n                ))}\r\n              </div>\r\n            </td>\r\n          </tr>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Question;\r\n","import axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {logoutUser} from \"../../store/actions\";\r\nimport Question from './Question';\r\nimport classes from './Result.css';\r\nimport CompanyOnly from '../Login/CompanyOnly';\r\nimport AuthHandler from '../Login/AuthHandler';\r\nimport setting from '../../assets/settings/setting';\r\n\r\nclass Result extends Component {\r\n  AuthHandler = new AuthHandler();\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      surveys: [],\r\n      owner: this.AuthHandler.getData().owner\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if(this.AuthHandler.getData().type === \"admin\"){\r\n      axios\r\n      .get(setting.api.url + '/surveys/')\r\n      .then(res => {\r\n        const surveys = res.data;\r\n        this.setState({ surveys });\r\n      });\r\n    }\r\n    else{\r\n      axios\r\n      .get(setting.api.url + '/surveys/owner/' + this.state.owner)\r\n      .then(res => {\r\n        const surveys = res.data;\r\n        this.setState({ surveys });\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={classes.result}>\r\n        <div className=\"container\">\r\n          {this.state.surveys.map(survey => (\r\n            <div>\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col-3\">\r\n                  <h4>{survey.title}</h4>\r\n                </div>\r\n              </div>\r\n              <div className=\"row justify-content-center\">\r\n                <div className=\"col\">\r\n                  <Question survey={survey.id} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onLogoutUser: () => dispatch(logoutUser())\r\n  }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(CompanyOnly(Result));\r\n","import React, {Component} from 'react';\r\nimport classes from './Login.css';\r\nimport AuthHandler from './AuthHandler';\r\nimport UserForm from '../Registration/UserForm';\r\nimport {NavLink, Route} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport {asyncUserLogin} from \"../../store/actions\";\r\n\r\nclass Login extends Component {\r\n    AuthHandler = new AuthHandler();\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.onChange = this.onChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.state = {\r\n            account: '',\r\n            password: ''\r\n        };\r\n    }\r\n\r\n    onChange = e => {\r\n        const state = this.state;\r\n        state[e.target.name] = e.target.value;\r\n        this.setState(state);\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n        this.props.onUserLogin(this.state.account, this.state.password);\r\n        this.AuthHandler.login(this.state.account, this.state.password)\r\n        .then(res => {\r\n            if (res.status === false) {\r\n                alert(res.message);\r\n                this.props.history.push('/login');\r\n            } else {\r\n                localStorage.setItem('sec', this.AuthHandler.whenExpired());\r\n                this.props.history.replace('/home');\r\n            }\r\n        })\r\n        .catch(err => {\r\n            alert(err);\r\n        });\r\n    };\r\n\r\n    componentWillMount() {\r\n        if (this.AuthHandler.loggedIn() && this.AuthHandler.tokenCheck()) {\r\n            this.props.history.replace('/home');\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className={classes.body}>\r\n                    <div className={classes.wrapper}>\r\n                        <div className={classes.left}>\r\n                            <div className={classes.signin}>\r\n                                <form onSubmit={this.handleSubmit}>\r\n                                    <div>\r\n                                        <label>Email or username</label>\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            id=\"account\"\r\n                                            name=\"account\"\r\n                                            autoComplete=\"false\"\r\n                                            autoFocus={true}\r\n                                            onChange={this.onChange}\r\n                                            className={classes.textInput}/>\r\n                                    </div>\r\n                                    <div>\r\n                                        <label>Password</label>\r\n                                        <input type=\"password\"\r\n                                               id=\"password\"\r\n                                               name=\"password\"\r\n                                               autoComplete=\"false\"\r\n                                               onChange={this.onChange}\r\n                                               className={classes.textInput}/>\r\n                                    </div>\r\n                                    <button type=\"submit\" className={classes.primaryBtn}>Sign In</button>\r\n                                </form>\r\n                                <div className={classes.links}>\r\n                                    <NavLink to=\"#\">Forgot Password</NavLink>\r\n                                    <NavLink to=\"#\">Sign in with company or school</NavLink>\r\n                                </div>\r\n                                <div className={classes.or}>\r\n                                    <hr className={classes.bar}/>\r\n                                    <span>OR</span>\r\n                                    <hr className={classes.bar}/>\r\n                                </div>\r\n\r\n                                <NavLink to=\"/registration\" className={classes.secondaryBtn}>Create\r\n                                    an account</NavLink>\r\n                                <Route path=\"/registration\" component={UserForm}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className={classes.right}>\r\n                            <div className={classes.showcase}>\r\n                                <div className={classes.showcaseContent}>\r\n                                    <h1 className={classes.show} caseText>\r\n                                        Let's survey <strong>the future</strong>\r\n                                    </h1>\r\n                                    <NavLink to=\"/Home\" className={classes.secondaryBtn}>Start a\r\n                                        FREE 10-day trial</NavLink>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapDispathToProps = (dispatch) => {\r\n    return {\r\n        onUserLogin: (username, password) => dispatch(asyncUserLogin(username, password))\r\n    }\r\n};\r\n\r\nexport default connect(null, mapDispathToProps)(Login);\r\n","import React from 'react';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\n\r\nconst FormQuestions = ({question}) => {\r\n  const styles = {\r\n      InputLabel: {\r\n        color: 'black',\r\n        fontWeight: 700,\r\n        fontSize: 20\r\n      }\r\n    };\r\n    \r\n  return (\r\n    <React.Fragment>      \r\n    <InputLabel\r\n      id=\"standard-name\"\r\n      children={question}\r\n      name=\"ans1\"\r\n      margin=\"dense\"\r\n      style={styles.InputLabel}\r\n      variant=\"filled\"\r\n      />\r\n    <br/>\r\n      </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default FormQuestions\r\n","import React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\n\r\nclass AnswerOpt extends React.Component {\r\n  state = {\r\n    value: \"\",\r\n      Answer: {}\r\n  };\r\n    handleRadioButtonChange = (answer_id) => {\r\n        document.getElementById(answer_id).checked = true;\r\n    };\r\n\r\n    handleChange = (event, options) => {\r\n        let Answer = Object.assign({}, this.state.Answer);\r\n\r\n        Answer.AnswerOpt = event.target.value;\r\n        Answer.questionId = this.props.questionId;\r\n        Answer.answerId = event.target.id;\r\n        let newOptions = options.Options.slice(0);\r\n        newOptions.forEach(option => {\r\n            const newOption = {...option};\r\n            const props = {...newOption.props};\r\n            if (props.name === Answer.answerId) {\r\n                props.checked = true;\r\n            } else {\r\n                props.checked = null;\r\n            }\r\n            newOption.props = props;\r\n            option = newOption;\r\n        });\r\n\r\n        this.setState({Answer});\r\n        const answerElement = document.getElementById(Answer.answerId);\r\n        if (answerElement && answerElement !== \"undefined\") {\r\n            document.getElementById(Answer.answerId).checked = true;\r\n        }\r\n        this.props.onSave(Answer);\r\n    };\r\n\r\n    isAnswerSelected = (answer_id) => {\r\n        if (this.props.Answer && this.props.Answer !== \"undefined\") {\r\n            const answers = this.props.Answer;\r\n            answers.forEach(answer => {\r\n                if (+answer.answerId === answer_id) {\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n        return null;\r\n    };\r\n\r\n  render() {\r\n    const answerOption = this.props.AnswerOption;\r\n    const Options = answerOption && answerOption.map( ans => {\r\n        return <FormControlLabel\r\n                key={ans.id}\r\n                value={ans.answer_option}\r\n                name={ans.id}\r\n                control={<Radio\r\n                    id={ans.id}\r\n                    checked={this.isAnswerSelected(ans.id)}\r\n                    color=\"primary\"\r\n                />}\r\n                label={ans.answer_option}\r\n                labelPlacement=\"top\"\r\n            />\r\n    });\r\n\r\n    return (\r\n      <FormControl style={styles.RadioAnswer}>\r\n        <RadioGroup\r\n          aria-label=\"position\"\r\n          name=\"position\"\r\n          value={this.state.Answer.answer_option}\r\n          onChange={(event) => this.handleChange(event, {Options})}\r\n          row\r\n        >\r\n          {Options}\r\n        </RadioGroup>\r\n      </FormControl>\r\n    );\r\n  }\r\n}\r\nconst colorText = {'gray': '#000d11'}\r\n\r\nconst styles = {\r\n  RadioAnswer: {\r\n      marginTop:10,\r\n      marginBottom:40,\r\n      color: colorText.gray\r\n  }\r\n};\r\n\r\n\r\nexport default AnswerOpt;\r\n","import React, { Component } from 'react'\r\nimport FormQuestions  from './FormQuestions';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport AnswerOpt from './AnswerOpt';\r\n\r\nimport {asyncGetSurveyAndQuestions, asynRegisterAnswer, logoutUser} from \"../../../store/actions\";\r\nimport {connect} from \"react-redux\";\r\nimport axios from \"../../../axios-survey\";\r\nimport withErrorHandler from \"../../../hoc/withErrorHandler/withErrorHandler\";\r\nimport Protected from \"../../Login/Protected\";\r\nimport classes from './SurveyForm.css';\r\nclass SurveyForm extends Component {\r\n\r\n    state ={\r\n        questions: [],\r\n        AnswerOpt: [],\r\n        Answer:[]\r\n    };\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.getSurvey = this.getSurvey.bind(this);\r\n        this.logState = this.logState.bind(this);\r\n        this.state={title: \"\"}\r\n    }\r\n\r\n    getSurvey(survey_id) {\r\n        this.props.onGetSurveyAndQuestions(survey_id);\r\n    }\r\n\r\n  componentWillMount(){\r\n  }\r\n\r\n  componentWillUpdate(nextProps, nextState, nextContext) {\r\n        if (\r\n            this.props.survey.survey && this.props.survey.survey.questions && this.props.survey.survey.questions[0] &&\r\n            nextProps.survey.survey && nextProps.survey.survey.questions && nextProps.survey.survey.questions[0] &&\r\n            this.props.survey.survey.questions[0].answers !== nextProps.survey.survey.questions[0].answers &&\r\n            this.props.survey.survey.questions[0].answers !== \"undefined\" &&\r\n            nextProps.survey.survey.questions[0].answers !== \"undefined\"\r\n        ) {\r\n            return true;\r\n        }\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps, nextContext) {\r\n        if (nextProps.survey.survey && nextProps.survey.survey.questions) {\r\n            this.setState({questions: nextProps.survey.survey.questions});\r\n        }\r\n  }\r\n\r\n    handleSubmit = (e) => {\r\n        console.log(\"!!!!SurveyForm, handleSubmit, HERE, e\", e);\r\n        e.preventDefault();\r\n        const {Answer} = this.state;\r\n        console.log(\"SurveyForm, handleSubmit, Answer\", Answer);\r\n        Answer.forEach( (val) => this.props.onRegisterAnswer(val.AnswerOpt, val.questionId, this.props.app.user_id));\r\n        alert(\"Thank you for participating in this survey!\");\r\n        this.props.history.push(\"/surveys\");\r\n        alert(\"Thanks you for taking the survey\");\r\n        \r\n    };\r\n\r\n    onSave = val => {\r\n        let newAnswer = null;\r\n        if (this.state.Answer) {\r\n            newAnswer = this.state.Answer.filter( ans => ans.questionId !== val.questionId);\r\n        } else {\r\n            newAnswer = [];\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            Answer: [...newAnswer, val]\r\n        }));\r\n        const answerElement = document.getElementById(val.answerId);\r\n\r\n        if (answerElement && answerElement !== \"undefined\") {\r\n            document.getElementById(val.answerId).checked = \"checked\";\r\n        }\r\n    };\r\n\r\n  render() {\r\n      if (this.props.survey && this.props.survey.survey ) {\r\n        const {Answer} = this.state;\r\n        let questions = this.props.survey.survey.questions.slice(0);\r\n            questions = questions.map( (q, idx) => {\r\n                if (q.answers === undefined) {\r\n                    return <div>Loading...</div>\r\n                }\r\n                return (\r\n                    <div key={idx}>\r\n                        <FormQuestions  {...q}/>\r\n                        <AnswerOpt \r\n                            questionId={q.id}\r\n                            AnswerOption={q.answers}\r\n                            Answer={Answer}\r\n                            onSave={this.onSave}\r\n                            question={q}\r\n                        />\r\n                    </div>\r\n                );\r\n            });\r\n\r\n        return (\r\n            <div className={classes.survey_form}>\r\n                <h1>{this.props.survey.survey.title}</h1>\r\n                <form onSubmit={this.handleSubmit}>\r\n                    {questions}\r\n                    <Button\r\n                        type=\"submit\"\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        style={styles.button}>\r\n                        Submit\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        );\r\n\r\n      } else {\r\n          return (<div>Loading...</div>)\r\n      }\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    button: {\r\n      backgroundColor: '#2196f3',\r\n      marginTop: 30,\r\n      marginBottom: 30\r\n    }\r\n};\r\n\r\nconst maptStateToProps = (state) => {\r\n    return {\r\n        survey: state.survey,\r\n        app: state.app\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onGetSurveyAndQuestions: (survey_id) => dispatch(asyncGetSurveyAndQuestions(survey_id)),\r\n        onRegisterAnswer: (answer, question, user_id) => dispatch(asynRegisterAnswer(answer, question, user_id)),\r\n        onLogoutUser: () => dispatch(logoutUser())\r\n    }\r\n};\r\n\r\nexport default Protected(connect(maptStateToProps, mapDispatchToProps)(withErrorHandler(SurveyForm, axios)));\r\n","import React, { Component } from 'react'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\n\r\nimport {Link} from 'react-router-dom'\r\nimport AuthHandler from '../components/Login/AuthHandler';\r\n\r\nexport class Drawer extends Component {  \r\n  AuthHandler = new AuthHandler ();\r\n    state = {\r\n        left: false,\r\n      };\r\n    \r\n      toggleDrawer = (side, open) => () => {\r\n        this.setState({\r\n          [side]: open,\r\n        });\r\n      };\r\n    \r\n  render() {\r\n      const style = {\r\n        drawerStyle:{\r\n            padding: '0.5rem 2rem',\r\n      },\r\n        link:{\r\n            textDecoration:'none'\r\n        }\r\n    }\r\n      const menuItemsAdmin = [\r\n          {\r\n              name: \"Home\",\r\n              link: \"/home\",\r\n          },\r\n          {\r\n              name: \"Surveys\",\r\n              link: \"/surveys\",\r\n              \r\n          },\r\n          {\r\n              name: \"Users Manager\",\r\n              link: \"/usersmanager\",\r\n              \r\n          },\r\n          {\r\n            name: \"Result Chart\",\r\n            link: \"/result\"\r\n          },\r\n          {\r\n            name: \"Survey Manager\",\r\n            link: \"/surveysmanager\"\r\n          },\r\n          {\r\n              name: \"Accounts Manager\",\r\n              link: \"/accountsmanager\",\r\n          },\r\n      ]\r\n\r\n      const sideListAdmin = (\r\n        <div>\r\n          {menuItemsAdmin.map( (items, idx) => {\r\n            return (\r\n            <List key={idx} style={style.link} component={Link} to={items.link}>\r\n                <ListItem button>\r\n                    \r\n                    <ListItemText primary={items.name} />\r\n                </ListItem>\r\n            </List>)\r\n          })}\r\n\r\n        </div>\r\n      );\r\n      //From here company\r\n\r\n      const menuItemsCompany = [\r\n        {\r\n            name: \"Home\",\r\n            link: \"/home\",\r\n        },\r\n        {\r\n            name: \"Surveys\",\r\n            link: \"/surveys\",\r\n            \r\n        },\r\n        {\r\n          name: \"Result Chart\",\r\n          link: \"/result\"\r\n        },\r\n        {\r\n          name: \"Survey Manager\",\r\n          link: \"/surveysmanager\"\r\n        }\r\n    ]\r\n\r\n    const sideListCompany = (\r\n      <div>\r\n        {menuItemsCompany.map( (items, idx) => {\r\n          return (\r\n          <List key={idx} style={style.link} component={Link} to={items.link}>\r\n              <ListItem button>\r\n                  <ListItemText primary={items.name} />\r\n              </ListItem>\r\n          </List>)\r\n        })}\r\n\r\n      </div>\r\n    );\r\n\r\n    //From here Client\r\n\r\n    const menuItemsClient = [\r\n      {\r\n          name: \"Home\",\r\n          link: \"/home\",\r\n      },\r\n      {\r\n          name: \"Surveys\",\r\n          link: \"/surveys\",\r\n      }\r\n  ]\r\n\r\n  const sideListClient = (\r\n    <div>\r\n      {menuItemsClient.map( (items, idx) => {\r\n        return (\r\n        <List key={idx} style={style.link} component={Link} to={items.link}>\r\n            <ListItem button>\r\n                <ListItemText primary={items.name} />\r\n            </ListItem>\r\n        </List>)\r\n      })}\r\n\r\n    </div>\r\n  );\r\n\r\n    return (\r\n      <div style={style.drawerStyle}>\r\n        <IconButton onClick={this.toggleDrawer('left', true)} style={{outline:\"none\"}} color=\"inherit\" aria-label=\"Menu\">\r\n            <MenuIcon />\r\n        </IconButton>\r\n\r\n        <SwipeableDrawer\r\n        anchor=\"left\"\r\n        open={this.state.left}\r\n        onClose={this.toggleDrawer('left', false)}\r\n        onOpen={this.toggleDrawer('left', true)}\r\n      >\r\n        <div\r\n          tabIndex={0}\r\n          role=\"button\"\r\n          onClick={this.toggleDrawer('left', false)}\r\n          onKeyDown={this.toggleDrawer('left', false)}\r\n        >\r\n      \r\n        {!this.props.isLogged ? null : [\r\n          this.AuthHandler.getData().type === \"admin\" ? sideListAdmin :\r\n          [\r\n            this.AuthHandler.getData().type === \"company\" ? sideListCompany : [\r\n              this.AuthHandler.getData().type === \"client\" ? sideListClient : null\r\n            ]\r\n          ]\r\n        ]\r\n        }\r\n          \r\n        </div>\r\n      </SwipeableDrawer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Drawer","import React, { Component } from 'react'\r\nimport {connect} from \"react-redux\";\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Drawer from './Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport {NavLink} from 'react-router-dom';\r\nimport AuthHandler from '../components/Login/AuthHandler';\r\nimport {logoutUser} from '../store/actions/';\r\n\r\nexport class Header extends Component {\r\n    AuthHandler = new AuthHandler();\r\n    constructor(){\r\n        super();\r\n        this.state={\r\n            anchorEl: null\r\n        }\r\n    }\r\n\r\n    showDropdown = (e) => {\r\n        e.preventDefault();\r\n        this.setState({anchorEl : e.currentTarget});\r\n    };\r\n\r\n    closeDropdown = () =>{\r\n        this.setState({anchorEl : null});\r\n    };\r\n\r\n    _handleLogout = () => {\r\n        console.log(\"App, handleLogout\");\r\n        this.AuthHandler.logout();\r\n        this.props.onLogoutUser();\r\n        this.props.history.replace('/login');\r\n    };\r\n\r\n  render() {\r\n    const navProps = {\r\n        position:\"relative\", \r\n        style:{\r\n            position: \"fixed\",\r\n            backgroundColor: '#384048',\r\n            color:'#FFF',\r\n            fontWeight: 700,\r\n            marginRight: 'auto',\r\n            flexDirection: 'row',\r\n            height: '4rem',\r\n            boxShadow: '0px 2px 4px -1px rgba(0, 0, 0, 0.2), 0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12)' \r\n        }\r\n    } \r\n    \r\n    const btnStyle = {\r\n        marginLeft: \"auto\",\r\n        padding: '0.9rem 2rem',\r\n        display:  !this.props.app.logged_in ? \"none\" : \"block\"\r\n    }\r\n\r\n    const toolbarStyle = {\r\n        marginLeft:  !this.props.app.logged_in ? 'auto' : '0',\r\n        marginRight:  !this.props.app.logged_in ? 'auto' : '0',\r\n        fontSize: \"2rem\",\r\n        fontWeight: 400,\r\n        letterSpacing: \".6rem\",\r\n        textTransform: \"uppercase\"\r\n\r\n    } \r\n    const { anchorEl } = this.state;\r\n    return (\r\n      <div>\r\n        <AppBar {...navProps}>\r\n\r\n        {!this.props.app.loggedIn ? null : <Drawer isLogged={this.props.app.logged_in}/> }\r\n            \r\n\r\n        <Toolbar style={{...toolbarStyle}}> Survey App </Toolbar>\r\n\r\n          {!this.props.app.loggedIn ? null :  <div style={{...btnStyle}}>\r\n          <Button\r\n            style = {{color:\"#E8BD36\", outline:\"none\", letterSpacing:\".4rem\", boxShadow:\"0px 0px 5px\"}}\r\n            aria-owns={anchorEl ? 'simple-menu' : undefined}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.showDropdown}\r\n            >\r\n            <span style={{marginRight:\"0.4rem\"}}>Hello</span> {this.props.app.firstname}!\r\n          </Button>\r\n        <Menu\r\n          id=\"simple-menu\"\r\n          anchorEl={anchorEl}\r\n          open={Boolean(anchorEl)}\r\n          onClose={this.closeDropdown}\r\n          className=\"dropMenu\"\r\n        >\r\n          <MenuItem onClick={this.closeDropdown}><NavLink to=\"/user\">Profile</NavLink></MenuItem>\r\n          <MenuItem onClick={this.closeDropdown}><NavLink to=\"/account\">My account</NavLink></MenuItem>\r\n          <MenuItem onClick={this.closeDropdown}>\r\n                <button\r\n                  className=\"btn-sm btn-warning\"\r\n                  onClick={this._handleLogout}>\r\n                  Logout\r\n                </button>\r\n          </MenuItem>\r\n        </Menu></div>}\r\n\r\n        </AppBar>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n          onLogoutUser: () => dispatch(logoutUser())\r\n    };\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        app: state.app\r\n    }\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React, {Component} from 'react';\r\nimport {Route, withRouter, Redirect, Switch} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport axios from '../axios-survey';\r\n\r\nimport {\r\n    asyncFetchFirstName,\r\n    setUserAccountFK,\r\n    setAccountId,\r\n    asyncLoginUser,\r\n    logoutUser\r\n} from \"../store/actions\";\r\nimport classes from './App.css';\r\n\r\n\r\n// import Auxiliary from \"../hoc/Auxiliary/Auxiliary\";\r\n// import Registration from \"../components/Registration/UserForm\";\r\nimport Account from '../components/Accounts/Account/Account';\r\nimport User from '../components/Users/User/User';\r\nimport HomePage from '../components/HomePage/HomePage';\r\nimport SurveyBuilder from '../components/Surveys/SurveyBuilder/SurveyBuilder';\r\nimport SurveysManager from '../components/Surveys/SurveysManager/SurveysManager';\r\nimport AccountsManager from '../components/Accounts/AccountsManager/AccountsManager';\r\nimport UsersManager from '../components/Users/UsersManager/UsersManager';\r\nimport UserForm from '../components/Registration/UserForm';\r\nimport withErrorHandler from '../hoc/withErrorHandler/withErrorHandler';\r\nimport SurveysList from '../components/Surveys/SurveysList/SurveysList';\r\nimport Result from '../components/Chart/Result';\r\nimport Login from '../components/Login/Login';\r\nimport AuthHandler from '../components/Login/AuthHandler';\r\nimport SurveyForm from '../components/Surveys/Survey/SurveyForm';\r\nimport Header from './Header';\r\n\r\n\r\nclass App extends Component {\r\n    AuthHandler = new AuthHandler();\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            id: ''\r\n        };\r\n      }      \r\n\r\n\r\n    componentDidMount() {\r\n        if (this.AuthHandler.loggedIn() && this.AuthHandler.tokenCheck()) {\r\n            this.props.onLoginUser(this.AuthHandler.getData().id);\r\n            this._setInfo();\r\n        }\r\n    }\r\n\r\n    _setInfo() {\r\n        this.setState({id: this.AuthHandler.getData().id}, function () {\r\n        });\r\n    }\r\n\r\n    _handleLogout = () => {\r\n        this.AuthHandler.logout();\r\n        this.props.onLogoutUser();\r\n        this.props.history.replace('/login');\r\n    };\r\n\r\n    componentDidUpdate() {\r\n        if (this.AuthHandler.isTokenExpired(localStorage.getItem('id_token'))) {\r\n            alert('token has expired');\r\n            this._handleLogout();\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const footerStyle= {\r\n            padding: \"1.5rem 0\",\r\n            background: \"#2d343a\",\r\n            color: \"white\",\r\n            fontSize:\"1.5rem\",\r\n          }\r\n\r\n    return (\r\n      <div className={classes.App}>\r\n          <Header history={this.props.history}/>\r\n          <Switch>\r\n          <Route path=\"/home\" component={HomePage} />\r\n          <Route path=\"/account\" component={Account}/>\r\n          <Route path=\"/user\" component={User} />\r\n          <Route path=\"/surveybuilder\" component={SurveyBuilder} />\r\n          <Route path=\"/surveysmanager\" component={SurveysManager} />\r\n          <Route path=\"/accountsmanager\" component={AccountsManager} />\r\n          <Route path=\"/usersmanager\" component={UsersManager} />\r\n          <Route path=\"/registration\" component={UserForm} />\r\n          <Route path=\"/surveys\" component={SurveysList} />\r\n          <Route path=\"/survey\" component={SurveyForm} />\r\n          <Route path=\"/result\" component={Result} />\r\n          <Route path=\"/login\" component={Login}/>\r\n          <Redirect to=\"/home\"/>\r\n        </Switch>\r\n        <footer style={{...footerStyle}}>&copy; Survey Inc</footer>\r\n</div>\r\n);\r\n}//this is end of render\r\n}//This is end of class\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        app: state.app,\r\n        account: state.account\r\n    };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onFetchFirstname: account_id => dispatch(asyncFetchFirstName(account_id)),\r\n        onSetAccountId: account_id => dispatch(setAccountId(account_id)),\r\n        onSetUserAccountFK: accountId => dispatch(setUserAccountFK(accountId)),\r\n        onLoginUser: user_id => dispatch(asyncLoginUser(user_id)),\r\n        onLogoutUser: () => dispatch(logoutUser())\r\n    };\r\n};\r\n\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(withErrorHandler(App, axios))\r\n);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const updateObject = (oldObject, updatedValues) => {\r\n    return {\r\n        ...oldObject,\r\n        ...updatedValues\r\n    }\r\n};","/*\r\n* surveyBuilderReducers.js\r\n* */\r\n\r\nimport {\r\n    CREATE_QUESTION,\r\n    SAVE_QUESTION,\r\n    EDIT_QUESTION,\r\n    DELETE_QUESTION,\r\n    CANCEL_EDIT_QUESTION,\r\n    SHOW_ANSWERS,\r\n    HIDE_ANSWERS,\r\n    CREATE_ANSWER,\r\n    EDIT_ANSWER,\r\n    CANCEL_EDIT_ANSWER,\r\n    SAVE_ANSWER,\r\n    DELETE_ANSWER,\r\n    FETCH_SURVEY,\r\n    SAVE_SURVEY,\r\n    FETCH_SURVEY_FAILED,\r\n    SAVE_SURVEY_FAILED,\r\n    DELETE_QUESTION_FAILED,\r\n    SAVE_QUESTION_FAILED,\r\n    CREATE_QUESTION_FAILED,\r\n    DELETE_ANSWER_FAILED,\r\n    SAVE_ANSWER_FAILED,\r\n    CREATE_ANSWER_FAILED,\r\n    CREATE_SURVEY,\r\n    CREATE_SURVEY_FAILED,\r\n    SET_SURVEY_ID,\r\n    EDIT_SURVEY_DATA,\r\n    SET_SURVEY_TITLE, SET_ANSWER_STRING, SET_QUESTION_STRING\r\n} from \"../actions/actionsTypes\";\r\nimport {updateObject} from \"../utility\";\r\nconst initialState = {\r\n    survey: null,\r\n    error: false\r\n};\r\n\r\nconst surveyBuilderReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SAVE_SURVEY: {\r\n            const survey = {...action.survey};\r\n            const questions = [...state.survey.questions];\r\n            survey.saveSuccess = true;\r\n            survey.editingSurvey = false;\r\n            survey.newSurvey = false;\r\n            survey.questions = questions;\r\n            survey.saveSuccess = true;\r\n            return {...state, survey};\r\n        }\r\n        case SAVE_SURVEY_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n\r\n        case FETCH_SURVEY: {\r\n            const questions = action.survey.questions.slice(0);\r\n            questions.forEach(question => {\r\n                question.editing = false;\r\n                question.showAnswers = false;\r\n            });\r\n            const survey = {...action.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case FETCH_SURVEY_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case CREATE_SURVEY: {\r\n            const survey = {\r\n                id: action.id,\r\n                title: \"\",\r\n                questions: null,\r\n                newSurvey: true\r\n            };\r\n            const createSurveyResponse = {...state, survey};\r\n            return {...state, survey};\r\n        }\r\n        case CREATE_SURVEY_FAILED: {\r\n            return updateObject({error: true, errorMessage: action.error});\r\n        }\r\n        case SET_SURVEY_ID: {\r\n            const survey = {\r\n                id: action.id,\r\n                newSurvey: false\r\n            };\r\n            return {...state, survey};\r\n        }\r\n\r\n        case SET_SURVEY_TITLE: {\r\n            const survey = {...action.survey};\r\n            survey.title = action.title;\r\n            if (survey.questions) {\r\n                survey.questions = [...state.survey.questions];\r\n            }\r\n            return {...state, survey};\r\n        }\r\n\r\n        case EDIT_SURVEY_DATA: {\r\n            const survey = {...action.survey};\r\n            survey.editingSurvey = true;\r\n            return {...state, survey};\r\n        }\r\n        case CREATE_ANSWER: {\r\n            if (!Array.isArray(state.survey.questions) || !state.survey.questions.length) {\r\n                return state;\r\n            } else {\r\n                let questions = null;\r\n                let newAnswers = null;\r\n                let newAnswer = action.answer;\r\n                newAnswer = {\r\n                    ...newAnswer,\r\n                    editing: true\r\n                };\r\n\r\n                questions = state.survey.questions.slice(0);\r\n                questions.forEach(question => {\r\n                    if (question.id === newAnswer.questionFK) {\r\n                        if (!Array.isArray(question.answers) || !question.answers.length) {\r\n                            question.answers = [];\r\n                        }\r\n                        newAnswers = question.answers.slice(0);\r\n                        if (!newAnswers.length) {\r\n                            newAnswers = [newAnswer];\r\n                        } else {\r\n                            newAnswers.push(newAnswer);\r\n                        }\r\n                        question.answers = newAnswers;\r\n                    }\r\n                });\r\n                const survey = {...state.survey};\r\n                survey.questions = questions;\r\n                return {...state, survey};\r\n            }\r\n        }\r\n        case CREATE_ANSWER_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case EDIT_ANSWER: {\r\n            const questions = state.survey.questions.slice(0);\r\n\r\n            questions.forEach((question, index) => {\r\n                if (question.id === action.answer.questionFK) {\r\n                    const newAnswers = question.answers.slice(0);\r\n                    newAnswers.forEach(answer => {\r\n                        if (answer.id === action.answer.id) {\r\n                            answer.editing = true;\r\n                        }\r\n                    });\r\n                    questions.answers = newAnswers;\r\n                }\r\n            });\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case SET_ANSWER_STRING: {\r\n            const survey = {...state.survey};\r\n            const questions = [...state.survey.questions];\r\n            questions.forEach(question => {\r\n                if (question.answers) {\r\n                    const answers = [...question.answers];\r\n                    answers.forEach(answer => {\r\n                        if (answer.id === action.id) {\r\n                            answer.answer = action.answer;\r\n                        }\r\n                    });\r\n                    question.answers = answers;\r\n                }\r\n            });\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case SAVE_ANSWER: {\r\n            const questions = state.survey.questions.slice(0);\r\n            let newAnswers = null;\r\n            let newAnswer = action.answer;\r\n            newAnswer = {\r\n                ...newAnswer,\r\n                editing: false\r\n            };\r\n            questions.forEach(question => {\r\n                if (question.id === newAnswer.questionFK) {\r\n                    newAnswers = question.answers.slice(0);\r\n                    newAnswers.forEach(answer => {\r\n                        if (answer.id === action.answer.id) {\r\n                            answer.editing = false;\r\n                        }\r\n                    })\r\n                }\r\n                question.answers = newAnswers;\r\n            });\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case SAVE_ANSWER_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case CANCEL_EDIT_ANSWER: {\r\n            let canceledIndex = null;\r\n            let questions = state.survey.questions.slice(0);\r\n            let newAnswers = null;\r\n            questions.forEach((question) => {\r\n                if (question.id === action.answer.questionFK) {\r\n                    newAnswers = question.answers.slice(0);\r\n                    newAnswers.forEach((answer, index) => {\r\n                        if (answer.id === action.answer.id) {\r\n                            if (action.answer.answer_option) {\r\n                                answer.editing = false;\r\n                                canceledIndex = -1;\r\n                            } else {\r\n                                canceledIndex = index;\r\n                            }\r\n                        }\r\n                    });\r\n                    if (canceledIndex > -1) {\r\n                        newAnswers.splice(canceledIndex, 1);\r\n                    }\r\n                    question.answers = newAnswers;\r\n                }\r\n            });\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case DELETE_ANSWER: {\r\n            let questions = state.survey.questions.slice(0);\r\n            questions.forEach((question) => {\r\n                if (question.id === action.answer.questionFK) {\r\n                    let deletedIndex = null;\r\n                    const newAnswers = question.answers.slice(0);\r\n                    newAnswers.forEach((answer, index) =>{\r\n                        if (answer.id === action.answer.id) {\r\n                            deletedIndex = index;\r\n                        }\r\n                    });\r\n                    newAnswers.splice(deletedIndex, 1);\r\n                    question.answers = newAnswers;\r\n                }\r\n            });\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case DELETE_ANSWER_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n\r\n        case CREATE_QUESTION: {\r\n            if (!Array.isArray(state.survey.questions)) { // || !state.survey.questions.length\r\n                return state;\r\n            } else {\r\n                let questions = null;\r\n                let newQuestion = action.question;\r\n                newQuestion = {\r\n                    ...newQuestion,\r\n                    editing: true,\r\n                    answers: null\r\n                };\r\n\r\n                if (!state.survey.questions.length) {\r\n                    questions = [newQuestion];\r\n                } else {\r\n                    questions = state.survey.questions.slice(0);\r\n                    questions.push(newQuestion);\r\n                }\r\n                const survey = {...state.survey};\r\n                survey.questions = questions;\r\n\r\n                return {\r\n                    ...state, survey\r\n                };\r\n            }\r\n        }\r\n        case CREATE_QUESTION_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case SET_QUESTION_STRING: {\r\n            const survey = {...state.survey};\r\n            const questions = [...state.survey.questions];\r\n            questions.forEach(question => {\r\n                if (question.id === action.id) {\r\n                    question.question = action.question;\r\n                }\r\n            });\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case SAVE_QUESTION: {\r\n            if (!Array.isArray(state.survey.questions)) {\r\n                return state;\r\n            } else {\r\n                let questions = null;\r\n                const newQuestion = action.question;\r\n                if (!state.survey.questions.length) {\r\n                    questions = [newQuestion];\r\n                } else {\r\n                    questions = state.survey.questions.slice(0);\r\n                    questions.forEach(question => {\r\n                       if (question.id === action.question.id) {\r\n                           question.id = newQuestion.id;\r\n                           question.question = newQuestion.question;\r\n                           question.editing = false;\r\n                           question.showAnswers = false;\r\n                           question.answers = newQuestion.answers;\r\n                       }\r\n                    });\r\n                }\r\n                const survey = {...state.survey};\r\n                survey.questions = questions;\r\n                return {\r\n                    ...state, survey\r\n                }\r\n            }\r\n        }\r\n        case SAVE_QUESTION_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n\r\n        case CANCEL_EDIT_QUESTION: {\r\n            let canceledIndex = null;\r\n            let questions = state.survey.questions.slice(0);\r\n            questions.forEach((question, index) => {\r\n                if (question.id === action.id) {\r\n                    if (action.value) {\r\n                        question.editing = false;\r\n                        canceledIndex = -1;\r\n                    } else {\r\n                        canceledIndex = index;\r\n                    }\r\n                }\r\n            });\r\n            if (canceledIndex > -1) {\r\n                questions.splice(canceledIndex, 1);\r\n            }\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {\r\n                ...state, survey\r\n            }\r\n        }\r\n        case SHOW_ANSWERS: {\r\n            let questions = state.survey.questions.slice(0);\r\n            questions.forEach(question => {\r\n                if (question.id === action.question.id) {\r\n                    question.showAnswers = true;\r\n                }\r\n            });\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case HIDE_ANSWERS: {\r\n            let questions = state.survey.questions.slice(0);\r\n            questions.forEach(question => {\r\n                if (question.id === action.question.id) {\r\n                    question.showAnswers = false;\r\n                }\r\n            });\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case EDIT_QUESTION: {\r\n            let questions = state.survey.questions.slice(0);\r\n            questions.forEach((question, index) => {\r\n                if (question.id === action.question.id) {\r\n                    question.editing = true;\r\n                    question.showAnswers = false;\r\n                }\r\n            });\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case DELETE_QUESTION:{\r\n            let deletedIndex = null;\r\n            let questions = state.survey.questions.slice(0);\r\n            questions.forEach((question, index) => {\r\n                if (question.id === action.id) {\r\n                    deletedIndex = index;\r\n                }\r\n            });\r\n            questions.splice(deletedIndex, 1);\r\n            const survey = {...state.survey};\r\n            survey.questions = questions;\r\n            return {...state, survey};\r\n        }\r\n        case DELETE_QUESTION_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default surveyBuilderReducers;","/*\r\n* accountReducers.js\r\n* */\r\n\r\nimport {\r\n    FETCH_ACCOUNT,\r\n    CREATE_ACCOUNT,\r\n    EDIT_ACCOUNT,\r\n    SAVE_ACCOUNT,\r\n    RESET_ACCOUNT,\r\n    SET_ACCOUNT_ID,\r\n    CANCEL_EDIT_ACCOUNT,\r\n    FETCH_ACCOUNT_FAILED,\r\n    CREATE_ACCOUNT_FAILED,\r\n    SAVE_ACCOUNT_FAILED,\r\n    CREATE_NEW_ACCOUNT\r\n} from \"../actions/actionsTypes\";\r\n\r\nimport moment from 'moment';\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    id: null,\r\n    account: \"\",\r\n    expireDate: \"\",\r\n    isExpired: null,\r\n    joinedDate: \"\",\r\n    modifiedDate: \"\",\r\n    password: \"\",\r\n};\r\n\r\nconst accountReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_ACCOUNT: {\r\n            if (action.account) {\r\n                const acnt = action.account;\r\n                const useraccount = {\r\n                    id: acnt.id,\r\n                    account: acnt.account,\r\n                    password: acnt.password,\r\n                    joinedDate: acnt.joinedDate,\r\n                    expireDate: acnt.expireDate,\r\n                    isExpired: acnt.isExpired,\r\n                    modifiedDate: acnt.modifiedDate,\r\n                    newAccount: false,\r\n                    editing: false,\r\n                    fetchSuccess: true\r\n                };\r\n\r\n                return {...state, ...useraccount};\r\n            }\r\n            return state;\r\n        }\r\n        case FETCH_ACCOUNT_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case CREATE_ACCOUNT: {\r\n            const account = {\r\n                id: action.id,\r\n                account: \"\",\r\n                expireDate: null,\r\n                isExpired: null,\r\n                joinedDate: moment(),\r\n                modifiedDate: moment(),\r\n                password: \"\",\r\n                newAccount: true,\r\n                routing: true,\r\n                editing: true\r\n            };\r\n            return {...state, ...account};\r\n        }\r\n        case CREATE_ACCOUNT_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n\r\n        case CREATE_NEW_ACCOUNT: {\r\n            const newAccount = {\r\n                id: action.account.id,\r\n                account: action.account.account,\r\n                expireDate: action.account.expireDate,\r\n                joinedDate: action.account.joinedDate,\r\n                password: action.account.password,\r\n                newAccount: false,\r\n                editing: false,\r\n                saveSuccess: true\r\n            };\r\n            return {...newAccount};\r\n        }\r\n\r\n        case EDIT_ACCOUNT: {\r\n            let account = action.account;\r\n            account = {\r\n                ...account,\r\n                newAccount: false,\r\n                editing: true\r\n            };\r\n            return {...state, ...account};\r\n        }\r\n\r\n        case CANCEL_EDIT_ACCOUNT: {\r\n            let account = {...action.account};\r\n            account = {\r\n                ...account,\r\n                newAccount: false,\r\n                editing: false\r\n            };\r\n            return {...state, ...account};\r\n        }\r\n\r\n        case SAVE_ACCOUNT: {\r\n            let account = action.account;\r\n            account = {\r\n                ...account,\r\n                saveSuccess: true,\r\n                editing: false,\r\n                newAccount: false,\r\n                componentShouldUpdate: true\r\n            };\r\n            return {...state, ...account};\r\n        }\r\n        case SAVE_ACCOUNT_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case RESET_ACCOUNT: {\r\n            const account = {\r\n                id: action.id,\r\n                account: \"\",\r\n                expireDate: null,\r\n                isExpired: null,\r\n                joinedDate: moment(),\r\n                modifiedDate: moment(),\r\n                password: \"\",\r\n                routing: action.routing,\r\n                newAccount: action.newAccount,\r\n                editing: false,\r\n                componentShouldUpdate: true\r\n            };\r\n            const newState = {...state, ...account};\r\n            return {...state, ...account};\r\n        }\r\n\r\n        case SET_ACCOUNT_ID: {\r\n            return state;\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default accountReducers;\r\n","/*\r\n* userReducers.js\r\n* */\r\nimport {\r\n    FETCH_USER,\r\n    CREATE_USER,\r\n    EDIT_USER,\r\n    LIST_USERS,\r\n    RESET_USER,\r\n    SAVE_USER,\r\n    SET_DEFAULT_USER_ACCOUNT_ID,\r\n    FETCH_USER_FAILED,\r\n    CREATE_USER_FAILED,\r\n    SAVE_USER_FAILED,\r\n    LIST_USERS_FAILED,\r\n    SET_DEFAULT_USER_ACCOUNT_ID_FAILED\r\n} from \"../actions/actionsTypes\";\r\n\r\nimport moment from 'moment';\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    id: null,\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    accountFK: null,\r\n    email: \"\",\r\n    phone: \"\",\r\n    streetAddress: \"\",\r\n    postalCode: \"\",\r\n    birthdate: null,\r\n    rewards: \"\",\r\n    modifiedDate: \"\"\r\n};\r\n\r\nconst userReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FETCH_USER: {\r\n            if (action.user) {\r\n                const user = action.user;\r\n                const user_data = {\r\n                    id: user.id,\r\n                    firstname: user.firstname,\r\n                    lastname: user.lastname,\r\n                    accountFK: user.accountFK,\r\n                    email: user.email,\r\n                    phone: user.phone,\r\n                    streetAddress: user.streetAddress,\r\n                    postalCode: user.postalCode,\r\n                    rewards: user.rewards,\r\n                    birthdate: user.birthdate,\r\n                    modifiedDate: user.modifiedDate,\r\n                };\r\n                return {...state, ...user_data}\r\n            }\r\n            return state;\r\n        }\r\n        case FETCH_USER_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case CREATE_USER: {\r\n            if (action.id) {\r\n                const user_data = {\r\n                    id: action.id,\r\n                    firstname: \"\",\r\n                    lastname:\"\",\r\n                    accountFK: null,\r\n                    email: \"\",\r\n                    phone: \"\",\r\n                    streetAddress: \"\",\r\n                    postalCode: \"\",\r\n                    rewards: 0,\r\n                    birthdate: null,\r\n                    modifiedDate: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\r\n                    newUser: true\r\n                };\r\n                return {...state, ...user_data}\r\n            }\r\n            return state;\r\n        }\r\n        case CREATE_USER_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case EDIT_USER: {\r\n            if (action.user) {\r\n                const user = action.user;\r\n                const user_data = {\r\n                    id: user.id,\r\n                    firstname: user.firstname,\r\n                    lastname: user.lastname,\r\n                    accountFK: user.accountFK,\r\n                    email: user.email,\r\n                    phone: user.phone,\r\n                    streetAddress: user.streetAddress,\r\n                    postalCode: user.postalCode,\r\n                    rewards: user.rewards,\r\n                    birthdate: user.birthdate,\r\n                    modifiedDate: user.modifiedDate,\r\n                    routing: true\r\n                };\r\n                return {...state, ...user_data}\r\n            }\r\n            return state;\r\n        }\r\n        case SAVE_USER: {\r\n            const user = action.user;\r\n            user.saveSuccess = true;\r\n            return {...state, ...user};\r\n        }\r\n        case SAVE_USER_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n\r\n        case RESET_USER: {\r\n            const user = {\r\n                id: null,\r\n                firstname: \"\",\r\n                lastname: \"\",\r\n                accountFK: \"\",\r\n                email: \"\",\r\n                phone: \"\",\r\n                streetAddress: \"\",\r\n                postalCode: \"\",\r\n                rewards: 0,\r\n                birthdate: null,\r\n                modifiedDate: null,\r\n            };\r\n            return {...state, ...user};\r\n        }\r\n        case LIST_USERS: {\r\n            return state;\r\n        }\r\n        case LIST_USERS_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case SET_DEFAULT_USER_ACCOUNT_ID: {\r\n            const user = {...state.user};\r\n            user.accountFK = action.accountId;\r\n            return {...state, ...user};\r\n        }\r\n        case SET_DEFAULT_USER_ACCOUNT_ID_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default userReducers;","import {\r\n    FETCH_USER_FIRSTNAME,\r\n    LOGIN_USER,\r\n    LOGIN_USER_FAILED, LOGOUT_USER,\r\n    SET_ACCOUNT_ID,\r\n    SET_ACCOUNT_ID_NAME, USER_LOGIN, USER_LOGIN_FAILED\r\n} from \"../actions/actionsTypes\";\r\n\r\nconst initialState = {\r\n    loggged_in: false,\r\n    loggedIn: false,\r\n    account_id: null,\r\n    user_id: null,\r\n    type: \"\",\r\n    email: \"\",\r\n    firstname: \"\"\r\n};\r\n\r\nconst appReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOGIN_USER: {\r\n            return {\r\n                logged_in: true,\r\n                loggedIn: true,\r\n                account_id: action.account_id,\r\n                user_id: action.user_id,\r\n                firstname: action.user_name\r\n            }\r\n        }\r\n        case LOGIN_USER_FAILED: {\r\n            return {...state, error: true, errorMessage: action.error};\r\n        }\r\n        case USER_LOGIN: {\r\n            return {\r\n                logged_in: true,\r\n                loggedIn: true,\r\n                account_id: action.data.owner,\r\n                user_id: action.data.id,\r\n                type: action.data.type,\r\n                email: action.data.email,\r\n                firstname: action.data.firstname\r\n            }\r\n        }\r\n        case USER_LOGIN_FAILED: {\r\n            return {...state, error: true, errorMessage: action.error};\r\n        }\r\n        case LOGOUT_USER: {\r\n            return {...initialState}\r\n        }\r\n\r\n        case SET_ACCOUNT_ID: {\r\n           return  {account_id: action.id, firstname: action.name}\r\n        }\r\n        case SET_ACCOUNT_ID_NAME: {\r\n            const newApp = {\r\n                loggedIn: true,\r\n                logged_in: true,\r\n                account_id: action.account.id,\r\n                user_id: action.user.id,\r\n                firstname: action.user.firstname\r\n            };\r\n            return {...newApp};\r\n        }\r\n        case FETCH_USER_FIRSTNAME: {\r\n            const app = {\r\n                account_id: action.account_id,\r\n                firstname: action.firstname\r\n            };\r\n            return {...app};\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default appReducers;\r\n","import {\r\n    DELETE_SURVEY, DELETE_SURVEY_FAILED,\r\n    LIST_SURVEYS, LIST_SURVEYS_FAILED,\r\n} from \"../actions/actionsTypes\";\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    surveysManager: null\r\n};\r\n\r\nconst surveysManagerReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LIST_SURVEYS: {\r\n            const surveys = action.surveys;\r\n            return {\r\n                surveys: surveys\r\n            }\r\n        }\r\n        case LIST_SURVEYS_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case DELETE_SURVEY: {\r\n            let deleteIndex = null;\r\n            const surveys = state.surveys.slice(0);\r\n            surveys.forEach((survey, index) => {\r\n                if (survey.id === action.survey.id) {\r\n                    deleteIndex = index;\r\n                }\r\n            });\r\n            if (deleteIndex) {\r\n                surveys.splice(deleteIndex, 1);\r\n            }\r\n            return {surveys};\r\n        }\r\n        case DELETE_SURVEY_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n    };\r\n\r\nexport default surveysManagerReducers;","import {\r\n    DELETE_USER, DELETE_USER_FAILED,\r\n    LIST_USERS, LIST_USERS_FAILED, SELECT_USER\r\n} from \"../actions/actionsTypes\";\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    usersManager: null,\r\n    selectedUser: null\r\n};\r\n\r\nconst usersManagerReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LIST_USERS: {\r\n            const users = action.users;\r\n            return {\r\n                    users: users\r\n            }\r\n        }\r\n        case LIST_USERS_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case SELECT_USER: {\r\n            return {...state, selectedUser: action.id}\r\n        }\r\n        case DELETE_USER: {\r\n            const users = state.users.slice(0);\r\n            let deleteIndex = null;\r\n            users.forEach((user, index) => {\r\n                if (user.id === action.id) {\r\n                    deleteIndex =  index;\r\n                }\r\n            });\r\n            users.splice(deleteIndex, 1);\r\n            return {users};\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n        case DELETE_USER_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n    }\r\n};\r\n\r\nexport default usersManagerReducers;","/*\r\n* accountsManagerReducers.js\r\n* */\r\nimport {\r\n    LIST_ACCOUNTS,\r\n    EDIT_ACCOUNT,\r\n    DELETE_ACCOUNT, LIST_ACCOUNTS_FAILED, DELETE_ACCOUNT_FAILED, SELECT_ACCOUNT\r\n} from \"../actions/actionsTypes\";\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    accountsManager: null,\r\n    selectedAccount: null\r\n};\r\n\r\nconst accountsManagerReducers = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LIST_ACCOUNTS: {\r\n            const accounts = action.surveys;\r\n            return {\r\n                accounts: accounts\r\n            }\r\n        }\r\n        case LIST_ACCOUNTS_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        case EDIT_ACCOUNT: {\r\n            return {selectedAccount: action.accountId}\r\n        }\r\n        case SELECT_ACCOUNT: {\r\n            return {...state, selectedAccount: action.id}\r\n        }\r\n        case DELETE_ACCOUNT: {\r\n            const accounts = state.accounts.slice(0);\r\n            let deleteIndex = null;\r\n            accounts.forEach((account, index) => {\r\n                if (account.id === action.accountId) {\r\n                    deleteIndex =  index;\r\n                }\r\n            });\r\n            accounts.splice(deleteIndex, 1);\r\n            return {accounts};\r\n        }\r\n        case DELETE_ACCOUNT_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default accountsManagerReducers;","/*\r\n* surveyReducers.js\r\n* */\r\nimport {\r\n    GET_SURVEY_AND_QUESTIONS, GET_SURVEY_AND_QUESTIONS_FAILED, REGISTER_ANSWER, REGISTER_ANSWER_FAILED, SET_SURVEY_ID,\r\n    SURVEY_LIST, SURVEY_LIST_FAILED\r\n} from \"../actions/actionsTypes\";\r\nimport {updateObject} from \"../utility\";\r\n\r\nconst initialState = {\r\n    surveys: null,\r\n    survey: null,\r\n    fetched: false\r\n};\r\n\r\nconst surveyReducers= (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SURVEY_LIST: {\r\n            return {surveys: action.surveys};\r\n        }\r\n        case SURVEY_LIST_FAILED: {\r\n            return {...state, error: true, errorMessage: action.error}\r\n        }\r\n        case REGISTER_ANSWER: {\r\n            return {...state, answerSavedSuccessfully: true};\r\n        }\r\n        case REGISTER_ANSWER_FAILED: {\r\n            return {...state, error: true, errorMessage: action.error}\r\n        }\r\n        case SET_SURVEY_ID: {\r\n            const survey  = {\r\n                id: action.survey_id,\r\n                title: \"\",\r\n                questions: null,\r\n                fetchData: true,\r\n                fetched: false\r\n            };\r\n            return {...state, survey}\r\n        }\r\n        case GET_SURVEY_AND_QUESTIONS: {\r\n            const questions = action.survey.questions.slice(0);\r\n            questions.forEach((question, index) => {\r\n                question.editing = false;\r\n                question.showAnswers = false;\r\n                const q = action.survey.questions[index];\r\n                let answers = null;\r\n                if (q.answers) {\r\n                    answers = q.answers.slice(0);\r\n                } else {\r\n                }\r\n                question.answers = answers;\r\n            });\r\n            const survey = {...action.survey};\r\n            survey.questions = questions;\r\n            survey.fetched = true;\r\n            const newState = {...state, survey};\r\n            return newState;\r\n        }\r\n        case GET_SURVEY_AND_QUESTIONS_FAILED: {\r\n            return updateObject(state, {error: true, errorMessage: action.error});\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n};\r\n\r\nexport default surveyReducers;","import {combineReducers} from 'redux';\r\n\r\nimport surveyBuilderReducers from \"./surveyBuilderReducers\";\r\nimport accountReducers from \"./accountReducers\";\r\nimport userReducers from \"./userReducers\";\r\nimport appReducers from \"./appReducers\";\r\nimport surveysManagerReducers from \"./surveysManagerReducers\";\r\nimport usersManagerReducers from \"./usersManagerReducers\";\r\nimport accounsManagerReducers from \"./accountsManagerReducers\";\r\nimport surveyReducers from \"./surveyReducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n    surveyBuilder: surveyBuilderReducers,\r\n    account: accountReducers,\r\n    user: userReducers,\r\n    app: appReducers,\r\n    surveysManager: surveysManagerReducers,\r\n    usersManager: usersManagerReducers,\r\n    accountsManager: accounsManagerReducers,\r\n    survey: surveyReducers\r\n});\r\n\r\nconst appReducer = (state, action) => {\r\n    if (action.type === 'LOGOUT_USER') {\r\n        state = undefined\r\n    }\r\n\r\n    return rootReducer(state, action)\r\n};\r\n\r\nexport default appReducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {createStore, applyMiddleware, compose} from 'redux';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport {Provider} from \"react-redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\nimport appReducer from \"./store/reducers\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst logger = store => {\r\n    return next => {\r\n        return action => {\r\n            const result = next(action);\r\n            return result;\r\n        };\r\n    };\r\n};\r\n\r\nlet store = createStore(appReducer, composeEnhancers(applyMiddleware(logger, thunk)));\r\n\r\nconst app = (\r\n    <Provider store={store}>\r\n        <BrowserRouter>\r\n            <App/>\r\n        </BrowserRouter>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"surveysManager\":\"SurveysManager__surveysManager__1bqn1\",\"table\":\"SurveysManager__table__1LSfY\",\"btn\":\"SurveysManager__btn__3CnWE\",\"btnPrimary\":\"SurveysManager__btnPrimary__37kYr\",\"btnDanger\":\"SurveysManager__btnDanger__3wehK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"accountManager\":\"AccountsManager__accountManager__1FTnL\",\"table\":\"AccountsManager__table__26olk\",\"btn\":\"AccountsManager__btn__31QYF\",\"btnPrimary\":\"AccountsManager__btnPrimary__11bBz\",\"btnDanger\":\"AccountsManager__btnDanger__3mYAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"usersManager\":\"UsersManager__usersManager__tod9r\",\"btn\":\"UsersManager__btn__11p11\",\"btnPrimary\":\"UsersManager__btnPrimary__3VbHp\",\"btnDanger\":\"UsersManager__btnDanger__1-Ggs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SurveysList__container__y0LO_\",\"item\":\"SurveysList__item__MKTIs\",\"check\":\"SurveysList__check__1He-9\",\"text\":\"SurveysList__text__2Hn13\"};"],"sourceRoot":""}